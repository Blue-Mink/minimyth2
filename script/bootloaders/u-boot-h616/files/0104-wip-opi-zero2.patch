From d06296f68d17f5729fddf36df5e118bffc70bf05 Mon Sep 17 00:00:00 2001
From: Jernej Skrabec <jernej.skrabec@siol.net>
Date: Thu, 26 Nov 2020 07:22:29 +0100
Subject: [PATCH 04/13] wip opi zero2

---
 arch/arm/dts/Makefile                         |   2 +-
 arch/arm/dts/sun50i-h6.dtsi                   |   8 +
 arch/arm/dts/sun50i-h616-orangepi-zero2.dts   | 229 ++++++++++++++++++
 arch/arm/mach-sunxi/Kconfig                   |   2 -
 arch/arm/mach-sunxi/dram_sun50i_h616.c        |  30 +--
 ...x6s_defconfig => orangepi_zero2_defconfig} |   4 +-
 drivers/net/sun8i_emac.c                      |   4 +-
 7 files changed, 258 insertions(+), 21 deletions(-)
 create mode 100644 arch/arm/dts/sun50i-h616-orangepi-zero2.dts
 rename configs/{tanix_tx6s_defconfig => orangepi_zero2_defconfig} (69%)

diff --git a/arch/arm/dts/Makefile b/arch/arm/dts/Makefile
index 4bd1bbbd..68bafa5b 100644
--- a/arch/arm/dts/Makefile
+++ b/arch/arm/dts/Makefile
@@ -606,7 +606,7 @@ dtb-$(CONFIG_MACH_SUN50I_H6) += \
 	sun50i-h6-orangepi-one-plus.dtb \
 	sun50i-h6-pine-h64.dtb
 dtb-$(CONFIG_MACH_SUN50I_H616) += \
-	sun50i-h6-orangepi-lite2.dtb
+	sun50i-h616-orangepi-zero2.dtb
 dtb-$(CONFIG_MACH_SUN50I) += \
 	sun50i-a64-amarula-relic.dtb \
 	sun50i-a64-bananapi-m64.dtb \
diff --git a/arch/arm/dts/sun50i-h6.dtsi b/arch/arm/dts/sun50i-h6.dtsi
index a117f479..976feec0 100644
--- a/arch/arm/dts/sun50i-h6.dtsi
+++ b/arch/arm/dts/sun50i-h6.dtsi
@@ -251,6 +251,14 @@
 				drive-strength = <40>;
 			};
 
+			ext_rgmii_h616_pins: rgmii2-pins {
+				pins = "PI0", "PI1", "PI2", "PI3", "PI4",
+				       "PI5", "PI7", "PI8", "PI9", "PI10",
+				       "PI11", "PI12", "PI13", "PI14", "PI15";
+				function = "emac";
+				drive-strength = <40>;
+			};
+
 			hdmi_pins: hdmi-pins {
 				pins = "PH8", "PH9", "PH10";
 				function = "hdmi";
diff --git a/arch/arm/dts/sun50i-h616-orangepi-zero2.dts b/arch/arm/dts/sun50i-h616-orangepi-zero2.dts
new file mode 100644
index 00000000..061d52ff
--- /dev/null
+++ b/arch/arm/dts/sun50i-h616-orangepi-zero2.dts
@@ -0,0 +1,229 @@
+// SPDX-License-Identifier: (GPL-2.0+ or MIT)
+/*
+ * Copyright (C) 2020 Arm Ltd.
+ */
+
+/dts-v1/;
+
+#include "sun50i-h6.dtsi"
+
+#include <dt-bindings/gpio/gpio.h>
+
+/ {
+	model = "OrangePi Zero2";
+	compatible = "xunlong,orangepi-zero2", "allwinner,sun50i-h616";
+
+	aliases {
+		ethernet0 = &emac;
+		serial0 = &uart0;
+	};
+
+	chosen {
+		stdout-path = "serial0:115200n8";
+	};
+
+	leds {
+		compatible = "gpio-leds";
+
+		power {
+			label = "orangepi:red:power";
+			gpios = <&pio 2 13 GPIO_ACTIVE_HIGH>; /* PC13 */
+			default-state = "on";
+		};
+
+		status {
+			label = "orangepi:green:status";
+			gpios = <&pio 2 12 GPIO_ACTIVE_HIGH>; /* PC12 */
+		};
+	};
+
+	reg_vcc5v: vcc5v {
+		/* board wide 5V supply directly from the USB-C socket */
+		compatible = "regulator-fixed";
+		regulator-name = "vcc-5v";
+		regulator-min-microvolt = <5000000>;
+		regulator-max-microvolt = <5000000>;
+		regulator-always-on;
+	};
+
+	reg_usb1_vbus: usb1-vbus {
+		compatible = "regulator-fixed";
+		regulator-name = "usb1-vbus";
+		regulator-min-microvolt = <5000000>;
+		regulator-max-microvolt = <5000000>;
+		enable-active-high;
+		gpio = <&pio 2 16 GPIO_ACTIVE_HIGH>; /* PC16 */
+		status = "okay";
+	};
+};
+
+&ehci0 {
+	status = "okay";
+};
+
+/*
+&ehci1 {
+	status = "okay";
+};
+*/
+
+/* USB 2 & 3 are on headers only. */
+
+&emac {
+	pinctrl-names = "default";
+	pinctrl-0 = <&ext_rgmii_h616_pins>;
+	phy-mode = "rgmii";
+	phy-handle = <&ext_rgmii_phy>;
+	phy-supply = <&reg_dcdce>;
+	allwinner,rx-delay-ps = <3100>;
+	allwinner,tx-delay-ps = <700>;
+	status = "okay";
+};
+
+&mdio {
+	ext_rgmii_phy: ethernet-phy@1 {
+		compatible = "ethernet-phy-ieee802.3-c22";
+		reg = <1>;
+	};
+};
+
+&mmc0 {
+	vmmc-supply = <&reg_dcdce>;
+	cd-gpios = <&pio 5 6 GPIO_ACTIVE_LOW>;
+	bus-width = <4>;
+	status = "okay";
+};
+
+&ohci0 {
+	status = "okay";
+};
+
+/*
+&ohci1 {
+	status = "okay";
+};
+*/
+
+&r_i2c {
+	status = "okay";
+
+	axp305: pmic@36 {
+		compatible = "x-powers, axp305", "x-powers,axp805",
+			     "x-powers,axp806";
+		reg = <0x36>;
+		interrupt-parent = <&r_intc>;
+		interrupts = <0 IRQ_TYPE_LEVEL_LOW>;
+		interrupt-controller;
+		#interrupt-cells = <1>;
+		x-powers,self-working-mode;
+		vina-supply = <&reg_vcc5v>;
+		vinb-supply = <&reg_vcc5v>;
+		vinc-supply = <&reg_vcc5v>;
+		vind-supply = <&reg_vcc5v>;
+		vine-supply = <&reg_vcc5v>;
+		aldoin-supply = <&reg_vcc5v>;
+		bldoin-supply = <&reg_vcc5v>;
+		cldoin-supply = <&reg_vcc5v>;
+
+		regulators {
+			reg_aldo1: aldo1 {
+				regulator-always-on;
+				regulator-min-microvolt = <3300000>;
+				regulator-max-microvolt = <3300000>;
+				regulator-name = "vcc-sys";
+			};
+
+			reg_aldo2: aldo2 {
+				regulator-min-microvolt = <3300000>;
+				regulator-max-microvolt = <3300000>;
+				regulator-name = "vcc3v3-ext";
+			};
+
+			reg_aldo3: aldo3 {
+				regulator-min-microvolt = <3300000>;
+				regulator-max-microvolt = <3300000>;
+				regulator-name = "vcc3v3-ext2";
+			};
+
+			reg_bldo1: bldo1 {
+				regulator-always-on;
+				regulator-min-microvolt = <1800000>;
+				regulator-max-microvolt = <1800000>;
+				regulator-name = "vcc1v8";
+			};
+
+			bldo2 {
+				/* unused */
+			};
+
+			bldo3 {
+				/* unused */
+			};
+
+			bldo4 {
+				/* unused */
+			};
+
+			cldo1 {
+				/* reserved */
+			};
+
+			cldo2 {
+				/* unused */
+			};
+
+			cldo3 {
+				/* unused */
+			};
+
+			reg_dcdca: dcdca {
+				regulator-always-on;
+				regulator-min-microvolt = <810000>;
+				regulator-max-microvolt = <1080000>;
+				regulator-name = "vdd-cpu";
+			};
+
+			reg_dcdcc: dcdcc {
+				regulator-always-on;
+				regulator-min-microvolt = <810000>;
+				regulator-max-microvolt = <1080000>;
+				regulator-name = "vdd-gpu-sys";
+			};
+
+			reg_dcdcd: dcdcd {
+				regulator-always-on;
+				regulator-min-microvolt = <1500000>;
+				regulator-max-microvolt = <1500000>;
+				regulator-name = "vdd-dram";
+			};
+
+			reg_dcdce: dcdce {
+				regulator-boot-on;
+				regulator-min-microvolt = <3300000>;
+				regulator-max-microvolt = <3300000>;
+				regulator-name = "vcc-eth-mmc";
+			};
+
+			sw {
+				/* unused */
+			};
+		};
+	};
+};
+
+&uart0 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&uart0_ph_pins>;
+	status = "okay";
+};
+
+&usb2otg {
+	dr_mode = "otg";
+	status = "okay";
+};
+
+&usb2phy {
+	usb0_vbus-supply = <&reg_vcc5v>;
+	usb1_vbus-supply = <&reg_usb1_vbus>;
+	status = "okay";
+};
diff --git a/arch/arm/mach-sunxi/Kconfig b/arch/arm/mach-sunxi/Kconfig
index 0d11ba39..ccda05eb 100644
--- a/arch/arm/mach-sunxi/Kconfig
+++ b/arch/arm/mach-sunxi/Kconfig
@@ -319,8 +319,6 @@ config MACH_SUN50I_H616
 	bool "sun50i (Allwinner H616)"
 	select ARM64
 	select DRAM_SUN50I_H616
-	select FIT
-	select SPL_LOAD_FIT
 	select SUNXI_GEN_SUN6I
 	select SUPPORT_SPL
 
diff --git a/arch/arm/mach-sunxi/dram_sun50i_h616.c b/arch/arm/mach-sunxi/dram_sun50i_h616.c
index eb4a8838..ddc1fd7d 100644
--- a/arch/arm/mach-sunxi/dram_sun50i_h616.c
+++ b/arch/arm/mach-sunxi/dram_sun50i_h616.c
@@ -242,11 +242,11 @@ static void mctl_phy_odt(void)
 	writel(0xe, SUNXI_DRAM_PHY0_BASE + 0x448);
 	writel(0xe, SUNXI_DRAM_PHY0_BASE + 0x44c);
 
-	writel(0x1c, SUNXI_DRAM_PHY0_BASE + 0x340);
-	writel(0x1c, SUNXI_DRAM_PHY0_BASE + 0x344);
+	writel(0xe, SUNXI_DRAM_PHY0_BASE + 0x340);
+	writel(0xe, SUNXI_DRAM_PHY0_BASE + 0x344);
 
-	writel(0x1c, SUNXI_DRAM_PHY0_BASE + 0x348);
-	writel(0x1c, SUNXI_DRAM_PHY0_BASE + 0x34c);
+	writel(0xe, SUNXI_DRAM_PHY0_BASE + 0x348);
+	writel(0xe, SUNXI_DRAM_PHY0_BASE + 0x34c);
 
 	writel(0x8, SUNXI_DRAM_PHY0_BASE + 0x380);
 	writel(0x8, SUNXI_DRAM_PHY0_BASE + 0x384);
@@ -657,8 +657,6 @@ static bool mctl_phy_bit_delay_compensation(struct dram_para *para)
 
 	setbits_le32(SUNXI_DRAM_PHY0_BASE + 0x54, 0x80);
 
-	clrbits_le32(SUNXI_DRAM_PHY0_BASE + 0x60, 4);
-
 	return true;
 }
 
@@ -694,7 +692,7 @@ static bool mctl_phy_init(struct dram_para *para)
 	for (i = 0; i < ARRAY_SIZE(phy_init); i++)
 		writel(phy_init[i], &ptr[i]);
 
-	ptr = (u32*)(SUNXI_DRAM_PHY0_BASE + 0x780);
+	/*ptr = (u32*)(SUNXI_DRAM_PHY0_BASE + 0x780);
 	for (i = 0; i < 32; i++)
 		writel(0x16, &ptr[i]);
 	writel(0xe, SUNXI_DRAM_PHY0_BASE + 0x78c);
@@ -702,7 +700,7 @@ static bool mctl_phy_init(struct dram_para *para)
 	writel(0xe, SUNXI_DRAM_PHY0_BASE + 0x7b8);
 	writel(0x8, SUNXI_DRAM_PHY0_BASE + 0x7d4);
 	writel(0xe, SUNXI_DRAM_PHY0_BASE + 0x7dc);
-	writel(0xe, SUNXI_DRAM_PHY0_BASE + 0x7e0);
+	writel(0xe, SUNXI_DRAM_PHY0_BASE + 0x7e0);*/
 
 	writel(0x80, SUNXI_DRAM_PHY0_BASE + 0x3dc);
 	writel(0x80, SUNXI_DRAM_PHY0_BASE + 0x45c);
@@ -773,14 +771,14 @@ static bool mctl_phy_init(struct dram_para *para)
 	clrbits_le32(&mctl_ctl->rfshctl3, 1);
 	writel(1, &mctl_ctl->swctl);
 
-	/*for (i = 0; i < 5; i++)
+	for (i = 0; i < 5; i++)
 		if (mctl_phy_write_leveling(para))
 			break;
 	if (i == 5) {
 		debug("write leveling failed!\n");
 		return false;
 	}
-	debug("write leveling finished\n");*/
+	debug("write leveling finished\n");
 
 	for (i = 0; i < 5; i++)
 		if (mctl_phy_read_calibration(para))
@@ -791,25 +789,27 @@ static bool mctl_phy_init(struct dram_para *para)
 	}
 	debug("read calibration finished\n");
 
-	/*for (i = 0; i < 5; i++)
+	for (i = 0; i < 5; i++)
 		if (mctl_phy_read_training(para))
 			break;
 	if (i == 5) {
 		debug("read training failed!\n");
 		return false;
 	}
-	debug("read training finished\n");*/
+	debug("read training finished\n");
 
-	/*for (i = 0; i < 5; i++)
+	for (i = 0; i < 5; i++)
 		if (mctl_phy_write_training(para))
 			break;
 	if (i == 5) {
 		debug("write training failed!\n");
 		return false;
 	}
-	debug("write training finished\n");*/
+	debug("write training finished\n");
+
+	//mctl_phy_bit_delay_compensation(para);
 
-	mctl_phy_bit_delay_compensation(para);
+	clrbits_le32(SUNXI_DRAM_PHY0_BASE + 0x60, 4);
 
 	/*for (i = 0; i < 0x1000; i += 0x10)
 		printf("%08x: %08x %08x %08x %08x\n",
diff --git a/configs/tanix_tx6s_defconfig b/configs/orangepi_zero2_defconfig
similarity index 69%
rename from configs/tanix_tx6s_defconfig
rename to configs/orangepi_zero2_defconfig
index d3f295e9..184e2298 100644
--- a/configs/tanix_tx6s_defconfig
+++ b/configs/orangepi_zero2_defconfig
@@ -5,6 +5,8 @@ CONFIG_MACH_SUN50I_H616=y
 CONFIG_DRAM_CLK=696
 CONFIG_MMC0_CD_PIN="PF6"
 # CONFIG_PSCI_RESET is not set
-CONFIG_DEFAULT_DEVICE_TREE="sun50i-h6-orangepi-lite2"
+CONFIG_DEFAULT_DEVICE_TREE="sun50i-h616-orangepi-zero2"
 # CONFIG_SYS_MALLOC_CLEAR_ON_INIT is not set
+CONFIG_PHY_REALTEK=y
+CONFIG_SUN8I_EMAC=y
 CONFIG_SPL_I2C_SUPPORT=y
diff --git a/drivers/net/sun8i_emac.c b/drivers/net/sun8i_emac.c
index 45246041..28207971 100644
--- a/drivers/net/sun8i_emac.c
+++ b/drivers/net/sun8i_emac.c
@@ -561,9 +561,9 @@ static int parse_phy_pins(struct udevice *dev)
 		if (pin < 0)
 			continue;
 
-		if (priv->variant == H3_EMAC)
+		if (priv->variant == H3_EMAC || priv->variant == H6_EMAC)
 			sunxi_gpio_set_cfgpin(pin, SUN8I_IOMUX_H3);
-		else if (priv->variant == R40_GMAC || priv->variant == H6_EMAC)
+		else if (priv->variant == R40_GMAC)
 			sunxi_gpio_set_cfgpin(pin, SUN8I_IOMUX_R40);
 		else
 			sunxi_gpio_set_cfgpin(pin, SUN8I_IOMUX);
-- 
2.29.2

