diff --speed-large-files --no-dereference --minimal -Naur u-boot-orangepi-6fe17fac388aad17490cf386578b7532975e567f/arch/arm/mach-sunxi/dram_sun50i_h616.c u-boot-orangepi-6fe17fac388aad17490cf386578b7532975e567f/arch/arm/mach-sunxi/dram_sun50i_h616.c
--- u-boot-orangepi-6fe17fac388aad17490cf386578b7532975e567f/arch/arm/mach-sunxi/dram_sun50i_h616.c	2023-09-13 05:22:34.000000000 +0200
+++ u-boot-orangepi-6fe17fac388aad17490cf386578b7532975e567f/arch/arm/mach-sunxi/dram_sun50i_h616.c	2023-10-19 20:33:47.276810068 +0200
@@ -1216,6 +1216,31 @@
 	return mctl_ctrl_init(para);
 }
 
+static void dump_regs()
+{
+    uint32_t* base=0x047FA000u;
+    int a;
+    printf("=> md.l 0x047FA000 \n");
+    for( a = 0; a < 82; a = a + 1 ){
+	printf("%08x: %08x %08x %08x %08x\n",base,*base,*(base+0x1),*(base+0x2),*(base+0x3));
+	base=base+0x4u;
+    }
+
+    base=0x047FB000u;
+    printf("=> md.l 0x047FB000 \n");
+    for( a = 0; a < 51; a = a + 1 ){
+	printf("%08x: %08x %08x %08x %08x\n",base,*base,*(base+0x1),*(base+0x2),*(base+0x3));
+	base=base+0x4u;
+    }
+
+    base=0x04800000u;
+    printf("=> md.l 0x04800000 \n");
+    for( a = 0; a < 184; a = a + 1 ){
+	printf("%08x: %08x %08x %08x %08x\n",base,*base,*(base+0x1),*(base+0x2),*(base+0x3));
+	base=base+0x4u;
+    }
+}
+
 static void mctl_auto_detect_rank_width(struct dram_para *para)
 {
 	/* this is minimum size that it's supported */
@@ -1254,6 +1279,8 @@
 	if (mctl_core_init(para))
 		return;
 
+	dump_regs();
+
 	panic("This DRAM setup is currently not supported.\n");
 }
 
@@ -1325,5 +1352,7 @@
 
 	mctl_set_master_priority();
 
+	dump_regs();
+
 	return size;
 };
