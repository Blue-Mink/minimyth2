diff -Naur Python-2.7.8-old/Lib/distutils/sysconfig.py Python-2.7.8-new/Lib/distutils/sysconfig.py
--- Python-2.7.8-old/Lib/distutils/sysconfig.py	2014-06-30 04:05:26.000000000 +0200
+++ Python-2.7.8-new/Lib/distutils/sysconfig.py	2014-09-29 10:24:17.142379763 +0200
@@ -19,13 +19,29 @@
 from distutils.errors import DistutilsPlatformError
 
 # These are needed in a couple of spots, so just compute them once.
-PREFIX = os.path.normpath(sys.prefix)
-EXEC_PREFIX = os.path.normpath(sys.exec_prefix)
+EXECUTABLE_DIRNAME = os.path.dirname(os.path.realpath(sys.executable))
+if os.environ.get('CROSS_COMPILING') == 'yes':
+    _sysroot=os.environ.get('_python_sysroot')
+    PREFIX = os.path.normpath(_sysroot + os.environ.get('_python_prefix'))
+    EXEC_PREFIX = os.path.normpath(_sysroot + os.environ.get('_python_exec_prefix'))
+    if '_python_srcdir' in os.environ:
+        EXECUTABLE_DIRNAME = os.path.normpath(os.environ['_python_srcdir'])
+    print "python/Lib/sysconfig.py: Cross-compiling..."
+    print "_sysroot:" + _sysroot
+    print "PREFIX:" + PREFIX
+    print "EXEC_PREFIX:" + EXEC_PREFIX
+else:
+    PREFIX = os.path.normpath(sys.prefix)
+    EXEC_PREFIX = os.path.normpath(sys.exec_prefix)
+    print "python/Lib/sysconfig.py: Native compiling..."
+    print "PREFIX:" + PREFIX
+    print "EXEC_PREFIX:" + EXEC_PREFIX
+
 
 # Path to the base directory of the project. On Windows the binary may
 # live in project/PCBuild9.  If we're dealing with an x64 Windows build,
 # it'll live in project/PCbuild/amd64.
-project_base = os.path.dirname(os.path.abspath(sys.executable))
+project_base = EXECUTABLE_DIRNAME
 if os.name == "nt" and "pcbuild" in project_base[-8:].lower():
     project_base = os.path.abspath(os.path.join(project_base, os.path.pardir))
 # PC/VS7.1
@@ -79,7 +95,7 @@
 
     if os.name == "posix":
         if python_build:
-            buildir = os.path.dirname(sys.executable)
+            buildir = EXECUTABLE_DIRNAME
             if plat_specific:
                 # python.h is located in the buildir
                 inc_dir = buildir
@@ -241,7 +257,7 @@
 def get_makefile_filename():
     """Return full pathname of installed Makefile from the Python build."""
     if python_build:
-        return os.path.join(project_base, "Makefile")
+        return os.path.join(EXECUTABLE_DIRNAME, "Makefile")
     lib_dir = get_python_lib(plat_specific=1, standard_lib=1)
     return os.path.join(lib_dir, "config", "Makefile")
 
