diff -Naur mythtv-master-20190105-g3382e1a-old/mythplugins/mythmusic/mythmusic/musicplayer.cpp mythtv-master-20190105-g3382e1a-new/mythplugins/mythmusic/mythmusic/musicplayer.cpp
--- mythtv-master-20190105-g3382e1a-old/mythplugins/mythmusic/mythmusic/musicplayer.cpp	2019-01-05 12:45:40.933333333 +0100
+++ mythtv-master-20190105-g3382e1a-new/mythplugins/mythmusic/mythmusic/musicplayer.cpp	2019-01-05 12:45:42.073333333 +0100
@@ -709,6 +709,31 @@
                              QString("MusicPlayer: got invalid MUSIC_COMMAND "
                                      "PLAY_TRACK - %1").arg(me->Message()));
                 }
+                else if (list[2] == "PLAY_LIST")
+                {
+                    if (list.size() < 4)
+                    {
+                        LOG(VB_GENERAL, LOG_ERR,
+                             QString("MusicPlayer: got invalid MUSIC_COMMAND "
+                                     "PLAY_LIST - %1").arg(me->Message()));
+                    }
+                    else if (gMusicData && gMusicData->all_playlists)
+                    {
+                        int start = me->Message().indexOf("'");
+                        int end = me->Message().lastIndexOf("'");
+                        if (start != -1 && end != -1 && start != end)
+                        {
+                            QString name = me->Message().mid(start + 1, end - start - 1);
+                            Playlist *plist = gMusicData->all_playlists->getPlaylist(name);
+                            if (plist)
+                            {
+                                gMusicData->all_playlists->copyToActive(plist->getID());
+                                qApp->processEvents();
+                                setCurrentTrackPos(0);
+                            }
+                        }
+                    }
+                }
                 else if (list[2] == "GET_METADATA")
                 {
                     QString mdataStr;
@@ -737,6 +762,20 @@
                     MythEvent me2(message);
                     gCoreContext->dispatch(me2);
                 }
+                else if (list[2] == "GET_PLAYLISTS")
+                {
+                    QString mdataStr;
+
+                    if (gMusicData && gMusicData->all_playlists)
+                        mdataStr = gMusicData->all_playlists->getPlaylistNames().join(", ");
+                    else
+                        mdataStr = "<Uninitialised>";
+
+                    QString message = QString("MUSIC_CONTROL ANSWER %1 %2")
+                            .arg(gCoreContext->GetHostName()).arg(mdataStr);
+                    MythEvent me(message);
+                    gCoreContext->dispatch(me);
+                }
             }
             else
                 LOG(VB_GENERAL, LOG_ERR,
@@ -1514,7 +1553,8 @@
     if (!getCurrentMetadata())
     {
         m_currentTrack = -1;
-        stop(true);
+        if (isPlaying())
+            stop(true);
     }
 }
 
diff -Naur mythtv-master-20190105-g3382e1a-old/mythtv/programs/mythfrontend/networkcontrol.cpp mythtv-master-20190105-g3382e1a-new/mythtv/programs/mythfrontend/networkcontrol.cpp
--- mythtv-master-20190105-g3382e1a-old/mythtv/programs/mythfrontend/networkcontrol.cpp	2019-01-05 12:45:40.996666666 +0100
+++ mythtv-master-20190105-g3382e1a-new/mythtv/programs/mythfrontend/networkcontrol.cpp	2019-01-05 12:45:42.073333333 +0100
@@ -777,6 +777,37 @@
                 message = QString("MUSIC_COMMAND %1 PLAY_FILE '%2'")
                                 .arg(hostname)
                                 .arg(nc->getFrom(3));
+            else if (is_abbrev("list", nc->getArg(2)))
+            {
+                gotAnswer = false;
+
+                MythEvent me(QString("MUSIC_COMMAND %1 GET_PLAYLISTS")
+                                .arg(gCoreContext->GetHostName()) );
+                gCoreContext->dispatch(me);
+
+                QTime timer;
+                timer.start();
+                while (timer.elapsed() < FE_SHORT_TO && !gotAnswer)
+                {
+                    qApp->processEvents();
+                    std::this_thread::sleep_for(std::chrono::milliseconds(10));
+                }
+
+                if (gotAnswer && answer == "<Uninitialised>")
+                {
+                    GetMythMainWindow()->JumpTo(jumpMap["playlistview"]);
+
+                    QTime timer;
+                    timer.start();
+                    while ((timer.elapsed() < FE_LONG_TO) &&
+                           (GetMythUI()->GetCurrentLocation().toLower() != "playlistview"))
+                        std::this_thread::sleep_for(std::chrono::milliseconds(10));
+                }
+
+                message = QString("MUSIC_COMMAND %1 PLAY_LIST '%2'")
+                                .arg(hostname)
+                                .arg(nc->getFrom(3));
+            }
             else
                 return QString("ERROR: Invalid 'play music' command");
         }
@@ -1055,6 +1086,27 @@
             return QString("ERROR: See 'help %1' for usage information "
                            "(parameters mismatch)").arg(nc->getArg(0));
     }
+    else if (is_abbrev("playlists", nc->getArg(1)))
+    {
+        gotAnswer = false;
+
+        MythEvent me(QString("MUSIC_COMMAND %1 GET_PLAYLISTS")
+                        .arg(gCoreContext->GetHostName()) );
+        gCoreContext->dispatch(me);
+
+        QTime timer;
+        timer.start();
+        while (timer.elapsed() < FE_SHORT_TO && !gotAnswer)
+        {
+            qApp->processEvents();
+            std::this_thread::sleep_for(std::chrono::milliseconds(10));
+        }
+
+        if (gotAnswer)
+            return answer;
+
+        return "unknown";
+    }
     else if (is_abbrev("events", nc->getArg(1)))
     {
         result = nc->getClient()->WantsEvents() ? "On" : "Off";
@@ -1465,7 +1517,8 @@
             "play music getstatus   - Get music player status playing/paused/stopped (MythMusic)\r\n"
             "play music file NAME   - Play specified file (MythMusic)\r\n"
             "play music track N     - Switch to specified track (MythMusic)\r\n"
-            "play music url URL     - Play specified URL (MythMusic)\r\n";
+            "play music url URL     - Play specified URL (MythMusic)\r\n"
+            "play music list NAME   - Play specified playlist (MythMusic)\r\n";
     }
     else if (is_abbrev("query", command))
     {
@@ -1485,7 +1538,8 @@
             "query loglevel        - Get current VERBOSE loglevel\r\n"
             "query version         - Query Frontend version details\r\n"
             "query channels        - Query available channels\r\n"
-            "query channels START LIMIT - Query available channels from START and limit results to LIMIT lines\r\n";
+            "query channels START LIMIT - Query available channels from START and limit results to LIMIT lines\r\n"
+            "query playlists       - Query playlists (MythMusic)\r\n";
     }
     else if (is_abbrev("set", command))
     {
