diff -Naur mythtv-master-20170210-g9974b00-old/mythtv/libs/libmythui/mythuibuttonlist.cpp mythtv-master-20170210-g9974b00-new/mythtv/libs/libmythui/mythuibuttonlist.cpp
--- mythtv-master-20170210-g9974b00-old/mythtv/libs/libmythui/mythuibuttonlist.cpp	2017-02-10 15:10:56.000000000 +0100
+++ mythtv-master-20170210-g9974b00-new/mythtv/libs/libmythui/mythuibuttonlist.cpp	2017-02-10 15:12:38.816666640 +0100
@@ -3613,61 +3613,53 @@
 
     while (string_it != m_strings.end())
     {
-        MythUITypeList textlist = buttonstate->GetChildren(string_it.key());
-        MythUITypeList::iterator Ilist;
+        text = dynamic_cast<MythUIText *>
+               (buttonstate->GetChild(string_it.key()));
 
-        // For each child matching the element name, set the value.
-        for (Ilist = textlist.begin(); Ilist != textlist.end(); ++Ilist)
+        if (text)
         {
-            text = dynamic_cast<MythUIText *>(*Ilist);
+            TextProperties textprop = string_it.value();
 
-            if (text)
-            {
-
-                TextProperties textprop = string_it.value();
+            QString newText = text->GetTemplateText();
 
-                QString newText = text->GetTemplateText();
+            QRegExp regexp("%(([^\\|%]+)?\\||\\|(.))?([\\w#]+)(\\|(.+))?%");
+            regexp.setMinimal(true);
 
-                QRegExp regexp("%(([^\\|%]+)?\\||\\|(.))?([\\w#]+)(\\|(.+))?%");
-                regexp.setMinimal(true);
+            if (!newText.isEmpty() && newText.contains(regexp))
+            {
+                int pos = 0;
+                QString tempString = newText;
 
-                if (!newText.isEmpty() && newText.contains(regexp))
+                while ((pos = regexp.indexIn(newText, pos)) != -1)
                 {
-                    int pos = 0;
-                    QString tempString = newText;
+                    QString key = regexp.cap(4).toLower().trimmed();
+                    QString replacement;
+                    QString value = m_strings.value(key).text;
 
-                    while ((pos = regexp.indexIn(newText, pos)) != -1)
+                    if (!value.isEmpty())
                     {
-                        QString key = regexp.cap(4).toLower().trimmed();
-                        QString replacement;
-                        QString value = m_strings.value(key).text;
-
-                        if (!value.isEmpty())
-                        {
-                            replacement = QString("%1%2%3%4")
-                                          .arg(regexp.cap(2))
-                                          .arg(regexp.cap(3))
-                                          .arg(m_strings.value(key).text)
-                                          .arg(regexp.cap(6));
-                        }
-
-                        tempString.replace(regexp.cap(0), replacement);
-                        pos += regexp.matchedLength();
+                        replacement = QString("%1%2%3%4")
+                                      .arg(regexp.cap(2))
+                                      .arg(regexp.cap(3))
+                                      .arg(m_strings.value(key).text)
+                                      .arg(regexp.cap(6));
                     }
 
-                    newText = tempString;
+                    tempString.replace(regexp.cap(0), replacement);
+                    pos += regexp.matchedLength();
                 }
-                else
-                    newText = textprop.text;
 
-                if (newText.isEmpty())
-                    text->Reset();
-                else
-                    text->SetText(newText);
-
-                text->SetFontState(textprop.state.isEmpty() ?
-                                   m_fontState : textprop.state);
+                newText = tempString;
             }
+            else
+                newText = textprop.text;
+
+            if (newText.isEmpty())
+                text->Reset();
+            else
+                text->SetText(newText);
+
+            text->SetFontState(textprop.state.isEmpty() ? m_fontState : textprop.state);
         }
 
         ++string_it;
diff -Naur mythtv-master-20170210-g9974b00-old/mythtv/libs/libmythui/mythuibuttonlist.cpp.orig mythtv-master-20170210-g9974b00-new/mythtv/libs/libmythui/mythuibuttonlist.cpp.orig
--- mythtv-master-20170210-g9974b00-old/mythtv/libs/libmythui/mythuibuttonlist.cpp.orig	2017-02-10 13:41:02.000000000 +0100
+++ mythtv-master-20170210-g9974b00-new/mythtv/libs/libmythui/mythuibuttonlist.cpp.orig	2017-02-10 15:10:56.000000000 +0100
@@ -21,6 +21,7 @@
 #include "mythuigroup.h"
 #include "mythuiimage.h"
 #include "mythgesture.h"
+#include "mythuiprogressbar.h"
 
 #define LOC     QString("MythUIButtonList(%1): ").arg(objectName())
 
@@ -3134,6 +3135,9 @@
     m_showArrow = showArrow;
     m_data      = 0;
     m_isVisible = false;
+    m_progress  = 0;
+    m_progressStart = 0;
+    m_progressTotal = 0;
 
     if (state >= NotChecked)
         m_checkable = true;
@@ -3159,6 +3163,9 @@
     m_state     = CantCheck;
     m_showArrow = false;
     m_isVisible = false;
+    m_progress  = 0;
+    m_progressStart = 0;
+    m_progressTotal = 0;
 
     if (m_parent)
         m_parent->InsertItem(this, listPosition);
@@ -3414,6 +3421,16 @@
     return QString();
 }
 
+void MythUIButtonListItem::SetProgress(int start, int total, int used)
+{
+    m_progress      = used;
+    m_progressStart = start;
+    m_progressTotal = total;
+
+    if (m_parent && m_isVisible)
+        m_parent->Update();
+}
+
 void MythUIButtonListItem::DisplayState(const QString &state,
                                         const QString &name)
 {
@@ -3716,6 +3733,11 @@
     // There is no need to check the return value here, since we already
     // checked that the state exists with GetState() earlier
     button->DisplayState(state);
+
+    MythUIProgressBar *progress = dynamic_cast<MythUIProgressBar *>
+                                  (buttonstate->GetChild("buttonprogress"));
+    if (progress)
+        progress->Set(m_progressStart, m_progressTotal, m_progress);
 }
 
 //---------------------------------------------------------
diff -Naur mythtv-master-20170210-g9974b00-old/mythtv/libs/libmythui/mythuitext.cpp mythtv-master-20170210-g9974b00-new/mythtv/libs/libmythui/mythuitext.cpp
--- mythtv-master-20170210-g9974b00-old/mythtv/libs/libmythui/mythuitext.cpp	2017-02-10 13:41:02.000000000 +0100
+++ mythtv-master-20170210-g9974b00-new/mythtv/libs/libmythui/mythuitext.cpp	2017-02-10 15:12:38.816666640 +0100
@@ -7,7 +7,6 @@
 #include <QFontMetrics>
 #include <QString>
 #include <QHash>
-#include <QRegularExpression>
 
 #include "mythlogging.h"
 
@@ -220,10 +219,10 @@
             if (!map.value(key).isEmpty())
             {
                 replacement = QString("%1%2%3%4")
-                              .arg(regexp.cap(2))
-                              .arg(regexp.cap(3))
-                              .arg(map.value(key))
-                              .arg(regexp.cap(6));
+                .arg(regexp.cap(2))
+                .arg(regexp.cap(3))
+                .arg(map.value(key))
+                .arg(regexp.cap(6));
             }
 
             tempString.replace(regexp.cap(0), replacement);
@@ -234,14 +233,9 @@
             SetText(tempString);
         }
     }
-    else
+    else if (map.contains(objectName()))
     {
-        // Match either whole name, or name ending with a '+'
-        // Allows themer to specify multiple versions of the same element
-        QRegularExpression re("^([^\\+]+)($|\\+)");
-        QRegularExpressionMatch match = re.match(objectName());
-        if (match.hasMatch() && map.contains(match.captured(1)))
-            SetText(map.value(match.captured(1)));
+        SetText(map.value(objectName()));
     }
 }
 
diff -Naur mythtv-master-20170210-g9974b00-old/mythtv/libs/libmythui/mythuitype.cpp mythtv-master-20170210-g9974b00-new/mythtv/libs/libmythui/mythuitype.cpp
--- mythtv-master-20170210-g9974b00-old/mythtv/libs/libmythui/mythuitype.cpp	2017-02-10 13:41:02.000000000 +0100
+++ mythtv-master-20170210-g9974b00-new/mythtv/libs/libmythui/mythuitype.cpp	2017-02-10 15:12:38.819999974 +0100
@@ -6,7 +6,6 @@
 #include <QEvent>
 #include <QKeyEvent>
 #include <QDomDocument>
-#include <QRegularExpression>
 
 // Mythbase headers
 #include "mythlogging.h"
@@ -158,17 +157,6 @@
     return NULL;
 }
 
-MythUITypeList MythUIType::GetChildren(const QString &name) const
-{
-    // Match either whole name, or name ending with a '+'
-    // Allows themer to specify multiple versions of the same element
-    QRegularExpression re("^(" + QRegularExpression::escape(name) + ")($|\\+)");
-
-    MythUITypeList list = findChildren<MythUIType*>(re);
-
-    return list;
-}
-
 /**
  *  \brief Delete a named child of this UIType
  *
diff -Naur mythtv-master-20170210-g9974b00-old/mythtv/libs/libmythui/mythuitype.h mythtv-master-20170210-g9974b00-new/mythtv/libs/libmythui/mythuitype.h
--- mythtv-master-20170210-g9974b00-old/mythtv/libs/libmythui/mythuitype.h	2017-02-10 13:41:02.000000000 +0100
+++ mythtv-master-20170210-g9974b00-new/mythtv/libs/libmythui/mythuitype.h	2017-02-10 15:12:38.819999974 +0100
@@ -39,8 +39,6 @@
 class MythUIWebBrowser;
 #endif
 
-#define MythUITypeList QList<MythUIType*>
-
 /**
  * \defgroup MythUI MythTV User Interface Library
  *
@@ -79,7 +77,6 @@
     MythUIType *GetChild(const QString &name) const;
     MythUIType *GetChildAt(const QPoint &p, bool recursive=true,
                            bool focusable=true) const;
-    MythUITypeList GetChildren(const QString &name) const;
     QList<MythUIType *> *GetAllChildren(void);
 
     void DeleteChild(const QString &name);
diff -Naur mythtv-master-20170210-g9974b00-old/mythtv/libs/libmythui/xmlparsebase.cpp mythtv-master-20170210-g9974b00-new/mythtv/libs/libmythui/xmlparsebase.cpp
--- mythtv-master-20170210-g9974b00-old/mythtv/libs/libmythui/xmlparsebase.cpp	2017-02-10 13:41:02.000000000 +0100
+++ mythtv-master-20170210-g9974b00-new/mythtv/libs/libmythui/xmlparsebase.cpp	2017-02-10 15:12:38.819999974 +0100
@@ -403,8 +403,7 @@
                      type == "editbar" ||
                      type == "video")
             {
-                ParseUIType(filename, info, type, parent, NULL, showWarnings,
-                            dependsMap);
+                ParseUIType(filename, info, type, parent, NULL, showWarnings, dependsMap);
             }
             else
             {
@@ -434,16 +433,6 @@
         return NULL;
     }
 
-    QString dependee = element.attribute("depends", "");
-
-#if 0
-    // Doing this automatically can result in some unexpected
-    // inheritance issues if the theme is not expecting it.  So,
-    // make the themer manually do it, if they desire it.
-    if (!dependee.isEmpty())
-        name += "+" + dependee;
-#endif
-
     MythUIType *olduitype = NULL;
 
     // check for name in immediate parent as siblings cannot share names
@@ -569,6 +558,7 @@
 
     }
 
+    QString dependee = element.attribute("depends", "");
     if (!dependee.isEmpty())
         parentDependsMap.insert(name, dependee);
 
