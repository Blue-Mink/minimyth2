diff -Naur mythtv-master-20160531-g5daa9e7-old/mythtv/libs/libmythtv/tv_play.cpp mythtv-master-20160531-g5daa9e7-new/mythtv/libs/libmythtv/tv_play.cpp
--- mythtv-master-20160531-g5daa9e7-old/mythtv/libs/libmythtv/tv_play.cpp	2016-05-31 11:36:51.000000000 +0200
+++ mythtv-master-20160531-g5daa9e7-new/mythtv/libs/libmythtv/tv_play.cpp	2016-06-07 10:27:52.000000000 +0200
@@ -595,6 +595,10 @@
             "Change Recording Group"), "");
     REG_KEY("TV Frontend", "CHANGEGROUPVIEW", QT_TRANSLATE_NOOP("MythControls",
             "Change Group View"), "");
+    REG_KEY("TV Frontend", ACTION_ZOOMIN, QT_TRANSLATE_NOOP("MythControls",
+            "Zoom In"), "");
+    REG_KEY("TV Frontend", ACTION_ZOOMOUT, QT_TRANSLATE_NOOP("MythControls",
+            "Zoom Out"), "");
     REG_KEY("TV Frontend", ACTION_LISTRECORDEDEPISODES, QT_TRANSLATE_NOOP("MythControls",
             "List recorded episodes"), "");
     REG_KEY("TV Frontend", "THMBUP",     QT_TRANSLATE_NOOP("MythControls",
diff -Naur mythtv-master-20160531-g5daa9e7-old/mythtv/libs/libmythui/mythuiguidegrid.cpp mythtv-master-20160531-g5daa9e7-new/mythtv/libs/libmythui/mythuiguidegrid.cpp
--- mythtv-master-20160531-g5daa9e7-old/mythtv/libs/libmythui/mythuiguidegrid.cpp	2016-05-31 11:33:55.000000000 +0200
+++ mythtv-master-20160531-g5daa9e7-new/mythtv/libs/libmythui/mythuiguidegrid.cpp	2016-06-07 10:46:06.283333333 +0200
@@ -57,6 +57,8 @@
     m_drawCategoryText = true;
     m_categoryAlpha = 255;
 
+    m_needsUpdate = false;
+
     QMap<QString, QString> catColors;
     parseDefaultCategoryColors(catColors);
     SetCategoryColors(catColors);
@@ -258,6 +260,7 @@
 
     m_channelCount = gg->m_channelCount;
     m_timeCount = gg->m_timeCount;
+    m_rowCount = gg->m_rowCount;
     m_verticalLayout = gg->m_verticalLayout;
     m_categoryAlpha = gg->m_categoryAlpha;
     m_textOffset = gg->m_textOffset;
@@ -278,6 +281,26 @@
     m_drawCategoryColors = gg->m_drawCategoryColors;
     m_drawCategoryText = gg->m_drawCategoryText;
 
+    for (int i = 0; i < RECSTATUSSIZE; ++i)
+    {
+        MythImage *image = gg->m_recImages[i];
+        if (image)
+        {
+            m_recImages[i] = image;
+            image->IncrRef();
+        }
+    }
+
+    for (int i = 0; i < ARROWIMAGESIZE; ++i)
+    {
+        MythImage *image = gg->m_arrowImages[i];
+        if (image)
+        {
+            m_arrowImages[i] = image;
+            image->IncrRef();
+        }
+    }
+
     MythUIType::CopyFrom(base);
 }
 
@@ -297,6 +320,9 @@
 void MythUIGuideGrid::DrawSelf(MythPainter *p, int xoffset, int yoffset,
                                int alphaMod, QRect clipRect)
 {
+    if (!m_needsUpdate)
+        return;
+
     for (int i = 0; i < m_rowCount; i++)
     {
         QList<UIGTCon *>::iterator it = m_allData[i].begin();
@@ -600,6 +626,8 @@
 
     if (selected)
         m_selectedItem = *data;
+
+    Update();
 }
 
 bool MythUIGuideGrid::parseDefaultCategoryColors(QMap<QString, QString> &catColors)
@@ -706,6 +734,7 @@
 {
     for (int i = 0; i < m_rowCount; i++)
         ResetRow(i);
+    Update();
 }
 
 void MythUIGuideGrid::ResetRow(int row)
@@ -724,7 +753,7 @@
     else
         m_progPastCol = m_Area.x() + (m_Area.width() * ppast / 100);
 
-    SetRedraw();
+    Update();
 }
 
 void MythUIGuideGrid::SetMultiLine(bool multiline)
@@ -736,3 +765,9 @@
     else
         m_justification &= ~Qt::TextWordWrap;
 }
+
+void MythUIGuideGrid::Update()
+{
+    m_needsUpdate = true;
+    SetRedraw();
+}
diff -Naur mythtv-master-20160531-g5daa9e7-old/mythtv/libs/libmythui/mythuiguidegrid.h mythtv-master-20160531-g5daa9e7-new/mythtv/libs/libmythui/mythuiguidegrid.h
--- mythtv-master-20160531-g5daa9e7-old/mythtv/libs/libmythui/mythuiguidegrid.h	2016-05-31 11:33:55.000000000 +0200
+++ mythtv-master-20160531-g5daa9e7-new/mythtv/libs/libmythui/mythuiguidegrid.h	2016-06-07 10:46:06.283333333 +0200
@@ -69,7 +69,7 @@
     class UIGTCon
     {
       public:
-        UIGTCon() { m_arrow = m_recType = m_recStat = 0; };
+        UIGTCon() { m_arrow = m_recType = m_recStat = 0; }
         UIGTCon(const QRect &drawArea, const QString &title,
                 const QString &category, int arrow, int recType, int recStat) :
                 m_drawArea(drawArea),               m_title(title),
@@ -98,6 +98,7 @@
     void drawText(MythPainter *p, UIGTCon *data, int alpaMod);
     void drawRecType(MythPainter *p, UIGTCon *data, int alpaMod);
     void drawCurrent(MythPainter *p, UIGTCon *data, int alpaMod);
+    void Update();
 
     QColor calcColor(const QColor &color, int alpha);
 
@@ -137,6 +138,7 @@
 
     QMap<QString, QColor> m_categoryColors;
 
+    bool m_needsUpdate;
 };
 
 #endif
diff -Naur mythtv-master-20160531-g5daa9e7-old/mythtv/programs/mythfrontend/guidegrid.cpp mythtv-master-20160531-g5daa9e7-new/mythtv/programs/mythfrontend/guidegrid.cpp
--- mythtv-master-20160531-g5daa9e7-old/mythtv/programs/mythfrontend/guidegrid.cpp	2016-05-31 11:36:52.000000000 +0200
+++ mythtv-master-20160531-g5daa9e7-new/mythtv/programs/mythfrontend/guidegrid.cpp	2016-06-07 10:30:49.000000000 +0200
@@ -57,6 +57,8 @@
 // mythfrontend
 #include "progfind.h"
 
+#define GUIDEZOOMSETTING "GuideZoomLevel"
+
 QWaitCondition epgIsVisibleCond;
 
 #define LOC      QString("GuideGrid: ")
@@ -525,6 +527,7 @@
            m_updateTimer(new QTimer(this)),
            m_threadPool("GuideGridHelperPool"),
            m_changrpid(changrpid),
+           m_changrpname(),
            m_changrplist(ChannelGroup::GetChannelGroups(false)),
            m_jumpToChannelLock(QMutex::Recursive),
            m_jumpToChannel(NULL),
@@ -535,7 +538,12 @@
            m_longdateText(NULL),
            m_jumpToText(NULL),
            m_changroupname(NULL),
-           m_channelImage(NULL)
+           m_channelImage(NULL),
+           m_essentialWidgets(),
+           m_otherWidgets(),
+           m_zoomWidgets(),
+           m_zoomCurrent(0),
+           m_zoomMax(0)
 {
     connect(m_previewVideoRefreshTimer, SIGNAL(timeout()),
             this,                     SLOT(refreshVideo()));
@@ -562,6 +570,93 @@
     s_prgLstCache.clear();
 }
 
+bool GuideGrid::FindZoomWidgets()
+{
+    bool ok = true;
+    MythUIType *widget;
+
+    foreach (const QString &name, m_essentialWidgets + m_otherWidgets)
+    {
+        // "0" suffix is optional for backward compatibility
+        widget = this->GetChild(name);
+        if (!widget)
+            widget = this->GetChild(name + "0");
+        if (widget)
+        {
+            ZoomLevels &zoomWidgets = m_zoomWidgets[name];
+
+            // find all zoom levels for this widget
+            int zoom = 0;
+            do
+            {
+                LOG(VB_GUI, LOG_DEBUG, QString("Using '%1' for zoom level %2")
+                    .arg(widget->objectName()).arg(zoom));
+
+                zoomWidgets.append(widget);
+                widget->SetVisible(false);
+
+                widget = this->GetChild(name + QString::number(++zoom));
+            }
+            while (widget);
+
+            // Note max zoom defined by theme
+            m_zoomMax = max(m_zoomMax, --zoom);
+        }
+        else
+        {
+            bool error = m_essentialWidgets.contains(name);
+            ok &= !error;
+            LOG(VB_GENERAL, error ? LOG_ERR : LOG_WARNING,
+                QString("Container '%1' is missing child '%2'")
+                .arg(objectName()).arg(name));
+        }
+    }
+    return ok;
+}
+
+MythUIType* GuideGrid::AssignWidget(const QString &name)
+{
+    ZoomLevels zoomWidgets = m_zoomWidgets.value(name);
+    if (zoomWidgets.isEmpty())
+        return NULL;
+    int index = min(m_zoomCurrent, zoomWidgets.size() - 1);
+    return zoomWidgets.at(index);
+}
+
+#define REASSIGN_WIDGET(widget, type, name) \
+    if (widget) \
+        widget->SetVisible(false); \
+    widget = dynamic_cast<type*>(AssignWidget(name)); \
+    if (widget) \
+        widget->SetVisible(true)
+
+void GuideGrid::SelectZoomWidgets(int change)
+{
+    // Constrain to zoom levels supported by theme
+    m_zoomCurrent = min(max(m_zoomCurrent + change, 0), m_zoomMax);
+
+    // Store any requested change, but not constraining adjustments
+    // Thus, changing to a theme with fewer zoom levels will not overwrite the
+    // setting
+    if (change != 0)
+        gCoreContext->SaveSetting(GUIDEZOOMSETTING, m_zoomCurrent);
+
+    // Hide the current widgets, select and show new ones
+    REASSIGN_WIDGET(m_timeList, MythUIButtonList, "timelist");
+    REASSIGN_WIDGET(m_channelList, MythUIButtonList, "channellist");
+    REASSIGN_WIDGET(m_guideGrid, MythUIGuideGrid, "guidegrid");
+    REASSIGN_WIDGET(m_dateText, MythUIText, "datetext");
+    REASSIGN_WIDGET(m_longdateText, MythUIText, "longdatetext");
+    REASSIGN_WIDGET(m_changroupname, MythUIText, "channelgroup");
+
+    // Reset guide characteristics
+    m_channelCount = m_guideGrid->getChannelCount();
+    m_timeCount = m_guideGrid->getTimeCount() * 6;
+    m_verticalLayout = m_guideGrid->isVerticalLayout();
+
+    m_currentEndTime = m_currentStartTime.addSecs(m_timeCount * 60 * 5);
+}
+
 bool GuideGrid::Create()
 {
     QString windowName = "programguide";
@@ -572,23 +667,22 @@
     if (!LoadWindowFromXML("schedule-ui.xml", windowName, this))
         return false;
 
-    bool err = false;
-    UIUtilE::Assign(this, m_timeList, "timelist", &err);
-    UIUtilE::Assign(this, m_channelList, "channellist", &err);
-    UIUtilE::Assign(this, m_guideGrid, "guidegrid", &err);
-    UIUtilW::Assign(this, m_dateText, "datetext");
-    UIUtilW::Assign(this, m_longdateText, "longdatetext");
-    UIUtilW::Assign(this, m_changroupname, "channelgroup");
-    UIUtilW::Assign(this, m_channelImage, "channelicon");
-    UIUtilW::Assign(this, m_jumpToText, "jumptotext");
+    m_essentialWidgets << "timelist" << "channellist" << "guidegrid";
+    m_otherWidgets << "channelgroup" << "datetext" << "longdatetext";
 
-    if (err)
+    if (!FindZoomWidgets())
     {
-        LOG(VB_GENERAL, LOG_ERR,
-            QString("Cannot load screen '%1'").arg(windowName));
+        LOG(VB_GENERAL, LOG_ERR, QString("Cannot load screen '%1'").arg(windowName));
         return false;
     }
 
+    UIUtilW::Assign(this, m_channelImage, "channelicon");
+    UIUtilW::Assign(this, m_jumpToText, "jumptotext");
+
+    m_zoomCurrent = gCoreContext->GetNumSetting(GUIDEZOOMSETTING, 0);
+
+    SelectZoomWidgets(0);
+
     BuildFocusList();
 
     MythUIImage *videoImage = dynamic_cast<MythUIImage *>(GetChild("video"));
@@ -597,11 +691,6 @@
     else
         m_videoRect = QRect(0,0,0,0);
 
-    m_channelCount = m_guideGrid->getChannelCount();
-    m_timeCount = m_guideGrid->getTimeCount() * 6;
-    m_verticalLayout = m_guideGrid->isVerticalLayout();
-
-    m_currentEndTime = m_currentStartTime.addSecs(m_timeCount * 60 * 5);
     s_prgLstCache.clear();
 
     LoadInBackground();
@@ -649,10 +738,9 @@
 
     updateDateText();
 
-    QString changrpname = ChannelGroup::GetChannelGroupName(m_changrpid);
+    m_changrpname = ChannelGroup::GetChannelGroupName(m_changrpid);
 
-    if (m_changroupname)
-        m_changroupname->SetText(changrpname);
+    UpdateGroupText();
 
     gCoreContext->addListener(this);
 }
@@ -875,6 +963,10 @@
             generateListings();
             updateChannels();
         }
+        else if (action == ACTION_ZOOMIN)
+            Zoom(1);
+        else if (action == ACTION_ZOOMOUT)
+            Zoom(-1);
         else
             handled = false;
     }
@@ -1013,7 +1105,7 @@
             else
                 cursorUp();
             break;
-            
+
         case MythGestureEvent::Down:
             if (m_verticalLayout)
                 cursorRight();
@@ -1135,6 +1227,12 @@
                 menuPopup->AddButton(tr("Remove from Channel Group"), NULL, true);
         }
 
+        if (m_zoomCurrent > 0)
+            menuPopup->AddButton(tr("Zoom Out"));
+
+        if (m_zoomCurrent < m_zoomMax)
+            menuPopup->AddButton(tr("Zoom In"));
+
         popupStack->AddScreen(menuPopup);
     }
     else
@@ -2002,6 +2100,14 @@
             {
                 ShowJumpToTime();
             }
+            else if (resulttext == tr("Zoom In"))
+            {
+                Zoom(1);
+            }
+            else if (resulttext == tr("Zoom Out"))
+            {
+                Zoom(-1);
+            }
         }
         else if (resultid == "recmenu")
         {
@@ -2055,11 +2161,9 @@
                 updateChannels();
                 updateInfo();
 
-                QString changrpname;
-                changrpname = ChannelGroup::GetChannelGroupName(m_changrpid);
+                m_changrpname = ChannelGroup::GetChannelGroupName(m_changrpid);
 
-                if (m_changroupname)
-                    m_changroupname->SetText(changrpname);
+                UpdateGroupText();
             }
         }
         else if (resultid == "jumptotime")
@@ -2091,6 +2195,12 @@
                                                  (MythDate::kDateFull | MythDate::kSimplify)));
 }
 
+void GuideGrid::UpdateGroupText(void)
+{
+    if (m_changroupname)
+        m_changroupname->SetText(m_changrpname);
+}
+
 void GuideGrid::updateProgramsUI(unsigned int firstRow, unsigned int numRows,
                                  int progPast,
                                  const QVector<ProgramList*> &proglists,
@@ -2294,17 +2404,14 @@
     int oldchangrpid = m_changrpid;
 
     m_changrpid = ChannelGroup::GetNextChannelGroup(m_changrplist, oldchangrpid);
+    m_changrpname = ChannelGroup::GetChannelGroupName(m_changrpid);
 
     if (oldchangrpid != m_changrpid)
       generateListings();
 
     updateChannels();
     updateInfo();
-
-    QString changrpname = ChannelGroup::GetChannelGroupName(m_changrpid);
-
-    if (m_changroupname)
-        m_changroupname->SetText(changrpname);
+    UpdateGroupText();
 }
 
 void GuideGrid::generateListings()
@@ -2780,3 +2887,39 @@
     else
         delete timedlg;
 }
+
+void GuideGrid::Zoom(int direction)
+{
+    ProgramInfo *pginfo = m_programInfos[m_currentRow][m_currentCol];
+    if (!pginfo)
+        return;
+
+    // Change widgets
+    SelectZoomWidgets(direction);
+
+    m_channelCount = min(m_guideGrid->getChannelCount(),
+                         max((int)GetChannelCount(), 1));
+
+    // Keep selected channel on-screen
+    int rowsOffScreen = m_currentRow - m_channelCount + 1;
+    if (rowsOffScreen > 0)
+    {
+        m_currentStartChannel += rowsOffScreen;
+        m_currentRow          -= rowsOffScreen;
+    }
+
+    // Keep selected program on-screen by putting it in first column
+    QDateTime progStart = pginfo->GetScheduledStartTime();
+    if (progStart >= m_currentEndTime)
+    {
+        m_currentStartTime = progStart;
+        m_currentCol = 0;
+    }
+
+    // Redraw
+    fillTimeInfos();
+    fillProgramInfos();
+    updateChannels();
+    updateDateText();
+    UpdateGroupText();
+}
diff -Naur mythtv-master-20160531-g5daa9e7-old/mythtv/programs/mythfrontend/guidegrid.h mythtv-master-20160531-g5daa9e7-new/mythtv/programs/mythfrontend/guidegrid.h
--- mythtv-master-20160531-g5daa9e7-old/mythtv/programs/mythfrontend/guidegrid.h	2016-05-31 11:36:52.000000000 +0200
+++ mythtv-master-20160531-g5daa9e7-new/mythtv/programs/mythfrontend/guidegrid.h	2016-06-07 10:46:12.163333333 +0200
@@ -232,6 +232,11 @@
     ProgramList GetProgramList(uint chanid) const;
     uint GetAlternateChannelIndex(uint chan_idx, bool with_same_channum) const;
     void updateDateText(void);
+    void UpdateGroupText(void);
+    bool FindZoomWidgets();
+    void SelectZoomWidgets(int change);
+    MythUIType* AssignWidget(const QString &name);
+    void Zoom(int direction);
 
   private:
     int   m_selectRecThreshold;
@@ -279,6 +284,7 @@
     MThreadPool       m_threadPool;
 
     int               m_changrpid;
+    QString           m_changrpname;
     ChannelGroupList  m_changrplist;
 
     QMutex            m_jumpToChannelLock;
@@ -292,6 +298,14 @@
     MythUIText       *m_jumpToText;
     MythUIText       *m_changroupname;
     MythUIImage      *m_channelImage;
+
+    // Zoomable widgets enable different sized grids
+    QStringList m_essentialWidgets, m_otherWidgets;
+
+    typedef QList<MythUIType*> ZoomLevels;
+    QMap<QString, ZoomLevels> m_zoomWidgets;
+    int               m_zoomCurrent; // Current zoom level
+    int               m_zoomMax; // Max zoom level defined by theme
 };
 
 #endif
