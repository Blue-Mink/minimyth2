diff --git a/mythtv/libs/libmythtv/avformatdecoder.cpp b/mythtv/libs/libmythtv/avformatdecoder.cpp
index 88027a4..986cfc7 100644
--- a/mythtv/libs/libmythtv/avformatdecoder.cpp
+++ b/mythtv/libs/libmythtv/avformatdecoder.cpp
@@ -3281,15 +3281,15 @@ void AvFormatDecoder::MpegPreProcessPkt(AVStream *stream, AVPacket *pkt)
 
             if (changed)
             {
+                if (private_dec)
+                    private_dec->Reset();
+
                 m_parent->SetVideoParams(width, height, seqFPS, current_aspect, kScan_Detect);
 
                 current_width  = width;
                 current_height = height;
                 fps            = seqFPS;
 
-                if (private_dec)
-                    private_dec->Reset();
-
                 gopset = false;
                 prevgoppos = 0;
                 firstvpts = lastapts = lastvpts = lastccptsu = 0;
@@ -3388,6 +3388,9 @@ int AvFormatDecoder::H264PreProcessPkt(AVStream *stream, AVPacket *pkt)
 
         if (fps_changed || res_changed)
         {
+            if (private_dec)
+                private_dec->Reset();
+
             m_parent->SetVideoParams(width, height, seqFPS, current_aspect, kScan_Detect);
 
             current_width  = width;
diff --git a/mythtv/libs/libmythtv/privatedecoder_omx.cpp b/mythtv/libs/libmythtv/privatedecoder_omx.cpp
index 8914a52..6aa2997 100644
--- a/mythtv/libs/libmythtv/privatedecoder_omx.cpp
+++ b/mythtv/libs/libmythtv/privatedecoder_omx.cpp
@@ -567,9 +567,8 @@ OMX_ERRORTYPE PrivateDecoderOMX::FreeOutputBuffersCB()
         m_lock.unlock();
 
         VideoFrame *frame = HDR2FRAME(hdr);
-        if (frame)
+        if (frame && FRAME2HDR(frame) == hdr)
         {
-            assert(FRAME2HDR(frame) == hdr);
             FRAMESETHDR(frame, 0);
 
             AVBufferRef *ref = FRAME2REF(frame);
@@ -665,7 +664,6 @@ OMX_ERRORTYPE PrivateDecoderOMX::UseBuffersCB()
 
         VideoFrame *frame = (VideoFrame*)picture->opaque;
         assert(frame);
-        assert(unsigned(frame->size) >= def.nBufferSize);
 
         OMX_BUFFERHEADERTYPE *hdr;
         e = OMX_UseBuffer(m_videc.Handle(), &hdr, m_videc.Base() + index, frame,
@@ -936,11 +934,9 @@ int PrivateDecoderOMX::GetBufferedFrame(AVStream *stream, AVFrame *picture)
         picture->reordered_opaque = Ticks2Pts(stream, hdr->nTimeStamp);
 
         VideoFrame *frame = HDR2FRAME(hdr);
-        if (frame)
-        {
-            assert(FRAME2HDR(frame) == hdr);
-            assert(FRAME2REF(frame));
 
+        if (frame && FRAME2HDR(frame) == hdr)
+        {
             frame->bpp    = bitsperpixel(frametype);
             frame->codec  = frametype;
             frame->width  = vdef.nFrameWidth;
