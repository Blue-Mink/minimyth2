From 59f06d6676ac72c6626720c16e9a7b136e49f636 Mon Sep 17 00:00:00 2001
From: David Hampton <mythtv@love2code.net>
Date: Thu, 30 Dec 2021 15:27:28 -0500
Subject: [PATCH] Split part of ViewScheduled::FillList into a separate
 function.

---
 .../programs/mythfrontend/viewscheduled.cpp   | 89 ++++++++++---------
 mythtv/programs/mythfrontend/viewscheduled.h  |  3 +
 2 files changed, 50 insertions(+), 42 deletions(-)

diff --git a/mythtv/programs/mythfrontend/viewscheduled.cpp b/mythtv/programs/mythfrontend/viewscheduled.cpp
index 2fc34085c79..874a13cc278 100644
--- a/mythtv/programs/mythfrontend/viewscheduled.cpp
+++ b/mythtv/programs/mythfrontend/viewscheduled.cpp
@@ -375,6 +375,52 @@ void ViewScheduled::ChangeGroup(MythUIButtonListItem* item)
         FillList();
 }
 
+void ViewScheduled::UpdateUIListItem(MythUIButtonListItem* item,
+                                     ProgramInfo *pginfo)
+{
+    QString state;
+
+    const RecStatus::Type recstatus = pginfo->GetRecordingStatus();
+    if (recstatus == RecStatus::Recording      ||
+        recstatus == RecStatus::Tuning)
+        state = "running";
+    else if (recstatus == RecStatus::Conflict  ||
+             recstatus == RecStatus::Offline   ||
+             recstatus == RecStatus::TunerBusy ||
+             recstatus == RecStatus::Failed    ||
+             recstatus == RecStatus::Failing   ||
+             recstatus == RecStatus::Aborted   ||
+             recstatus == RecStatus::Missed)
+        state = "error";
+    else if (recstatus == RecStatus::WillRecord ||
+             recstatus == RecStatus::Pending)
+    {
+        if (m_curinput == 0 || pginfo->GetInputID() == m_curinput)
+        {
+            if (pginfo->GetRecordingPriority2() < 0)
+                state = "warning";
+            else
+                state = "normal";
+        }
+    }
+    else if (recstatus == RecStatus::Repeat ||
+             recstatus == RecStatus::NeverRecord ||
+             recstatus == RecStatus::DontRecord ||
+             (recstatus != RecStatus::DontRecord &&
+              recstatus <= RecStatus::EarlierShowing))
+        state = "disabled";
+    else
+        state = "warning";
+
+    InfoMap infoMap;
+    pginfo->ToMap(infoMap);
+    item->SetTextFromMap(infoMap, state);
+
+    QString rating = QString::number(pginfo->GetStars(10));
+    item->DisplayState(rating, "ratingstate");
+    item->DisplayState(state, "status");
+}
+
 void ViewScheduled::FillList()
 {
     m_schedulesList->Reset();
@@ -405,51 +451,10 @@ void ViewScheduled::FillList()
             continue;
         }
 
-        QString state;
-
-        const RecStatus::Type recstatus = pginfo->GetRecordingStatus();
-        if (recstatus == RecStatus::Recording      ||
-            recstatus == RecStatus::Tuning)
-            state = "running";
-        else if (recstatus == RecStatus::Conflict  ||
-                 recstatus == RecStatus::Offline   ||
-                 recstatus == RecStatus::TunerBusy ||
-                 recstatus == RecStatus::Failed    ||
-                 recstatus == RecStatus::Failing   ||
-                 recstatus == RecStatus::Aborted   ||
-                 recstatus == RecStatus::Missed)
-            state = "error";
-        else if (recstatus == RecStatus::WillRecord ||
-                 recstatus == RecStatus::Pending)
-        {
-            if (m_curinput == 0 || pginfo->GetInputID() == m_curinput)
-            {
-                if (pginfo->GetRecordingPriority2() < 0)
-                    state = "warning";
-                else
-                    state = "normal";
-            }
-        }
-        else if (recstatus == RecStatus::Repeat ||
-                 recstatus == RecStatus::NeverRecord ||
-                 recstatus == RecStatus::DontRecord ||
-                 (recstatus != RecStatus::DontRecord &&
-                  recstatus <= RecStatus::EarlierShowing))
-            state = "disabled";
-        else
-            state = "warning";
-
         auto *item = new MythUIButtonListItem(m_schedulesList,"",
                                               QVariant::fromValue(pginfo));
 
-        InfoMap infoMap;
-        pginfo->ToMap(infoMap);
-        item->SetTextFromMap(infoMap, state);
-
-        QString rating = QString::number(pginfo->GetStars(10));
-        item->DisplayState(rating, "ratingstate");
-        item->DisplayState(state, "status");
-
+        UpdateUIListItem(item, pginfo);
         ++pit;
     }
 
diff --git a/mythtv/programs/mythfrontend/viewscheduled.h b/mythtv/programs/mythfrontend/viewscheduled.h
index d5c0583a921..4295c472bcf 100644
--- a/mythtv/programs/mythfrontend/viewscheduled.h
+++ b/mythtv/programs/mythfrontend/viewscheduled.h
@@ -59,6 +59,9 @@ class ViewScheduled : public ScheduleCommon
 
     void EmbedTVWindow(void);
 
+    void UpdateUIListItem(MythUIButtonListItem* item,
+                          ProgramInfo *pginfo);
+
     bool  m_conflictBool              {false};
     QDate m_conflictDate;
 
