From 954b4054b701cba2ad51ebb41a84af2d1e7346b9 Mon Sep 17 00:00:00 2001
From: Timothy D Witham <twitham@sbcglobal.net>
Date: Mon, 17 Jul 2023 23:45:10 -0500
Subject: [PATCH] MythMusic: "Play Now" any tracks from the music browsers

ref: https://forum.mythtv.org/viewtopic.php?p=25164#p25164

Spontaneous listeners want to just play an album or song now and care
less about any playlist.  This adds a simple "Play Now" to the menus
which is identical to "Add Tracks" except that it immediately starts
playing the additions.

This required changing the working list to allow duplicates as you
need the whole album now even if you played just part of it yesterday.
Of course removing a track removes all occurances of it.
---
 .../mythmusic/mythmusic/musiccommon.cpp       | 44 ++++++++++++++-----
 mythplugins/mythmusic/mythmusic/musicplayer.h |  5 +++
 .../mythmusic/playlisteditorview.cpp          |  9 +++-
 .../mythmusic/mythmusic/searchview.cpp        |  4 +-
 4 files changed, 49 insertions(+), 13 deletions(-)

diff --git a/mythplugins/mythmusic/mythmusic/musiccommon.cpp b/mythplugins/mythmusic/mythmusic/musiccommon.cpp
index 96e8dcfa9b9..99e7aeaa9e3 100644
--- a/mythplugins/mythmusic/mythmusic/musiccommon.cpp
+++ b/mythplugins/mythmusic/mythmusic/musiccommon.cpp
@@ -1349,8 +1349,10 @@ void MusicCommon::customEvent(QEvent *event)
         {
             if (resulttext == tr("Fullscreen Visualizer"))
                 switchView(MV_VISUALIZER);
-            else if (resulttext == tr("Playlist Editor"))
+            else if (resulttext == tr("Playlist Editor") ||
+                     resulttext == tr("Play Now..."))
             {
+                gPlayer->inPlayNow(resulttext == tr("Play Now..."));
                 if (gCoreContext->GetSetting("MusicPlaylistEditorView", "tree") ==  "tree")
                     switchView(MV_PLAYLISTEDITORTREE);
                 else
@@ -1364,6 +1366,12 @@ void MusicCommon::customEvent(QEvent *event)
                 switchView(MV_PLAYLISTEDITORTREE);
             else if (resulttext == tr("Lyrics"))
                 switchView(MV_LYRICS);
+            else if (resulttext == tr("Play Now"))
+            {
+                m_playlistOptions.insertPLOption = PL_INSERTATEND;
+                m_playlistOptions.playPLOption = PL_FIRSTNEW;
+                doUpdatePlaylist();
+            }
         }
         else if (resultid == "submenu")
         {
@@ -1525,6 +1533,12 @@ void MusicCommon::customEvent(QEvent *event)
                 m_playlistOptions.insertPLOption = PL_INSERTATEND;
                 doUpdatePlaylist();
             }
+            else if (resulttext == tr("Play Now"))
+            {
+                m_playlistOptions.insertPLOption = PL_INSERTATEND;
+                m_playlistOptions.playPLOption = PL_FIRSTNEW;
+                doUpdatePlaylist();
+            }
         }
         else if (resultid == "visualizermenu")
         {
@@ -1627,7 +1641,8 @@ void MusicCommon::customEvent(QEvent *event)
                 if (mdata && mdata->ID() == (MusicMetadata::IdType) trackID)
                 {
                     m_currentPlaylist->RemoveItem(item);
-                    break;
+                    x -= 1;  // remove all entries, or:
+                    // break; // remove only first entry
                 }
             }
         }
@@ -1707,6 +1722,7 @@ void MusicCommon::customEvent(QEvent *event)
             gPlayer->getCurrentPlaylist()->getStats(&m_playlistTrackCount, &m_playlistMaxTime,
                                                      m_currentTrack, &m_playlistPlayedTime);
 
+        updateUIPlaylist();     // else album art doesn't update
         updatePlaylistStats();
         updateTrackInfo(gPlayer->getCurrentMetadata());
     }
@@ -2174,11 +2190,18 @@ MythMenu* MusicCommon::createMainMenu(void)
     auto *menu = new MythMenu(label, this, "mainmenu");
 
     if (m_currentView == MV_PLAYLISTEDITORTREE)
+    {
         menu->AddItem(tr("Switch To Gallery View"));
+    }
     else if (m_currentView == MV_PLAYLISTEDITORGALLERY)
+    {
         menu->AddItem(tr("Switch To Tree View"));
+    }
     else if (m_currentView == MV_PLAYLIST)
+    {
+        menu->AddItem(MusicCommon::tr("Play Now..."));
         menu->AddItem(MusicCommon::tr("Playlist Editor"));
+    }
 
     QStringList screenList;
     MythScreenType *screen = this;
@@ -2383,8 +2406,9 @@ MythMenu* MusicCommon::createPlaylistOptionsMenu(void)
 
     auto *menu = new MythMenu(label, this, "playlistoptionsmenu");
 
-    menu->AddItem(tr("Replace Tracks"));
+    menu->AddItem(tr("Play Now"));
     menu->AddItem(tr("Add Tracks"));
+    menu->AddItem(tr("Replace Tracks"));
 
     return menu;
 }
@@ -2525,16 +2549,16 @@ void MusicCommon::doUpdatePlaylist(void)
     {
         // update playlist from quick playlist
         gMusicData->m_all_playlists->getActive()->fillSonglistFromQuery(
-                    m_whereClause, true,
-                    m_playlistOptions.insertPLOption, curTrackID);
+            m_whereClause, false, // play now must be able to repeat songs
+            m_playlistOptions.insertPLOption, curTrackID);
         m_whereClause.clear();
     }
     else if (!m_songList.isEmpty())
     {
         // update playlist from song list (from the playlist editor)
         gMusicData->m_all_playlists->getActive()->fillSonglistFromList(
-                    m_songList, true,
-                    m_playlistOptions.insertPLOption, curTrackID);
+            m_songList, false, // play now must be able to repeat songs
+            m_playlistOptions.insertPLOption, curTrackID);
 
         m_songList.clear();
     }
@@ -2543,9 +2567,9 @@ void MusicCommon::doUpdatePlaylist(void)
 
     updateUIPlaylist();
 
-    if (m_currentTrack == -1)
-        playFirstTrack();
-    else
+    // if (m_currentTrack == -1) // why? non-playing should also
+    //     playFirstTrack();     // start playing per options -twitham
+    // else
     {
         switch (m_playlistOptions.playPLOption)
         {
diff --git a/mythplugins/mythmusic/mythmusic/musicplayer.h b/mythplugins/mythmusic/mythmusic/musicplayer.h
index 022864bb0fc..1a9d4a1adeb 100644
--- a/mythplugins/mythmusic/mythmusic/musicplayer.h
+++ b/mythplugins/mythmusic/mythmusic/musicplayer.h
@@ -119,6 +119,10 @@ class MusicPlayer : public QObject, public MythObservable
     void canShowPlayer(bool canShow) { m_canShowPlayer = canShow; }
     bool getCanShowPlayer(void) const { return m_canShowPlayer; }
 
+    /// whether we entered the Play Now browser
+    void inPlayNow(bool inPlayNow) { m_inPlayNow = inPlayNow; }
+    bool getInPlayNow(void) const { return m_inPlayNow; }
+
     Decoder        *getDecoder(void) { return m_decoderHandler ? m_decoderHandler->getDecoder() : nullptr; }
     DecoderHandler *getDecoderHandler(void) { return m_decoderHandler; }
     AudioOutput    *getOutput(void) { return m_output; }
@@ -230,6 +234,7 @@ class MusicPlayer : public QObject, public MythObservable
     bool         m_isPlaying          {false};
     bool         m_isAutoplay         {false};
     bool         m_canShowPlayer      {true};
+    bool         m_inPlayNow          {false};
     bool         m_autoShowPlayer     {true};
     bool         m_wasPlaying         {false};
     bool         m_updatedLastplay    {false};
diff --git a/mythplugins/mythmusic/mythmusic/playlisteditorview.cpp b/mythplugins/mythmusic/mythmusic/playlisteditorview.cpp
index 3722eba8cdc..b5bf6e885bc 100644
--- a/mythplugins/mythmusic/mythmusic/playlisteditorview.cpp
+++ b/mythplugins/mythmusic/mythmusic/playlisteditorview.cpp
@@ -812,7 +812,14 @@ void PlaylistEditorView::treeItemClicked(MythUIButtonListItem *item)
 
     if (mnode->getAction() == "trackid")
     {
-        if (gPlayer->getCurrentPlaylist()->checkTrack(mnode->getInt()))
+        if (gPlayer->getInPlayNow())
+        {
+            gPlayer->addTrack(mnode->getInt(), false);
+            gPlayer->setCurrentTrackPos(gPlayer->getCurrentPlaylist()->getTrackCount() - 1);
+            updateUIPlaylist();
+            mnode->setCheck(MythUIButtonListItem::FullChecked);
+        }
+        else if (gPlayer->getCurrentPlaylist()->checkTrack(mnode->getInt()))
         {
             // remove track from the current playlist
             gPlayer->removeTrack(mnode->getInt());
diff --git a/mythplugins/mythmusic/mythmusic/searchview.cpp b/mythplugins/mythmusic/mythmusic/searchview.cpp
index f42b0c6df65..3104884f66a 100644
--- a/mythplugins/mythmusic/mythmusic/searchview.cpp
+++ b/mythplugins/mythmusic/mythmusic/searchview.cpp
@@ -178,7 +178,7 @@ void SearchView::customEvent(QEvent *event)
                     }
                 }
             }
-            else if (resulttext == tr("Add To Playlist And Play"))
+            else if (resulttext == tr("Play Now"))
             {
                 if (GetFocusWidget() == m_tracksList)
                 {
@@ -273,8 +273,8 @@ void SearchView::ShowMenu(void)
                     menu->AddItem(tr("Remove From Playlist"));
                 else
                 {
+                    menu->AddItem(tr("Play Now"));
                     menu->AddItem(tr("Add To Playlist"));
-                    menu->AddItem(tr("Add To Playlist And Play"));
                 }
             }
         }
From 6758ae4ba6b7dff9823c902878236830dc38abe9 Mon Sep 17 00:00:00 2001
From: Timothy D Witham <twitham@sbcglobal.net>
Date: Thu, 20 Jul 2023 17:44:19 -0500
Subject: [PATCH] MythMusic: enter browser at Albums rather than All Tracks

---
 mythplugins/mythmusic/mythmusic/playlisteditorview.cpp | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/mythplugins/mythmusic/mythmusic/playlisteditorview.cpp b/mythplugins/mythmusic/mythmusic/playlisteditorview.cpp
index b5bf6e885bc..83ce989f7a4 100644
--- a/mythplugins/mythmusic/mythmusic/playlisteditorview.cpp
+++ b/mythplugins/mythmusic/mythmusic/playlisteditorview.cpp
@@ -159,6 +159,11 @@ bool PlaylistEditorView::Create(void)
         QStringList route = gCoreContext->GetSetting("MusicTreeLastActive", "").split("\n");
         restoreTreePosition(route);
     }
+    else	 // default to Albums, rather than All Tracks, 2023/07
+    {
+        QStringList route = (QString("Root Music Node.Albums").split("."));
+        restoreTreePosition(route);
+    }
 
     connect(m_playlistTree, &MythUIButtonTree::itemClicked,
             this, &PlaylistEditorView::treeItemClicked);
From 236c08952bfe05ff40fcf6ba0a40abc27acfe86d Mon Sep 17 00:00:00 2001
From: Timothy D Witham <twitham@sbcglobal.net>
Date: Thu, 20 Jul 2023 23:24:37 -0500
Subject: [PATCH] MythMusic Play Now: checked tracks toggle as expected

---
 .../mythmusic/mythmusic/playlisteditorview.cpp     | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

diff --git a/mythplugins/mythmusic/mythmusic/playlisteditorview.cpp b/mythplugins/mythmusic/mythmusic/playlisteditorview.cpp
index 83ce989f7a4..14d1cf24db6 100644
--- a/mythplugins/mythmusic/mythmusic/playlisteditorview.cpp
+++ b/mythplugins/mythmusic/mythmusic/playlisteditorview.cpp
@@ -817,19 +817,19 @@ void PlaylistEditorView::treeItemClicked(MythUIButtonListItem *item)
 
     if (mnode->getAction() == "trackid")
     {
-        if (gPlayer->getInPlayNow())
+        if (gPlayer->getCurrentPlaylist()->checkTrack(mnode->getInt()))
+        {
+            // remove track from the current playlist
+            gPlayer->removeTrack(mnode->getInt());
+            mnode->setCheck(MythUIButtonListItem::NotChecked);
+        }
+        else if (gPlayer->getInPlayNow())
         {
             gPlayer->addTrack(mnode->getInt(), false);
             gPlayer->setCurrentTrackPos(gPlayer->getCurrentPlaylist()->getTrackCount() - 1);
             updateUIPlaylist();
             mnode->setCheck(MythUIButtonListItem::FullChecked);
         }
-        else if (gPlayer->getCurrentPlaylist()->checkTrack(mnode->getInt()))
-        {
-            // remove track from the current playlist
-            gPlayer->removeTrack(mnode->getInt());
-            mnode->setCheck(MythUIButtonListItem::NotChecked);
-        }
         else
         {
             // add track to the current playlist
From c690be082bbdb7288dda960d83b6cf0d5c02b7b8 Mon Sep 17 00:00:00 2001
From: Timothy D Witham <twitham@sbcglobal.net>
Date: Sat, 22 Jul 2023 00:51:49 -0500
Subject: [PATCH] MythMusic: Play Now after Add Tracks in editor menu

---
 mythplugins/mythmusic/mythmusic/musiccommon.cpp | 12 ++++++++++--
 1 file changed, 10 insertions(+), 2 deletions(-)

diff --git a/mythplugins/mythmusic/mythmusic/musiccommon.cpp b/mythplugins/mythmusic/mythmusic/musiccommon.cpp
index 99e7aeaa9e3..74ffff13237 100644
--- a/mythplugins/mythmusic/mythmusic/musiccommon.cpp
+++ b/mythplugins/mythmusic/mythmusic/musiccommon.cpp
@@ -2406,8 +2406,16 @@ MythMenu* MusicCommon::createPlaylistOptionsMenu(void)
 
     auto *menu = new MythMenu(label, this, "playlistoptionsmenu");
 
-    menu->AddItem(tr("Play Now"));
-    menu->AddItem(tr("Add Tracks"));
+    if (gPlayer->getInPlayNow())
+    {
+	menu->AddItem(tr("Play Now"));
+	menu->AddItem(tr("Add Tracks"));
+    }
+    else
+    {
+	menu->AddItem(tr("Add Tracks"));
+	menu->AddItem(tr("Play Now"));
+    }
     menu->AddItem(tr("Replace Tracks"));
 
     return menu;
From 79fa517e10a8252885ebbc49d05cd04c4361b5b0 Mon Sep 17 00:00:00 2001
From: Timothy D Witham <twitham@sbcglobal.net>
Date: Thu, 27 Jul 2023 00:52:00 -0500
Subject: [PATCH] MythMusic: Cancel shuffles and repeats to Play Now

---
 .../mythmusic/mythmusic/musiccommon.cpp       | 19 ++++++++-----------
 1 file changed, 8 insertions(+), 11 deletions(-)

diff --git a/mythplugins/mythmusic/mythmusic/musiccommon.cpp b/mythplugins/mythmusic/mythmusic/musiccommon.cpp
index 74ffff13237..a2146c3cc04 100644
--- a/mythplugins/mythmusic/mythmusic/musiccommon.cpp
+++ b/mythplugins/mythmusic/mythmusic/musiccommon.cpp
@@ -1366,12 +1366,6 @@ void MusicCommon::customEvent(QEvent *event)
                 switchView(MV_PLAYLISTEDITORTREE);
             else if (resulttext == tr("Lyrics"))
                 switchView(MV_LYRICS);
-            else if (resulttext == tr("Play Now"))
-            {
-                m_playlistOptions.insertPLOption = PL_INSERTATEND;
-                m_playlistOptions.playPLOption = PL_FIRSTNEW;
-                doUpdatePlaylist();
-            }
         }
         else if (resultid == "submenu")
         {
@@ -1534,7 +1528,10 @@ void MusicCommon::customEvent(QEvent *event)
                 doUpdatePlaylist();
             }
             else if (resulttext == tr("Play Now"))
-            {
+            {               // cancel shuffles and repeats to play now
+                gPlayer->setShuffleMode(MusicPlayer::SHUFFLE_OFF);
+                gPlayer->setRepeatMode(MusicPlayer::REPEAT_OFF);
+                updateShuffleMode(true);
                 m_playlistOptions.insertPLOption = PL_INSERTATEND;
                 m_playlistOptions.playPLOption = PL_FIRSTNEW;
                 doUpdatePlaylist();
@@ -2408,13 +2405,13 @@ MythMenu* MusicCommon::createPlaylistOptionsMenu(void)
 
     if (gPlayer->getInPlayNow())
     {
-	menu->AddItem(tr("Play Now"));
-	menu->AddItem(tr("Add Tracks"));
+        menu->AddItem(tr("Play Now"));
+        menu->AddItem(tr("Add Tracks"));
     }
     else
     {
-	menu->AddItem(tr("Add Tracks"));
-	menu->AddItem(tr("Play Now"));
+        menu->AddItem(tr("Add Tracks"));
+        menu->AddItem(tr("Play Now"));
     }
     menu->AddItem(tr("Replace Tracks"));
 
From 45df097bdc2c1b91b13cf3b1cceddc1869a88baf Mon Sep 17 00:00:00 2001
From: Timothy D Witham <twitham@sbcglobal.net>
Date: Sat, 29 Jul 2023 23:04:04 -0500
Subject: [PATCH] MythMusic s/Play Now.../Play Now/g

---
 mythplugins/mythmusic/mythmusic/musiccommon.cpp | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/mythplugins/mythmusic/mythmusic/musiccommon.cpp b/mythplugins/mythmusic/mythmusic/musiccommon.cpp
index a2146c3cc04..828b57fa5b3 100644
--- a/mythplugins/mythmusic/mythmusic/musiccommon.cpp
+++ b/mythplugins/mythmusic/mythmusic/musiccommon.cpp
@@ -1350,9 +1350,9 @@ void MusicCommon::customEvent(QEvent *event)
             if (resulttext == tr("Fullscreen Visualizer"))
                 switchView(MV_VISUALIZER);
             else if (resulttext == tr("Playlist Editor") ||
-                     resulttext == tr("Play Now..."))
+                     resulttext == tr("Play Now"))
             {
-                gPlayer->inPlayNow(resulttext == tr("Play Now..."));
+                gPlayer->inPlayNow(resulttext == tr("Play Now"));
                 if (gCoreContext->GetSetting("MusicPlaylistEditorView", "tree") ==  "tree")
                     switchView(MV_PLAYLISTEDITORTREE);
                 else
@@ -2196,7 +2196,7 @@ MythMenu* MusicCommon::createMainMenu(void)
     }
     else if (m_currentView == MV_PLAYLIST)
     {
-        menu->AddItem(MusicCommon::tr("Play Now..."));
+        menu->AddItem(MusicCommon::tr("Play Now"));
         menu->AddItem(MusicCommon::tr("Playlist Editor"));
     }
 
From 8fabd372694b5a160e8acf34c23980b0f5de568d Mon Sep 17 00:00:00 2001
From: Timothy D Witham <twitham@sbcglobal.net>
Date: Tue, 1 Aug 2023 17:28:51 -0500
Subject: [PATCH] MythMusic: add Play Now to Playlist menus

---
 .../mythmusic/playlisteditorview.cpp          | 45 ++++++++++++++++---
 1 file changed, 39 insertions(+), 6 deletions(-)

diff --git a/mythplugins/mythmusic/mythmusic/playlisteditorview.cpp b/mythplugins/mythmusic/mythmusic/playlisteditorview.cpp
index 14d1cf24db6..a04ec27b5c5 100644
--- a/mythplugins/mythmusic/mythmusic/playlisteditorview.cpp
+++ b/mythplugins/mythmusic/mythmusic/playlisteditorview.cpp
@@ -159,7 +159,7 @@ bool PlaylistEditorView::Create(void)
         QStringList route = gCoreContext->GetSetting("MusicTreeLastActive", "").split("\n");
         restoreTreePosition(route);
     }
-    else	 // default to Albums, rather than All Tracks, 2023/07
+    else         // default to Albums, rather than All Tracks, 2023/07
     {
         QStringList route = (QString("Root Music Node.Albums").split("."));
         restoreTreePosition(route);
@@ -302,16 +302,23 @@ void PlaylistEditorView::customEvent(QEvent *event)
             }
             else if (resulttext == tr("Replace Tracks"))
             {
-                m_playlistOptions.playPLOption = PL_CURRENT;
                 m_playlistOptions.insertPLOption = PL_REPLACE;
                 doUpdatePlaylist();
             }
             else if (resulttext == tr("Add Tracks"))
             {
-                m_playlistOptions.playPLOption = PL_CURRENT;
                 m_playlistOptions.insertPLOption = PL_INSERTATEND;
                 doUpdatePlaylist();
             }
+            else if (resulttext == tr("Play Now"))
+            {               // cancel shuffles and repeats to play now
+                gPlayer->setShuffleMode(MusicPlayer::SHUFFLE_OFF);
+                gPlayer->setRepeatMode(MusicPlayer::REPEAT_OFF);
+                updateShuffleMode(true);
+                m_playlistOptions.insertPLOption = PL_INSERTATEND;
+                m_playlistOptions.playPLOption = PL_FIRSTNEW;
+                doUpdatePlaylist();
+            }
         }
         else if (resultid == "treeplaylistmenu")
         {
@@ -336,7 +343,6 @@ void PlaylistEditorView::customEvent(QEvent *event)
             }
             else if (resulttext == tr("Replace Tracks"))
             {
-                m_playlistOptions.playPLOption = PL_CURRENT;
                 m_playlistOptions.insertPLOption = PL_REPLACE;
                 doUpdatePlaylist();
             }
@@ -345,6 +351,15 @@ void PlaylistEditorView::customEvent(QEvent *event)
                 m_playlistOptions.insertPLOption = PL_INSERTATEND;
                 doUpdatePlaylist();
             }
+            else if (resulttext == tr("Play Now"))
+            {               // cancel shuffles and repeats to play now
+                gPlayer->setShuffleMode(MusicPlayer::SHUFFLE_OFF);
+                gPlayer->setRepeatMode(MusicPlayer::REPEAT_OFF);
+                updateShuffleMode(true);
+                m_playlistOptions.insertPLOption = PL_INSERTATEND;
+                m_playlistOptions.playPLOption = PL_FIRSTNEW;
+                doUpdatePlaylist();
+            }
         }
     }
 
@@ -692,8 +707,17 @@ MythMenu* PlaylistEditorView::createPlaylistMenu(void)
         if (mnode->getAction() == "playlist")
         {
             menu = new MythMenu(tr("Playlist Actions"), this, "treeplaylistmenu");
+            if (gPlayer->getInPlayNow())
+            {
+                menu->AddItem(tr("Play Now"));
+                menu->AddItem(tr("Add Tracks"));
+            }
+            else
+            {
+                menu->AddItem(tr("Add Tracks"));
+                menu->AddItem(tr("Play Now"));
+            }
             menu->AddItem(tr("Replace Tracks"));
-            menu->AddItem(tr("Add Tracks"));
             menu->AddItem(tr("Remove Playlist"));
         }
     }
@@ -724,8 +748,17 @@ MythMenu* PlaylistEditorView::createSmartPlaylistMenu(void)
         {
             menu = new MythMenu(tr("Smart Playlist Actions"), this, "smartplaylistmenu");
 
+            if (gPlayer->getInPlayNow())
+            {
+                menu->AddItem(tr("Play Now"));
+                menu->AddItem(tr("Add Tracks"));
+            }
+            else
+            {
+                menu->AddItem(tr("Add Tracks"));
+                menu->AddItem(tr("Play Now"));
+            }
             menu->AddItem(tr("Replace Tracks"));
-            menu->AddItem(tr("Add Tracks"));
 
             menu->AddItem(tr("Edit Smart Playlist"));
             menu->AddItem(tr("New Smart Playlist"));
From 3b0e678fd74a83343e9618dc80840d3f8b6cd7ae Mon Sep 17 00:00:00 2001
From: Timothy D Witham <twitham@sbcglobal.net>
Date: Sun, 13 Aug 2023 23:21:15 -0500
Subject: [PATCH] MythMusic: move re-added tracks to the end of the list

So that adding an album today doesn't miss tracks added yesterday.
---
 .../mythmusic/mythmusic/musiccommon.cpp       | 18 ++++----
 mythplugins/mythmusic/mythmusic/playlist.cpp  | 44 ++++++++++---------
 mythplugins/mythmusic/mythmusic/playlist.h    | 24 +++++-----
 3 files changed, 44 insertions(+), 42 deletions(-)

diff --git a/mythplugins/mythmusic/mythmusic/musiccommon.cpp b/mythplugins/mythmusic/mythmusic/musiccommon.cpp
index 828b57fa5b3..c8ce102b1a1 100644
--- a/mythplugins/mythmusic/mythmusic/musiccommon.cpp
+++ b/mythplugins/mythmusic/mythmusic/musiccommon.cpp
@@ -1530,8 +1530,9 @@ void MusicCommon::customEvent(QEvent *event)
             else if (resulttext == tr("Play Now"))
             {               // cancel shuffles and repeats to play now
                 gPlayer->setShuffleMode(MusicPlayer::SHUFFLE_OFF);
+                updateShuffleMode();
                 gPlayer->setRepeatMode(MusicPlayer::REPEAT_OFF);
-                updateShuffleMode(true);
+                updateRepeatMode();
                 m_playlistOptions.insertPLOption = PL_INSERTATEND;
                 m_playlistOptions.playPLOption = PL_FIRSTNEW;
                 doUpdatePlaylist();
@@ -2540,12 +2541,9 @@ void MusicCommon::showPlaylistOptionsMenu(bool addMainMenu)
 void MusicCommon::doUpdatePlaylist(void)
 {
     int curTrackID = -1;
-    int trackCount = 0;
+    int added = 0;
     int curPos = gPlayer->getCurrentTrackPos();
 
-    if (gPlayer->getCurrentPlaylist())
-        trackCount = gPlayer->getCurrentPlaylist()->getTrackCount();
-
     // store id of current track
     if (gPlayer->getCurrentMetadata())
         curTrackID = gPlayer->getCurrentMetadata()->ID();
@@ -2553,16 +2551,16 @@ void MusicCommon::doUpdatePlaylist(void)
     if (!m_whereClause.isEmpty())
     {
         // update playlist from quick playlist
-        gMusicData->m_all_playlists->getActive()->fillSonglistFromQuery(
-            m_whereClause, false, // play now must be able to repeat songs
+        added = gMusicData->m_all_playlists->getActive()->fillSonglistFromQuery(
+            m_whereClause, true,
             m_playlistOptions.insertPLOption, curTrackID);
         m_whereClause.clear();
     }
     else if (!m_songList.isEmpty())
     {
         // update playlist from song list (from the playlist editor)
-        gMusicData->m_all_playlists->getActive()->fillSonglistFromList(
-            m_songList, false, // play now must be able to repeat songs
+        added = gMusicData->m_all_playlists->getActive()->fillSonglistFromList(
+            m_songList, true,
             m_playlistOptions.insertPLOption, curTrackID);
 
         m_songList.clear();
@@ -2601,7 +2599,7 @@ void MusicCommon::doUpdatePlaylist(void)
                     case PL_INSERTATEND:
                     {
                         pause();
-                        if (!gPlayer->setCurrentTrackPos(trackCount))
+                        if (!gPlayer->setCurrentTrackPos(gPlayer->getCurrentPlaylist()->getTrackCount() - added))
                             playFirstTrack();
                         break;
                     }
diff --git a/mythplugins/mythmusic/mythmusic/playlist.cpp b/mythplugins/mythmusic/mythmusic/playlist.cpp
index ac9315ddee5..ae38b166678 100644
--- a/mythplugins/mythmusic/mythmusic/playlist.cpp
+++ b/mythplugins/mythmusic/mythmusic/playlist.cpp
@@ -680,13 +680,14 @@ void Playlist::fillSongsFromSonglist(const QString& songList)
         gPlayer->activePlaylistChanged(-1, false);
 }
 
-void Playlist::fillSonglistFromQuery(const QString& whereClause,
-                                     bool removeDuplicates,
-                                     InsertPLOption insertOption,
-                                     int currentTrackID)
+int Playlist::fillSonglistFromQuery(const QString& whereClause,
+                                    bool removeDuplicates,
+                                    InsertPLOption insertOption,
+                                    int currentTrackID)
 {
     QString orig_songlist = toRawSonglist();
     QString new_songlist;
+    int added = 0;
 
     disableSaves();
     removeAllTracks();
@@ -716,17 +717,18 @@ void Playlist::fillSonglistFromQuery(const QString& whereClause,
         fillSongsFromSonglist(new_songlist);
         enableSaves();
         changed();
-        return;
+        return 0;
     }
 
     while (query.next())
     {
         new_songlist += "," + query.value(0).toString();
+        added++;
     }
     new_songlist.remove(0, 1);
 
     if (removeDuplicates && insertOption != PL_REPLACE)
-        new_songlist = removeDuplicateTracks(orig_songlist, new_songlist);
+        orig_songlist = removeDuplicateTracks(new_songlist, orig_songlist);
 
     switch (insertOption)
     {
@@ -777,13 +779,14 @@ void Playlist::fillSonglistFromQuery(const QString& whereClause,
 
     enableSaves();
     changed();
+    return added;
 }
 
 // songList is a list of trackIDs to add
-void Playlist::fillSonglistFromList(const QList<int> &songList,
-                                    bool removeDuplicates,
-                                    InsertPLOption insertOption,
-                                    int currentTrackID)
+int Playlist::fillSonglistFromList(const QList<int> &songList,
+                                   bool removeDuplicates,
+                                   InsertPLOption insertOption,
+                                   int currentTrackID)
 {
     QString orig_songlist = toRawSonglist();
     QString new_songlist;
@@ -799,7 +802,7 @@ void Playlist::fillSonglistFromList(const QList<int> &songList,
     new_songlist.remove(0, 1);
 
     if (removeDuplicates && insertOption != PL_REPLACE)
-        new_songlist = removeDuplicateTracks(orig_songlist, new_songlist);
+        orig_songlist = removeDuplicateTracks(new_songlist, orig_songlist);
 
     switch (insertOption)
     {
@@ -851,6 +854,7 @@ void Playlist::fillSonglistFromList(const QList<int> &songList,
     enableSaves();
 
     changed();
+    return songList.count();
 }
 
 QString Playlist::toRawSonglist(bool shuffled, bool tracksOnly)
@@ -892,10 +896,10 @@ QString Playlist::toRawSonglist(bool shuffled, bool tracksOnly)
     return rawList;
 }
 
-void Playlist::fillSonglistFromSmartPlaylist(const QString& category, const QString& name,
-                                             bool removeDuplicates,
-                                             InsertPLOption insertOption,
-                                             int currentTrackID)
+int Playlist::fillSonglistFromSmartPlaylist(const QString& category, const QString& name,
+                                            bool removeDuplicates,
+                                            InsertPLOption insertOption,
+                                            int currentTrackID)
 {
     MSqlQuery query(MSqlQuery::InitCon());
 
@@ -905,7 +909,7 @@ void Playlist::fillSonglistFromSmartPlaylist(const QString& category, const QStr
     {
         LOG(VB_GENERAL, LOG_WARNING, LOC +
             QString("Cannot find Smartplaylist Category: %1") .arg(category));
-        return;
+        return 0;
     }
 
     // find smartplaylist
@@ -934,13 +938,13 @@ void Playlist::fillSonglistFromSmartPlaylist(const QString& category, const QStr
         {
             LOG(VB_GENERAL, LOG_WARNING, LOC +
                 QString("Cannot find smartplaylist: %1").arg(name));
-            return;
+            return 0;
         }
     }
     else
     {
         MythDB::DBError("Find SmartPlaylist", query);
-        return;
+        return 0;
     }
 
     // get smartplaylist items
@@ -980,8 +984,8 @@ void Playlist::fillSonglistFromSmartPlaylist(const QString& category, const QStr
     if (limitTo > 0)
         whereClause +=  " LIMIT " + QString::number(limitTo);
 
-    fillSonglistFromQuery(whereClause, removeDuplicates,
-                          insertOption, currentTrackID);
+    return fillSonglistFromQuery(whereClause, removeDuplicates,
+                                 insertOption, currentTrackID);
 }
 
 void Playlist::changed(void)
diff --git a/mythplugins/mythmusic/mythmusic/playlist.h b/mythplugins/mythmusic/mythmusic/playlist.h
index 5c91d53a2af..f3b939e579f 100644
--- a/mythplugins/mythmusic/mythmusic/playlist.h
+++ b/mythplugins/mythmusic/mythmusic/playlist.h
@@ -62,18 +62,18 @@ class Playlist : public QObject
     void describeYourself(void) const; //  debugging
 
     void fillSongsFromSonglist(const QString& songList);
-    void fillSonglistFromQuery(const QString& whereClause, 
-                               bool removeDuplicates = false,
-                               InsertPLOption insertOption = PL_REPLACE,
-                               int currentTrackID = 0);
-    void fillSonglistFromSmartPlaylist(const QString& category, const QString& name,
-                                       bool removeDuplicates = false,
-                                       InsertPLOption insertOption = PL_REPLACE,
-                                       int currentTrackID = 0);
-    void fillSonglistFromList(const QList<int> &songList,
-                              bool removeDuplicates,
-                              InsertPLOption insertOption,
-                              int currentTrackID);
+    int fillSonglistFromQuery(const QString& whereClause,
+                              bool removeDuplicates = false,
+                              InsertPLOption insertOption = PL_REPLACE,
+                              int currentTrackID = 0);
+    int fillSonglistFromSmartPlaylist(const QString& category, const QString& name,
+                                      bool removeDuplicates = false,
+                                      InsertPLOption insertOption = PL_REPLACE,
+                                      int currentTrackID = 0);
+    int fillSonglistFromList(const QList<int> &songList,
+                             bool removeDuplicates,
+                             InsertPLOption insertOption,
+                             int currentTrackID);
     QString toRawSonglist(bool shuffled = false, bool tracksOnly = false);
 
 
From a14d7c6d90d5bc415da9730aebf5c5965f9709c2 Mon Sep 17 00:00:00 2001
From: Timothy D Witham <twitham@sbcglobal.net>
Date: Mon, 4 Sep 2023 02:23:46 -0500
Subject: [PATCH] MythMusic: enter the music browser where we left last time

---
 mythplugins/mythmusic/mythmusic/playlisteditorview.cpp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/mythplugins/mythmusic/mythmusic/playlisteditorview.cpp b/mythplugins/mythmusic/mythmusic/playlisteditorview.cpp
index a04ec27b5c5..1e2b96d483d 100644
--- a/mythplugins/mythmusic/mythmusic/playlisteditorview.cpp
+++ b/mythplugins/mythmusic/mythmusic/playlisteditorview.cpp
@@ -154,7 +154,7 @@ bool PlaylistEditorView::Create(void)
 
     m_playlistTree->AssignTree(m_rootNode);
 
-    if (m_restorePosition)
+    if (true) // v34 - continue where we left off (was m_restorePosition)
     {
         QStringList route = gCoreContext->GetSetting("MusicTreeLastActive", "").split("\n");
         restoreTreePosition(route);
