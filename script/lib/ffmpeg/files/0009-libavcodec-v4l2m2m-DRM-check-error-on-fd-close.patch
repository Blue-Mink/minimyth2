From ee29de8f8ead8989f02d0c359b5f7d8171836e1b Mon Sep 17 00:00:00 2001
From: Jorge Ramirez-Ortiz <jorge.ramirez-ortiz@linaro.org>
Date: Tue, 1 May 2018 11:06:57 +0000
Subject: [PATCH 09/13] libavcodec: v4l2m2m: DRM: check error on fd close

Signed-off-by: Jorge Ramirez-Ortiz <jorge.ramirez-ortiz@linaro.org>
---
 libavcodec/v4l2_buffers.c |  6 +-----
 libavcodec/v4l2_context.c | 22 +++++++++++++++++-----
 2 files changed, 18 insertions(+), 10 deletions(-)

diff --git a/libavcodec/v4l2_buffers.c b/libavcodec/v4l2_buffers.c
index df9f454..d715bc6 100644
--- a/libavcodec/v4l2_buffers.c
+++ b/libavcodec/v4l2_buffers.c
@@ -597,12 +597,8 @@ int ff_v4l2_buffer_initialize(V4L2Buffer* avbuf, int index)
         avbuf->buf.length    = avbuf->planes[0].length;
     }
 
-    if (V4L2_TYPE_IS_OUTPUT(ctx->type)) {
-	avbuf->drm_frame.objects[0].fd = -1;
-
-        /* dont enqueue the buffer */
+    if (V4L2_TYPE_IS_OUTPUT(ctx->type))
         return 0;
-    }
 
     if (buf_to_m2mctx(avbuf)->output_drm) {
         ret = v4l2_buffer_export_drm(avbuf);
diff --git a/libavcodec/v4l2_context.c b/libavcodec/v4l2_context.c
index ae90f0d..46a7590 100644
--- a/libavcodec/v4l2_context.c
+++ b/libavcodec/v4l2_context.c
@@ -393,7 +393,7 @@ static int v4l2_release_buffers(V4L2Context* ctx)
     struct v4l2_requestbuffers req = {
         .memory = V4L2_MEMORY_MMAP,
         .type = ctx->type,
-        .count = 0, /* 0 -> unmaps buffers from the driver */
+        .count = 0, /* 0 -> unmap all buffers from the driver */
     };
     int ret, i, j;
 
@@ -403,12 +403,23 @@ static int v4l2_release_buffers(V4L2Context* ctx)
         for (j = 0; j < buffer->num_planes; j++) {
             struct V4L2Plane_info *p = &buffer->plane_info[j];
 
+            if (V4L2_TYPE_IS_OUTPUT(ctx->type)) {
+                /* output buffers are not EXPORTED */
+                goto unmap;
+            }
+
             if (ctx_to_m2mctx(ctx)->output_drm) {
                 /* use the DRM frame to close */
-                if (buffer->drm_frame.objects[i].fd >= 0)
-                    close(buffer->drm_frame.objects[i].fd);
+                if (buffer->drm_frame.objects[j].fd >= 0) {
+                    if (close(buffer->drm_frame.objects[j].fd) < 0) {
+                        av_log(logger(ctx), AV_LOG_ERROR, "%s close drm fd "
+                            "[buffer=%2d, plane=%d, fd=%2d] - %s \n",
+                            ctx->name, i, j, buffer->drm_frame.objects[j].fd,
+                            av_err2str(AVERROR(errno)));
+                    }
+                }
             }
-
+unmap:
             if (p->mm_addr && p->length)
                 if (munmap(p->mm_addr, p->length) < 0)
                     av_log(logger(ctx), AV_LOG_ERROR, "%s unmap plane (%s))\n",
@@ -418,7 +429,8 @@ static int v4l2_release_buffers(V4L2Context* ctx)
 
     ret = ioctl(ctx_to_m2mctx(ctx)->fd, VIDIOC_REQBUFS, &req);
     if (ret < 0)
-	    av_log(logger(ctx), AV_LOG_ERROR, "release buffer errno (%d)\n", errno);
+            av_log(logger(ctx), AV_LOG_ERROR, "release all %s buffers (errno:%d, %s)\n",
+                ctx->name, errno, av_err2str(AVERROR(errno)));
 
     return ret;
 }
-- 
2.7.1

