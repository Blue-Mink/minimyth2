From d984c85e31e4d3a74b1128528bd8a7f5e7bd84d6 Mon Sep 17 00:00:00 2001
From: Jorge Ramirez-Ortiz <jramirez@baylibre.com>
Date: Sun, 29 Apr 2018 00:52:43 +0200
Subject: [PATCH 07/13] libavcodec: v4l2m2m: DRM: fix bufref_drm

Signed-off-by: Jorge Ramirez-Ortiz <jramirez@baylibre.com>
---
 libavcodec/v4l2_buffers.c | 54 +++++++++++++++++++++++------------------------
 1 file changed, 27 insertions(+), 27 deletions(-)

diff --git a/libavcodec/v4l2_buffers.c b/libavcodec/v4l2_buffers.c
index 0caedf9..df9f454 100644
--- a/libavcodec/v4l2_buffers.c
+++ b/libavcodec/v4l2_buffers.c
@@ -319,24 +319,17 @@ static int v4l2_buffer_export_drm(V4L2Buffer* avbuf)
     return 0;
 }
 
-static int v4l2_buf_to_bufref_drm(V4L2Buffer *in, AVBufferRef **buf)
+static int v4l2_buf_increase_ref(V4L2Buffer *in)
 {
     V4L2m2mContext *s = buf_to_m2mctx(in);
 
-    *buf = av_buffer_create((uint8_t *) &in->drm_frame, sizeof(in->drm_frame),
-	    v4l2_free_buffer, in, AV_BUFFER_FLAG_READONLY);
-
-    if (!buf)
-        return AVERROR(ENOMEM);
-
     if (in->context_ref)
         atomic_fetch_add(&in->context_refcount, 1);
     else {
         in->context_ref = av_buffer_ref(s->self_ref);
-        if (!in->context_ref) {
-            av_buffer_unref(buf);
+        if (!in->context_ref)
             return AVERROR(ENOMEM);
-        }
+
         in->context_refcount = 1;
     }
 
@@ -346,37 +339,44 @@ static int v4l2_buf_to_bufref_drm(V4L2Buffer *in, AVBufferRef **buf)
     return 0;
 }
 
+static int v4l2_buf_to_bufref_drm(V4L2Buffer *in, AVBufferRef **buf)
+{
+    int ret;
+
+    *buf = av_buffer_create((uint8_t *) &in->drm_frame,
+                            sizeof(in->drm_frame),
+                            v4l2_free_buffer,
+                            in, AV_BUFFER_FLAG_READONLY);
+    if (!*buf)
+        return AVERROR(ENOMEM);
+
+    ret = v4l2_buf_increase_ref(in);
+    if (ret)
+         av_buffer_unref(buf);
+
+    return ret;
+}
+
 static int v4l2_buf_to_bufref(V4L2Buffer *in, int plane, AVBufferRef **buf)
 {
-    V4L2m2mContext *s = buf_to_m2mctx(in);
+    int ret;
 
     if (plane >= in->num_planes)
         return AVERROR(EINVAL);
 
     /* most encoders return 0 in data_offset but vp8 does require this value */
-    *buf = av_buffer_create((char *)in->plane_info[plane].mm_addr +
-                            in->planes[plane].data_offset,
+    *buf = av_buffer_create((char *)in->plane_info[plane].mm_addr + in->planes[plane].data_offset,
                             in->plane_info[plane].length,
                             v4l2_free_buffer,
                             in, 0);
     if (!*buf)
         return AVERROR(ENOMEM);
 
-    if (in->context_ref)
-        atomic_fetch_add(&in->context_refcount, 1);
-    else {
-        in->context_ref = av_buffer_ref(s->self_ref);
-        if (!in->context_ref) {
-            av_buffer_unref(buf);
-            return AVERROR(ENOMEM);
-        }
-        in->context_refcount = 1;
-    }
-
-    in->status = V4L2BUF_RET_USER;
-    atomic_fetch_add_explicit(&s->refcount, 1, memory_order_relaxed);
+    ret = v4l2_buf_increase_ref(in);
+    if (ret)
+        av_buffer_unref(buf);
 
-    return 0;
+    return ret;
 }
 
 static int v4l2_bufref_to_buf(V4L2Buffer *out, int plane, const uint8_t* data, int size, AVBufferRef* bref)
-- 
2.7.1

