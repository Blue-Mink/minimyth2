diff -Naur perl-5.22.1-old/installman perl-5.22.1-new/installman
--- perl-5.22.1-old/installman	2015-10-17 14:32:14.000000000 +0200
+++ perl-5.22.1-new/installman	2016-03-05 19:06:22.186666670 +0100
@@ -1,7 +1,7 @@
-#!./perl -w
+#!perl -w
 
 BEGIN {
-    @INC = qw(lib);
+#    @INC = qw(lib);
 
     # This needs to be at BEGIN time, before any use of Config
     # install_lib itself loads and imports Config into main::
diff -Naur perl-5.22.1-old/installperl perl-5.22.1-new/installperl
--- perl-5.22.1-old/installperl	2015-10-17 14:38:37.000000000 +0200
+++ perl-5.22.1-new/installperl	2016-03-05 19:07:42.623333331 +0100
@@ -1,9 +1,9 @@
-#!./perl -w
+#!perl -w
 
 BEGIN {
     chdir '..' if !-d 'lib' and -d '../lib';
-    @INC = 'lib';
-    $ENV{PERL5LIB} = 'lib';
+#    @INC = 'lib';
+#    $ENV{PERL5LIB} = 'lib';
 
     # This needs to be at BEGIN time, before any use of Config
     # install_lib itself loads and imports Config into main::
@@ -802,7 +802,7 @@
 		print " " if (@opts);
 		print "$file\n";
 	    }
-	    system("strip", @opts, $file);
+	    system("@GAR_STRIP@", @opts, $file);
 	} else {
 	    print "# file '$file' skipped\n" if $opts{verbose};
 	}
diff -Naur perl-5.22.1-old/Makefile.SH perl-5.22.1-new/Makefile.SH
--- perl-5.22.1-old/Makefile.SH	2016-03-05 19:01:52.000000000 +0100
+++ perl-5.22.1-new/Makefile.SH	2016-03-05 19:40:37.033333334 +0100
@@ -40,8 +40,8 @@
 	# Prefix all runs of 'miniperl' and 'perl' with
 	# $ldlibpth so that ./perl finds *this* shared libperl.
 	case "$LD_LIBRARY_PATH" in
-	'')  ldlibpth="LD_LIBRARY_PATH=` quote "$pwd" `" ;;
-	*)   ldlibpth="LD_LIBRARY_PATH=` quote "$pwd" `:` quote "$LD_LIBRARY_PATH" `" ;;
+	'')  ldlibpth="LD_LIBRARY_PATH=";;
+	*)   ldlibpth="LD_LIBRARY_PATH=${LD_LIBRARY_PATH}";;
 	esac
 
 	pldlflags="$cccdlflags"
@@ -309,7 +309,7 @@
 # Macros to invoke a copy of miniperl during the build.  Targets which
 # are built using these macros should depend on \$(MINIPERL_EXE)
 MINIPERL_EXE = miniperl\$(EXE_EXT)
-MINIPERL = \$(LDLIBPTH) ./miniperl\$(EXE_EXT) -Ilib
+MINIPERL = \$(LDLIBPTH)  ./miniperl\$(EXE_EXT) -Ilib
 
 # Macros to invoke sort the MANIFEST during build
 MANIFEST_SRT = MANIFEST.srt
@@ -328,7 +328,7 @@
 	$spitshell >>$Makefile <<!GROK!THIS!
 # Macros to invoke a copy of our fully operational perl during the build.
 PERL_EXE = perl\$(EXE_EXT)
-RUN_PERL = \$(LDLIBPTH) \$(RUN) ./perl\$(EXE_EXT) -Ilib
+RUN_PERL = \$(LDLIBPTH) \$(RUN) perl\$(EXE_EXT)
 !GROK!THIS!
 	;;
 esac
@@ -364,7 +364,7 @@
 # If you're going to use valgrind and it can't be invoked as plain valgrind
 # then you'll need to change this, or override it on the make command line.
 VALGRIND ?= valgrind
-VG_TEST  ?= ./perl -e 1 2>/dev/null
+VG_TEST  ?= perl -e 1 2>/dev/null
 
 !GROK!THIS!
 	;;
@@ -681,6 +681,7 @@
 $spitshell >>$Makefile <<'!NO!SUBS!'
 generate_uudmap$(HOST_EXE_EXT): generate_uudmap$(OBJ_EXT)
 	$(CC) -o generate_uudmap$(EXE_EXT) $(LDFLAGS) generate_uudmap$(OBJ_EXT) $(libs)
+	cp `which perl-generate_uudmap` generate_uudmap
 
 !NO!SUBS!
 ;;
@@ -877,7 +878,8 @@
 		$spitshell >>$Makefile <<'!NO!SUBS!'
 lib/buildcustomize.pl: $& $(mini_obj)
 	$(CC) -o $(MINIPERL_EXE) $(CLDFLAGS) $(mini_obj) $(libs)
-	$(LDLIBPTH) ./miniperl$(HOST_EXE_EXT) -w -Ilib -Idist/Exporter/lib -MExporter -e '<?>' || sh -c 'echo >&2 Failed to build miniperl.  Please run make minitest; exit 1'
+	cp `which perl-miniperl` miniperl
+	$(LDLIBPTH) ./miniperl$(HOST_EXE_EXT) -w -Idist/Exporter/lib -MExporter -e '<?>' || sh -c 'echo >&2 Failed to build miniperl.  Please run make minitest; exit 1'
 	$(MINIPERL) -f write_buildcustomize.pl
 !NO!SUBS!
 		;;
@@ -885,7 +887,8 @@
 		$spitshell >>$Makefile <<'!NO!SUBS!'
 lib/buildcustomize.pl: $& $(mini_obj) write    ldcustomize.pl
 	$(CC) -o $(MINIPERL_EXE) $(mini_obj    libs)
-	$(LDLIBPTH) ./miniperl$(HOST    _EXT) -w -Ilib -Idist/Exporter/lib -MExporter -e '<?>' || sh -c 'echo >&2 Failed to build miniperl.  Please run make minitest; exit 1'
+	cp `which perl-miniperl` miniperl
+	$(LDLIBPTH) ./miniperl$(HOST    _EXT) -w -Idist/Exporter/lib -MExporter -e '<?>' || sh -c 'echo >&2 Failed to build miniperl.  Please run make minitest; exit 1'
 	$(MINIPERL) -f write_buildcustomize.pl    
 !NO!SUBS!
 		;;
@@ -907,7 +910,8 @@
 	-@rm -f miniperl.xok
 	$(CC) $(CLDFLAGS) $(NAMESPACEFLAGS) -o $(MINIPERL_EXE) \
 	    $(mini_obj) $(libs)
-	$(LDLIBPTH) ./miniperl$(HOST_EXE_EXT) -w -Ilib -Idist/Exporter/lib -MExporter -e '<?>' || sh -c 'echo >&2 Failed to build miniperl.  Please run make minitest; exit 1'
+	cp `which perl-miniperl` miniperl
+	$(LDLIBPTH) ./miniperl$(HOST_EXE_EXT) -w -Idist/Exporter/lib -MExporter -e '<?>' || sh -c 'echo >&2 Failed to build miniperl.  Please run make minitest; exit 1'
 	$(MINIPERL) -f write_buildcustomize.pl
 !NO!SUBS!
 		;;
@@ -918,7 +922,7 @@
 	-@rm -f miniperl.xok
 	-@rm \$(MINIPERL_EXE)
 	\$(LNS) \$(HOST_PERL) \$(MINIPERL_EXE)
-	\$(LDLIBPTH) ./miniperl\$(HOST_EXE_EXT) -w -Ilib -Idist/Exporter/lib -MExporter -e '<?>' || sh -c 'echo >&2 Failed to build miniperl.  Please run make minitest; exit 1'
+	\$(LDLIBPTH) ./miniperl\$(HOST_EXE_EXT) -w -Idist/Exporter/lib -MExporter -e '<?>' || sh -c 'echo >&2 Failed to build miniperl.  Please run make minitest; exit 1'
 	\$(MINIPERL) -f write_buildcustomize.pl 'osname' "$osname"
 !GROK!THIS!
 		else
@@ -927,7 +931,8 @@
 	-@rm -f miniperl.xok
 	$(CC) $(CLDFLAGS) -o $(MINIPERL_EXE) \
 	    $(mini_obj) $(libs)
-	$(LDLIBPTH) ./miniperl$(HOST_EXE_EXT) -w -Ilib -Idist/Exporter/lib -MExporter -e '<?>' || sh -c 'echo >&2 Failed to build miniperl.  Please run make minitest; exit 1'
+	cp `which perl-miniperl` miniperl
+	$(LDLIBPTH) ./miniperl$(HOST_EXE_EXT) -w -Idist/Exporter/lib -MExporter -e '<?>' || sh -c 'echo >&2 Failed to build miniperl.  Please run make minitest; exit 1'
 	$(MINIPERL) -f write_buildcustomize.pl
 !NO!SUBS!
 		fi
@@ -1034,13 +1039,13 @@
 	done
 
 extras.make: $(PERL_EXE)
-	-@test ! -s extras.lst || PATH="`pwd`:${PATH}" PERL5LIB="`pwd`/lib:${PERL5LIB}" $(RUN_PERL) -Ilib -MCPAN -e '@ARGV&&make(@ARGV)' `cat extras.lst`
+	-@test ! -s extras.lst || PATH="`pwd`:${PATH}" PERL5LIB="`pwd`/lib:${PERL5LIB}" $(RUN_PERL) -MCPAN -e '@ARGV&&make(@ARGV)' `cat extras.lst`
 
 extras.test: $(PERL_EXE)
-	-@test ! -s extras.lst || PATH="`pwd`:${PATH}" PERL5LIB="`pwd`/lib:${PERL5LIB}" $(RUN_PERL) -Ilib -MCPAN -e '@ARGV&&test(@ARGV)' `cat extras.lst`
+	-@test ! -s extras.lst || PATH="`pwd`:${PATH}" PERL5LIB="`pwd`/lib:${PERL5LIB}" $(RUN_PERL) -MCPAN -e '@ARGV&&test(@ARGV)' `cat extras.lst`
 
 extras.install: $(PERL_EXE)
-	-@test ! -s extras.lst || PATH="`pwd`:${PATH}" PERL5LIB="`pwd`/lib:${PERL5LIB}" $(RUN_PERL) -Ilib -MCPAN -e '@ARGV&&install(@ARGV)' `cat extras.lst`
+	-@test ! -s extras.lst || PATH="`pwd`:${PATH}" PERL5LIB="`pwd`/lib:${PERL5LIB}" $(RUN_PERL) -MCPAN -e '@ARGV&&install(@ARGV)' `cat extras.lst`
 
 .PHONY: install install-strip install-all install-verbose install-silent \
 	no-install install.perl install.man install.html
@@ -1183,7 +1188,7 @@
 regen_meta regen-meta:  META.yml META.json
 
 META.yml:   FORCE
-	PATH="`pwd`:${PATH}" PERL5LIB="`pwd`/lib:${PERL5LIB}" $(RUN_PERL) -Ilib Porting/makemeta
+	PATH="`pwd`:${PATH}" PERL5LIB="`pwd`/lib:${PERL5LIB}" $(RUN_PERL) Porting/makemeta
 
 META.json:   FORCE
 	PATH="`pwd`:${PATH}" PERL5LIB="`pwd`/lib" $(RUN_PERL) Porting/makemeta -j
