diff --speed-large-files --no-dereference --minimal -Naur perl-5.38.2/installman perl-5.38.2/installman
--- perl-5.38.2/installman	2023-11-28 12:57:28.000000000 +0100
+++ perl-5.38.2/installman	2024-02-03 14:48:50.573168456 +0100
@@ -1,7 +1,7 @@
-#!./perl -w
+#!@GAR_build_bindir@/perl -w
 
 BEGIN {
-    @INC = qw(lib);
+#    @INC = qw(lib);
 
     # This needs to be at BEGIN time, before any use of Config
     # install_lib itself loads and imports Config into main::
diff --speed-large-files --no-dereference --minimal -Naur perl-5.38.2/installperl perl-5.38.2/installperl
--- perl-5.38.2/installperl	2023-11-28 12:57:28.000000000 +0100
+++ perl-5.38.2/installperl	2024-02-03 14:48:50.573168456 +0100
@@ -1,9 +1,9 @@
-#!./perl -w
+#!perl -w
 
 BEGIN {
     chdir '..' if !-d 'lib' and -d '../lib';
-    @INC = 'lib';
-    $ENV{PERL5LIB} = 'lib';
+#    @INC = 'lib';
+#    $ENV{PERL5LIB} = 'lib';
 
     # This needs to be at BEGIN time, before any use of Config
     # install_lib itself loads and imports Config into main::
@@ -742,7 +742,7 @@
 		print " " if (@opts);
 		print "$file\n";
 	    }
-	    system("strip", @opts, $file);
+	    system("@GAR_STRIP@", @opts, $file);
 	} else {
 	    print "# file '$file' skipped\n" if $opts{verbose};
 	}
diff --speed-large-files --no-dereference --minimal -Naur perl-5.38.2/Makefile.SH perl-5.38.2/Makefile.SH
--- perl-5.38.2/Makefile.SH	2024-02-03 14:53:25.399829174 +0100
+++ perl-5.38.2/Makefile.SH	2024-02-03 14:52:23.406497184 +0100
@@ -49,8 +49,8 @@
 	# Prefix all runs of 'miniperl' and 'perl' with
 	# $ldlibpth so that ./perl finds *this* shared libperl.
 	case "$LD_LIBRARY_PATH" in
-	'')  ldlibpth="LD_LIBRARY_PATH=` quote "$pwd" `" ;;
-	*)   ldlibpth="LD_LIBRARY_PATH=` quote "$pwd" `:` quote "$LD_LIBRARY_PATH" `" ;;
+	'')  ldlibpth="LD_LIBRARY_PATH=";;
+	*)   ldlibpth="LD_LIBRARY_PATH=${LD_LIBRARY_PATH}";;
 	esac
 
 	pldlflags="$cccdlflags"
@@ -364,15 +364,15 @@
 define?*)
 	$spitshell >>$Makefile <<!GROK!THIS!
 # Macros to invoke a copy of our fully operational perl during the build.
-PERL_EXE = perl\$(EXE_EXT)
-RUN_PERL = \$(LDLIBPTH) \$(RUN) $perl\$(EXE_EXT)
+PERL_EXE = @GAR_build_bindir@/perl\$(EXE_EXT)
+RUN_PERL = \$(LDLIBPTH) \$(RUN) \$(PERL_EXE)
 !GROK!THIS!
 	;;
 *)
 	$spitshell >>$Makefile <<!GROK!THIS!
 # Macros to invoke a copy of our fully operational perl during the build.
-PERL_EXE = perl\$(EXE_EXT)
-RUN_PERL = \$(LDLIBPTH) \$(RUN) ./perl\$(EXE_EXT) -Ilib -I.
+PERL_EXE = @GAR_build_bindir@/perl\$(EXE_EXT)
+RUN_PERL = \$(LDLIBPTH) \$(RUN) \$(PERL_EXE) -Ilib -I.
 !GROK!THIS!
 	;;
 esac
@@ -411,7 +411,7 @@
 # If you're going to use valgrind and it can't be invoked as plain valgrind
 # then you'll need to change this, or override it on the make command line.
 VALGRIND ?= valgrind
-VG_TEST  ?= ./perl -e 1 2>/dev/null
+VG_TEST  ?= @GAR_build_bindir@/perl -e 1 2>/dev/null
 
 !GROK!THIS!
 	;;
@@ -788,6 +788,7 @@
 $spitshell >>$Makefile <<'!NO!SUBS!'
 generate_uudmap$(HOST_EXE_EXT): generate_uudmap$(OBJ_EXT)
 	$(CC) -o generate_uudmap$(EXE_EXT) $(LDFLAGS) generate_uudmap$(OBJ_EXT) $(libs)
+	cp `which perl-generate_uudmap` generate_uudmap
 
 !NO!SUBS!
 ;;
@@ -1026,7 +1027,8 @@
 	-@rm -f miniperl.xok
 	$(CC) $(CLDFLAGS) -o $(MINIPERL_EXE) \
 	    $(miniperl_objs) $(libs)
-	$(LDLIBPTH) ./miniperl$(HOST_EXE_EXT) -w -Ilib -Idist/Exporter/lib -MExporter -e '<?>' || sh -c 'echo >&2 Failed to build miniperl.  Please run make minitest; exit 1'
+	cp `which perl-miniperl` miniperl
+	$(LDLIBPTH) ./miniperl$(HOST_EXE_EXT) -w -Ilib -Idist/Exporter/lib -MExporter -e '<?>' || sh -c 'echo >&2 Failed to build miniperl.  Please run make minitest; exit 1'
 	$(MINIPERL) -f write_buildcustomize.pl
 !NO!SUBS!
 		fi
@@ -1129,7 +1131,7 @@
 # But also this ensures that all extensions are built before we try to scan
 # them, which picks up Devel::PPPort's documentation.
 pod/perltoc.pod: $(perltoc_pod_prereqs) $(PERL_EXE) $(ext) pod/buildtoc
-	$(RUN_PERL) -f pod/buildtoc -q
+	$(LDLIBPTH) ./miniperl$(HOST_EXE_EXT) -w -Ilib -Idist/FindBin/lib/ -f pod/buildtoc -q
 
 pod/perlapi.pod: pod/perlintern.pod
 
@@ -1153,13 +1155,13 @@
 	done
 
 extras.make: $(PERL_EXE)
-	-@test ! -s extras.lst || PATH="`pwd`:${PATH}" PERL5LIB="`pwd`/lib:${PERL5LIB}" $(RUN_PERL) -Ilib -MCPAN -e '@ARGV&&make(@ARGV)' `cat extras.lst`
+	-@test ! -s extras.lst || PATH="`pwd`:${PATH}" PERL5LIB="`pwd`/lib:${PERL5LIB}" $(RUN_PERL) -MCPAN -e '@ARGV&&make(@ARGV)' `cat extras.lst`
 
 extras.test: $(PERL_EXE)
-	-@test ! -s extras.lst || PATH="`pwd`:${PATH}" PERL5LIB="`pwd`/lib:${PERL5LIB}" $(RUN_PERL) -Ilib -MCPAN -e '@ARGV&&test(@ARGV)' `cat extras.lst`
+	-@test ! -s extras.lst || PATH="`pwd`:${PATH}" PERL5LIB="`pwd`/lib:${PERL5LIB}" $(RUN_PERL) -MCPAN -e '@ARGV&&test(@ARGV)' `cat extras.lst`
 
 extras.install: $(PERL_EXE)
-	-@test ! -s extras.lst || PATH="`pwd`:${PATH}" PERL5LIB="`pwd`/lib:${PERL5LIB}" $(RUN_PERL) -Ilib -MCPAN -e '@ARGV&&install(@ARGV)' `cat extras.lst`
+	-@test ! -s extras.lst || PATH="`pwd`:${PATH}" PERL5LIB="`pwd`/lib:${PERL5LIB}" $(RUN_PERL) -MCPAN -e '@ARGV&&install(@ARGV)' `cat extras.lst`
 
 .PHONY: install install-strip install-all install-verbose install-silent \
 	no-install install.perl install.man install.html
@@ -1186,8 +1188,8 @@
         $spitshell >>$Makefile <<EOT
 
 install_$name install-$name: \$(INSTALL_DEPENDENCE) installperl all installman
-	\$(RUN_PERL) installperl --destdir=\$(DESTDIR) $flags \$(INSTALLFLAGS) \$(STRIPFLAGS)
-	\$(RUN_PERL) installman --destdir=\$(DESTDIR) $flags
+	\$(MINIPERL) installperl --destdir=\$(DESTDIR) $flags \$(INSTALLFLAGS) \$(STRIPFLAGS)
+	\$(MINIPERL) installman --destdir=\$(DESTDIR) $flags
 EOT
     fi
 
@@ -1285,7 +1287,7 @@
 regen_meta regen-meta:  META.yml META.json
 
 META.yml:   FORCE
-	PATH="`pwd`:${PATH}" PERL5LIB="`pwd`/lib:${PERL5LIB}" $(RUN_PERL) -Ilib Porting/makemeta
+	PATH="`pwd`:${PATH}" PERL5LIB="`pwd`/lib:${PERL5LIB}" $(RUN_PERL) Porting/makemeta
 
 META.json:   FORCE
 	PATH="`pwd`:${PATH}" PERL5LIB="`pwd`/lib" $(RUN_PERL) Porting/makemeta -j
