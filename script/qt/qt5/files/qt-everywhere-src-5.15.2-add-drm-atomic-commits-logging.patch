diff -Naur qt-everywhere-src-5.15.2-old/qtbase/src/plugins/platforms/eglfs/deviceintegration/eglfs_kms/qeglfskmsgbmscreen.cpp qt-everywhere-src-5.15.2-new/qtbase/src/plugins/platforms/eglfs/deviceintegration/eglfs_kms/qeglfskmsgbmscreen.cpp
--- qt-everywhere-src-5.15.2-old/qtbase/src/plugins/platforms/eglfs/deviceintegration/eglfs_kms/qeglfskmsgbmscreen.cpp	2020-10-27 09:02:11.000000000 +0100
+++ qt-everywhere-src-5.15.2-new/qtbase/src/plugins/platforms/eglfs/deviceintegration/eglfs_kms/qeglfskmsgbmscreen.cpp	2021-11-28 19:30:25.242825145 +0100
@@ -317,6 +317,20 @@
 #if QT_CONFIG(drm_atomic)
         drmModeAtomicReq *request = device()->threadLocalAtomicRequest();
         if (request) {
+
+            qCDebug(qLcEglfsKmsDebug) << "drmModeAtomicReq" << request
+                                 << "\n    EglfsPlaneId=" << op.eglfs_plane->id
+                                 << "\n    framebufferProperty=" << fb->fb
+                                 << "\n    crtcProperty=" << op.crtc_id
+                                 << "\n    srcwidthProperty=" << op.size.width()
+                                 << "\n    srcXProperty=" << 0
+                                 << "\n    srcYProperty=" << 0
+                                 << "\n    srcheightProperty=" << op.size.height()
+                                 << "\n    crtcXProperty=" << 0
+                                 << "\n    crtcYProperty=" << 0
+                                 << "\n    crtcwidthProperty=" << m_output.modes[m_output.mode].hdisplay
+                                 << "\n    crtcheightProperty=" << m_output.modes[m_output.mode].vdisplay;
+
             drmModeAtomicAddProperty(request, op.eglfs_plane->id, op.eglfs_plane->framebufferPropertyId, fb->fb);
             drmModeAtomicAddProperty(request, op.eglfs_plane->id, op.eglfs_plane->crtcPropertyId, op.crtc_id);
             drmModeAtomicAddProperty(request, op.eglfs_plane->id, op.eglfs_plane->srcwidthPropertyId,
@@ -333,11 +347,19 @@
                                      m_output.modes[m_output.mode].vdisplay);
 
             static int zpos = qEnvironmentVariableIntValue("QT_QPA_EGLFS_KMS_ZPOS");
-            if (zpos)
+            if (zpos) {
+                qCDebug(qLcEglfsKmsDebug) << "drmModeAtomicReq" << request
+                                          << "\n    EglfsPlaneId="  << op.eglfs_plane->id
+                                          << "\n    zposPropertyId=" << zpos;
                 drmModeAtomicAddProperty(request, op.eglfs_plane->id, op.eglfs_plane->zposPropertyId, zpos);
+            }
             static uint blendOp = uint(qEnvironmentVariableIntValue("QT_QPA_EGLFS_KMS_BLEND_OP"));
-            if (blendOp)
+            if (blendOp) {
+                qCDebug(qLcEglfsKmsDebug) << "drmModeAtomicReq" << request
+                                          << "\n    EglfsPlaneId=" << op.eglfs_plane->id
+                                          << "\n    blendOpProperty" << blendOp;
                 drmModeAtomicAddProperty(request, op.eglfs_plane->id, op.eglfs_plane->blendOpPropertyId, blendOp);
+            }
         }
 #endif
     } else {
@@ -364,8 +386,14 @@
 #if QT_CONFIG(drm_atomic)
                 drmModeAtomicReq *request = device()->threadLocalAtomicRequest();
                 if (request) {
+                    qCDebug(qLcEglfsKmsDebug) << "drmModeAtomicReq" << request
+                                              << "\n    EglfsPlaneId=" << d.screen->output().eglfs_plane->id 
+                                              << "\n    framebufferProperty" << fb->fb;
                     drmModeAtomicAddProperty(request, d.screen->output().eglfs_plane->id,
                                                       d.screen->output().eglfs_plane->framebufferPropertyId, fb->fb);
+                    qCDebug(qLcEglfsKmsDebug) << "drmModeAtomicReq" << request
+                                              << "\n    property: EglfsPlaneId="  << d.screen->output().eglfs_plane->id 
+                                              << "\n    crtcProperty" << op.crtc_id;
                     drmModeAtomicAddProperty(request, d.screen->output().eglfs_plane->id,
                                                       d.screen->output().eglfs_plane->crtcPropertyId, op.crtc_id);
                 }
