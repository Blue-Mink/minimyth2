#!/bin/sh
################################################################################
# rc
################################################################################

# Timeout for exectuing init script list. When reached - timeouting script
# name is stored in /var/log as '<script>.inprogress' and init moves to next
# init list
list_exec_timeout=20

# Delay after last seguntial init list end and start of parallel
# init list5
parallel_list5_start_delay=25

# set to 'yes' if you want to have started tty in background (i.e. to
# inspect boot/init errors..."
always_start_tty="no"





. /etc/rc.d/functions

script_list_start="\
    ld \
    loopback \
    log \
    modules_automatic \
    modules_manual_early \
    dbus \
    wlan \
    dhcp \
    conf_phase_1..4 \
    modules_manual_late \
    security \
    mythdb_buffer_create"
script_list_kill_halt="\
    shutdown \
    halt"
script_list_kill_reboot="\
    shutdown \
    reboot"

rc_script_list_run() {

    # Mode:
    # 0 - sequential bootup
    # 1 - sequential init scripts start
    # 2 - parallel   init scripts start
    # 3 - sequential init scripts stop
    local phase=$1
    local action=$2
    local script_list=$3

    local boot_count
    local shutdown_count
    local script

    rm -rf /var/init/*.inprogress

    shutdown_count=`/bin/echo ${script_list} | /usr/bin/wc -w`
    boot_count=${shutdown_count}

    if   [ ${phase} -eq 0 ] ; then

        mm_splash_progress_set 0  $(( ${boot_count} + ${boot_count} ))

    elif [ ${phase} -eq 1 ] ; then

        mm_splash_progress_set ${boot_count} $(( ${boot_count} + ${boot_count} ))

    elif [ ${phase} -eq 3 ] ; then

        mm_splash_progress_set 0 ${shutdown_count}

    fi

    if [ x${always_start_tty} = "xyes" ] ; then
        if /usr/bin/test -z "`/bin/pidof agetty`" ; then
            /sbin/agetty 9600 tty1 &
        fi
    fi

    for script in ${script_list} ; do

        filename="$(basename "$(test -L "${script}" && readlink "${script}" || echo "${script}")")" #"

        /bin/touch /var/init/${filename}.inprogress

        /usr/bin/logger -t minimyth -p "local0.info" "[init.d/${filename}] Starting..."

        if [ ${phase} -eq 2 ] ; then

            mm_command_run "${script} ${action}" &

        else

            mm_command_run "${script} ${action}"

        fi

        mm_splash_progress_update

    done

    # Awaiting till this pahse all init scripts will be executed
    i=0
    while [ $i -lt ${list_exec_timeout} ] ; do

        in_progress=`/bin/ls -1 /var/init/*.inprogress 2>/dev/null`

        i=$((${i} + 1))

        if [  "x${in_progress}" = "x" ] ; then

            i=${list_exec_timeout}

            /bin/true
            return

        else

            if [ $i -eq ${list_exec_timeout} ] ; then

                failed=`/bin/ls -1 /var/init/*.inprogress 2>/dev/null`
                /usr/bin/logger -t minimyth -p "local0.err" "[init.d/rc_script_list_run] timeout executing init list caused by ${failed} !"
                mv /var/init/*.inprogress /var/log/

                /bin/false
                return

            else

                /bin/sleep 1
            fi
        fi

    done

}

if [ `/usr/bin/id -u` -eq 0 ] ; then

    if /usr/bin/test -z "${USER}" ; then

        USER=`/bin/cat /etc/passwd | /bin/grep -e '^[^:]*:[^:]*:0:' | /usr/bin/cut -d ':' -f 1`
        export USER

    fi

    if /usr/bin/test -z "${HOME}" || /usr/bin/test "${HOME}" = "/" ; then

        HOME=`/bin/cat /etc/passwd | /bin/grep -e '^[^:]*:[^:]*:0:' | /usr/bin/cut -d ':' -f 6`
        export HOME

    fi
fi

case $1 in

    1|2|3|4|5)

        touch /var/log/init-script-durations.log
        # Start bootup scripts sequentially

        mm_splash_init 'bootup'

        script_list="`scripts=${script_list_start}; \
                      for script in ${scripts} ; do /bin/echo /etc/rc.d/init.d/${script} ; done`"

        /usr/bin/logger -t minimyth -p "local0.info" "[init.d/rc] Sequential launch init scripts: Bootup list ..."

        rc_script_list_run 0 "start" "${script_list}"

        /bin/mkdir -p /var/init

        /usr/bin/logger -t minimyth -p "local0.info" "[init.d/rc] Parallel launch init scripts: List1 ..."

        script_list=`/bin/ls -1 /etc/rc.d/rc.d/I1_* 2>/dev/null`
        rc_script_list_run 2 "start" "${script_list}"

        /usr/bin/logger -t minimyth -p "local0.info" "[init.d/rc] Parallel launch init scripts. List2 ..."

        script_list=`/bin/ls -1 /etc/rc.d/rc.d/I2_* 2>/dev/null`
        rc_script_list_run 2 "start" "${script_list}"

        /usr/bin/logger -t minimyth -p "local0.info" "[init.d/rc] Parallel launch init scripts. List3 ..."

        script_list=`/bin/ls -1 /etc/rc.d/rc.d/I3_* 2>/dev/null`
        rc_script_list_run 2 "start" "${script_list}"

        /usr/bin/logger -t minimyth -p "local0.info" "[init.d/rc] Parallel launch init scripts. List4 ..."

        script_list=`/bin/ls -1 /etc/rc.d/rc.d/I4_* 2>/dev/null`
        rc_script_list_run 2 "start" "${script_list}"

        mm_splash_halt

        /bin/sleep ${parallel_list5_start_delay}

        # Start init scripts allowable to run parallel
        /usr/bin/logger -t minimyth -p "local0.info" "[init.d/rc] Parallel launch init scripts. List5 ..."

        script_list=`/bin/ls -1 /etc/rc.d/rc.d/I5_* 2>/dev/null`
        rc_script_list_run 2 "start" "${script_list}"

        /usr/bin/logger -t minimyth -p "local0.info" "[init.d/rc] All init scripts launched ..."
        ;;

    0)
        # Stop all scripts allowable to stop parallel
        mm_splash_init 'shutdown'

        script_list=" `/bin/ls -1 /etc/rc.d/rc.d/K*` \
                      `scripts=${script_list_kill_halt} ; \
                       for script in ${scripts} ; do /bin/echo /etc/rc.d/init.d/${script} ; done`"
        rc_script_list_run 3 "stop" "${script_list}"

        mm_splash_halt
        ;;

    6)
        # Stop all scripts allowable to stop parallel
        mm_splash_init 'reboot'

        script_list="`/bin/ls -1 /etc/rc.d/rc.d/K*` \
                     `scripts=${script_list_kill_reboot} ; \
                      for script in ${scripts} ; do /bin/echo /etc/rc.d/init.d/${script} ; done`"
        rc_script_list_run 3 "stop" "${script_list}"

        mm_splash_halt
        ;;
esac

exit 0
