################################################################################
# MM_LIRC configuration variables and files.
################################################################################
. /lib/minimyth/mm_detect

conf_write_S_LIRC() {
    local conf_file=$1
    local device
    local device_item
    local device_list

    /usr/bin/logger -s -t minimyth -p "local0.info" "[init.d/S_LIRC] Starting..."

    if [ -z "${MM_LIRC_SLEEP_ENABLED}" ] ; then
        MM_LIRC_SLEEP_ENABLED='yes'
    fi
    if [ -z "${MM_LIRC_WAKEUP_ENABLED}" ] ; then
        MM_LIRC_WAKEUP_ENABLED='yes'
    fi
    if [ -z "${MM_LIRC_USE_DEVINPUT}" ] ; then
        MM_LIRC_USE_DEVINPUT='yes'
    fi

    if [ -z "${MM_EXTERNAL_VOLUME_DOWN}" ] && \
       [ -z "${MM_EXTERNAL_VOLUME_UP}"   ] && \
       [ -z "${MM_EXTERNAL_VOLUME_MUTE}" ] ; then
        MM_EXTERNAL_VOLUME_ENABLED='no'
    else
        MM_EXTERNAL_VOLUME_ENABLED='yes'
        MM_LIRC_USE_DEVINPUT='no'
        MM_LIRC_IREXEC_ENABLED='yes'
    fi
    if [ -z "${MM_EXTERNAL_AMPLI_POWER_ON}"  ] && \
       [ -z "${MM_EXTERNAL_AMPLI_POWER_OFF}" ] ; then
        MM_EXTERNAL_AMPLI_POWER_ENABLED='no'
    else
        MM_EXTERNAL_AMPLI_POWER_ENABLED='yes'
        MM_LIRC_USE_DEVINPUT='no'
        MM_LIRC_IREXEC_ENABLED='yes'
    fi
    if [ -z "${MM_EXTERNAL_TV_POWER_ON}"  ] && \
       [ -z "${MM_EXTERNAL_TV_POWER_OFF}" ] ; then
        MM_EXTERNAL_TV_POWER_ENABLED='no'
    else
        MM_EXTERNAL_TV_POWER_ENABLED='yes'
        MM_LIRC_USE_DEVINPUT='no'
        MM_LIRC_IREXEC_ENABLED='yes'
    fi

    /usr/bin/logger -s -t minimyth -p "local0.info" "[init.d/S_LIRC] Detecting LIRC devices..."

    MM_LIRC_DEVICE_LIST="${MM_LIRC_DEVICE_LIST} `mm_detect_state_get 'lirc' | mm_uniq`"

    /usr/bin/logger -s -t minimyth -p "local0.info" "[init.d/S_LIRC] Writing variables..."

    conf_variable_write "${conf_file}" MM_LIRC_IREXEC_ENABLED           "${MM_LIRC_IREXEC_ENABLED}"
    conf_variable_write "${conf_file}" MM_LIRC_IRXEVENT_ENABLED         "${MM_LIRC_IRXEVENT_ENABLED}"
    conf_variable_write "${conf_file}" MM_LIRC_SLEEP_ENABLED            "${MM_LIRC_SLEEP_ENABLED}"
    conf_variable_write "${conf_file}" MM_LIRC_WAKEUP_ENABLED           "${MM_LIRC_WAKEUP_ENABLED}"
    conf_variable_write "${conf_file}" MM_LIRC_FETCH_OPTIONS_CONF       "${MM_LIRC_FETCH_OPTIONS_CONF}"
    conf_variable_write "${conf_file}" MM_LIRC_FETCH_LIRCD_CONF         "${MM_LIRC_FETCH_LIRCD_CONF}"
    conf_variable_write "${conf_file}" MM_LIRC_FETCH_IRBLASTER_CONF     "${MM_LIRC_FETCH_IRBLASTER_CONF}"
    conf_variable_write "${conf_file}" MM_LIRC_FETCH_LIRCRC             "${MM_LIRC_FETCH_LIRCRC}"
    conf_variable_write "${conf_file}" MM_LIRC_FETCH_EVMAP_CONF         "${MM_LIRC_FETCH_EVMAP_CONF}"
    conf_variable_write "${conf_file}" MM_LIRC_DEVICE_LIST              "${MM_LIRC_DEVICE_LIST}"
    conf_variable_write "${conf_file}" MM_LIRC_USE_DEVINPUT             "${MM_LIRC_USE_DEVINPUT}"
    conf_variable_write "${conf_file}" MM_NETFLIX_ENABLED               "${MM_NETFLIX_ENABLED}"

    conf_variable_write "${conf_file}" MM_EXTERNAL_AMPLI_POWER_OFF      "${MM_EXTERNAL_AMPLI_POWER_OFF}"
    conf_variable_write "${conf_file}" MM_EXTERNAL_AMPLI_POWER_ON       "${MM_EXTERNAL_AMPLI_POWER_ON}"
    conf_variable_write "${conf_file}" MM_EXTERNAL_AMPLI_POWER_ENABLED  "${MM_EXTERNAL_AMPLI_POWER_ENABLED}"
    conf_variable_write "${conf_file}" MM_EXTERNAL_VOLUME_DOWN          "${MM_EXTERNAL_VOLUME_DOWN}"
    conf_variable_write "${conf_file}" MM_EXTERNAL_VOLUME_UP            "${MM_EXTERNAL_VOLUME_UP}"
    conf_variable_write "${conf_file}" MM_EXTERNAL_VOLUME_MUTE          "${MM_EXTERNAL_VOLUME_MUTE}"
    conf_variable_write "${conf_file}" MM_EXTERNAL_VOLUME_ENABLED       "${MM_EXTERNAL_VOLUME_ENABLED}"
    conf_variable_write "${conf_file}" MM_EXTERNAL_TV_POWER_OFF         "${MM_EXTERNAL_TV_POWER_OFF}"
    conf_variable_write "${conf_file}" MM_EXTERNAL_TV_POWER_ON          "${MM_EXTERNAL_TV_POWER_ON}"
    conf_variable_write "${conf_file}" MM_EXTERNAL_TV_POWER_ENABLED     "${MM_EXTERNAL_TV_POWER_ENABLED}"
    conf_variable_write "${conf_file}" MM_EXTERNAL_POWER_ON_MM_BOOT     "${MM_EXTERNAL_POWER_ON_MM_BOOT}"

    /usr/bin/logger -s -t minimyth -p "local0.info" "[init.d/S_LIRC] Getting LIRC config files..."

    if [ "x${MM_LIRC_FETCH_OPTIONS_CONF}" = "xyes" ] ; then

        /bin/rm -f /etc/lirc/lirc_options.conf

        mm_confro_get /lirc_options.conf /etc/lirc/lirc_options.conf

        if [ ! -e /etc/lirc/lirc_options.conf ] ; then
            mm_message_output err "error: failed to fetch 'lirc_options.conf' file."
        fi

    fi

    if [ "x${MM_LIRC_FETCH_LIRCD_CONF}" = "xyes" ] ; then

        /bin/rm -f /etc/lirc/lircd.conf

        mm_confro_get /lircd.conf /etc/lirc/lircd.conf

        if [ ! -e /etc/lirc/lircd.conf ] ; then
            mm_message_output err "error: failed to fetch 'lircd.conf' file."
        fi

    fi

    if [ "x${MM_LIRC_FETCH_LIRCRC}" = "xyes" ] ; then

        /bin/rm -f /etc/lirc/lircrc

        mm_confro_get /lircrc /etc/lirc/lircrc

        if [ ! -e /etc/lirc/lircrc ] ; then
            mm_message_output err "error: failed to fetch 'lircrc' file."
        fi

    fi

    if [ "x${MM_LIRC_FETCH_IRBLASTER_CONF}" = "xyes" ] ; then

        /bin/rm -f /etc/lirc/irblaster.conf.d/lircd.conf.user.equipment

        mm_confro_get /lircd-irblaster.conf /etc/lirc/irblaster.conf.d/lircd.conf.user.equipment

        if [ ! -e /etc/lirc/irblaster.conf.d/lircd.conf.user.equipment ] ; then
            mm_message_output err "error: failed to fetch 'lircd-irblaster.conf' file."
        fi

    fi

    if [ "x${MM_LIRC_FETCH_EVMAP_CONF}" = "xyes" ] ; then

        /bin/rm -f /etc/eventlircd.d/${MM_LIRC_FETCH_EVMAP_CONF}

        mm_confro_get /${MM_LIRC_FETCH_EVMAP_CONF} /etc/eventlircd.d/${MM_LIRC_FETCH_EVMAP_CONF}

        if [ ! -e /etc/eventlircd.d/${MM_LIRC_FETCH_EVMAP_CONF} ] ; then
            mm_message_output err "error: failed to fetch ${MM_LIRC_FETCH_EVMAP_CONF} file."
        fi

    fi

    # If there is no lircd.conf file, then create it.
    if [ ! -e /etc/lirc/lircd.conf ] ; then

        /usr/bin/logger -s -t minimyth -p "local0.info" "[init.d/S_LIRC] Will autogenerate lircd.conf..."

        if [ "x${MM_LIRC_USE_DEVINPUT}" = "xyes" ] ; then

            /bin/cp -f /etc/lirc/lircd.conf.d/lircd.devinput /etc/lirc/lircd.conf

        else

            /bin/echo "# autogenerated" >> /etc/lirc/lircd.conf
            /usr/bin/logger -s -t minimyth -p "local0.info" "[init.d/S_LIRC] lircd.conf: adding lircd.conf.d/*.conf files..."
            /bin/echo "include \"lircd.conf.d/lircd.conf*\"" >> /etc/lirc/lircd.conf

            if [ "x${MM_EXTERNAL_AMPLI_POWER_ENABLED}" = "xyes" ] || \
               [ "x${MM_EXTERNAL_VOLUME_ENABLED}"      = "xyes" ] || \
               [ "x${MM_EXTERNAL_TV_POWER_ENABLED}"    = "xyes" ] ; then
                /usr/bin/logger -s -t minimyth -p "local0.info" "[init.d/S_LIRC] lircd.conf: adding irblaster.conf.d/*.conf files..."
                /bin/echo "include \"irblaster.conf.d/lircd.conf*\"" >> /etc/lirc/lircd.conf
            fi
        fi
    fi

    # If there is no lircrc file, then create it.
    if [ ! -e /etc/lirc/lircrc ] ; then

        /usr/bin/logger -s -t minimyth -p "local0.info" "[init.d/S_LIRC] Will use build-in lircrc..."

        /bin/echo "# autogenerated" >> /etc/lirc/lircrc
        /bin/echo "include /etc/lirc/lircrc.d/lircrc.mythtv" >> /etc/lirc/lircrc
        /bin/echo "include /etc/lirc/lircrc.d/lircrc.minimyth" >> /etc/lirc/lircrc

        if [ "x${MM_LIRC_SLEEP_ENABLED}" = "xyes" ] ; then

            /usr/bin/logger -s -t minimyth -p "local0.info" "[init.d/S_LIRC] Including in lircrc KEY_POWER as sleep button..."
            /bin/echo "include /etc/lirc/lircrc.d/lircrc.power.sleep" >> /etc/lirc/lircrc

        fi

        if [ "x${MM_EXTERNAL_VOLUME_ENABLED}" = "xyes" ] ; then

            /usr/bin/logger -s -t minimyth -p "local0.info" "[init.d/S_LIRC] Defining in lircrc KEY_VOLUMEUP[DOWN] for irblaster..."
            /bin/echo "include /etc/lirc/lircrc.d/lircrc.volume.external" >> /etc/lirc/lircrc

        else

            /usr/bin/logger -s -t minimyth -p "local0.info" "[init.d/S_LIRC] Defining in lircrc KEY_VOLUMEUP[DOWN] for internal vol.ctrl..."
            /bin/echo "include /etc/lirc/lircrc.d/lircrc.volume.internal" >> /etc/lirc/lircrc

        fi

        if [ "x${MM_VOIP_ENABLED}" = "xyes" ] ; then

            /usr/bin/logger -s -t minimyth -p "local0.info" "[init.d/S_LIRC] Including in lircrc KEY_1/2/3/4 for SIP Phone functions..."
            /bin/echo "include /etc/lirc/lircrc.d/lircrc.phone" >> /etc/lirc/lircrc

        fi

        if [ "x${MM_PLUGIN_GAME_ENABLED}" = "xyes" ] ; then

            if [ "x${MM_LIRC_IRXEVENT_ENABLED}" = "xauto" ]  || \
               [ "x${MM_LIRC_IRXEVENT_ENABLED}" = "xyes"  ] ; then

                /usr/bin/logger -s -t minimyth -p "local0.info" "[init.d/S_LIRC] Including in lircrc game emulators keys..."
                /bin/echo "include /etc/lirc/lircrc.d/lircrc.game.emulator.fceu" >> /etc/lirc/lircrc
                /bin/echo "include /etc/lirc/lircrc.d/lircrc.game.emulator.jzintv" >> /etc/lirc/lircrc
                /bin/echo "include /etc/lirc/lircrc.d/lircrc.game.emulator.mame" >> /etc/lirc/lircrc
                /bin/echo "include /etc/lirc/lircrc.d/lircrc.game.emulator.mednafen" >> /etc/lirc/lircrc
                /bin/echo "include /etc/lirc/lircrc.d/lircrc.game.emulator.stella" >> /etc/lirc/lircrc

            fi

        fi

        if [ "x${MM_NETFLIX_ENABLED}" = "xyes" ] ; then

            /usr/bin/logger -s -t minimyth -p "local0.info" "[init.d/S_LIRC] Including in lircrc Google/FireFox keys..."
            /bin/echo "include /etc/lirc/lircrc.d/lircrc.google-chrome" >> /etc/lirc/lircrc
            /bin/echo "include /etc/lirc/lircrc.d/lircrc.mozilla-firefox" >> /etc/lirc/lircrc

        fi

        for file in `/bin/ls /etc/lirc/lircrc.d/lircrc.remote.* 2> /dev/null` ; do

            /usr/bin/logger -s -t minimyth -p "local0.info" "[init.d/S_LIRC] lircrc: adding ${file}"
            /bin/echo "include ${file}" >> /etc/lirc/lircrc

        done
    fi

    if [ ! "x${MM_LIRC_USE_DEVINPUT}" = "xyes" ] ; then

        /bin/sed -i -e 's%=\"devinput\"%=\"default\"%' /usr/lib/udev/rules.d/06-minimyth-hotplug-01-lircd.rules.disabled

    fi

    if [ "x${MM_LIRC_WAKEUP_ENABLED}" = "xyes" ] ; then

        /bin/sed -i -e 's%@MM_LIRC_WAKEUP_TRUE@%%' /usr/lib/udev/rules.d/06-minimyth-hotplug-01-lircd.rules.disabled
        /bin/sed -i -e 's%@MM_LIRC_WAKEUP_TRUE@%%' /usr/lib/udev/rules.d/06-minimyth-hotplug-02-eventlircd.rules.disabled

    else

        /bin/sed -i -e 's%@MM_LIRC_WAKEUP_TRUE@%# %' /usr/lib/udev/rules.d/06-minimyth-hotplug-01-lircd.rules.disabled
        /bin/sed -i -e 's%@MM_LIRC_WAKEUP_TRUE@%# %' /usr/lib/udev/rules.d/06-minimyth-hotplug-02-eventlircd.rules.disabled

    fi

    /usr/bin/logger -s -t minimyth -p "local0.info" "[init.d/S_LIRC] Started with return code=0..."

    return 0
}
