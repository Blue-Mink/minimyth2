################################################################################
# MM_MINIMYTH configuration variables and files.
################################################################################
conf_write_S_MINIMYTH() {
    local conf_file=$1

    if [ -z "${MM_AVAHI_ENABLED}" ] ; then
        MM_AVAHI_ENABLED='yes'
    fi
    if [ -z "${MM_RESTART_NTP_ON_SLEEP}" ] ; then
        MM_RESTART_NTP_ON_SLEEP='yes'
    fi
    if [ -z "${MM_MINIMYTH_ONLINE_UPDATES_URL}" ] ; then
        MM_MINIMYTH_ONLINE_UPDATES_URL='warped.inet2.org::mm2-updates/@ARCH@/@BRANCH@'
    fi

    conf_variable_write "${conf_file}" MM_MINIMYTH_BOOT_URL              "${MM_MINIMYTH_BOOT_URL}"
    conf_variable_write "${conf_file}" MM_MINIMYTH_TFTP_SERVER           "${MM_MINIMYTH_TFTP_SERVER}"
    conf_variable_write "${conf_file}" MM_MINIMYTH_DHCP_SERVER           "${MM_MINIMYTH_DHCP_SERVER}"
    conf_variable_write "${conf_file}" MM_MINIMYTH_FETCH_MINIMYTH_SCRIPT "${MM_MINIMYTH_FETCH_MINIMYTH_SCRIPT}"
    conf_variable_write "${conf_file}" MM_MINIMYTH_ONLINE_UPDATES_URL    "${MM_MINIMYTH_ONLINE_UPDATES_URL}"
    conf_variable_write "${conf_file}" MM_AVAHI_ENABLED                  "${MM_AVAHI_ENABLED}"
    conf_variable_write "${conf_file}" MM_FETCH_SSH_CLIENT_RSA_KEY       "${MM_FETCH_SSH_CLIENT_RSA_KEY}"
    conf_variable_write "${conf_file}" MM_FETCH_UI_LOCALIZATIONS         "${MM_FETCH_UI_LOCALIZATIONS}"
    conf_variable_write "${conf_file}" MM_NOTIFY_ABOUT_UPDATES           "${MM_NOTIFY_ABOUT_UPDATES}"
    conf_variable_write "${conf_file}" MM_RESTART_NTP_ON_SLEEP           "${MM_RESTART_NTP_ON_SLEEP}"

    if [ "x${MM_AVAHI_ENABLED}" = "xyes" ] ; then
        HOST_NAME=`/bin/hostname`
        /bin/sed -i "s%@HOST_NAME@%${HOST_NAME}%"                        /etc/avahi/avahi-daemon.conf
    fi

    # 'minimyth.script' is special and is fetched by '/etc/rc.d/init.d/conf'.
    # rather than by this function.

    if [ "x${MM_FETCH_SSH_CLIENT_RSA_KEY}" = "xyes" ] ; then
        /bin/rm -rf /root/.ssh/*
        mm_confro_get id_rsa /root/.ssh/id_rsa
        if [ ! -e /root/.ssh/id_rsa ] ; then
            mm_message_output err "error: failed to fetch 'id_rsa' file."
        fi
        /bin/chmod 0600 /root/.ssh/id_rsa
    fi

    /bin/touch /root/.ssh/known_hosts
    /bin/chown root:root /root/.ssh/known_hosts
    /bin/chmod 0600 /root/.ssh/known_hosts

    if [ "x${MM_FETCH_UI_LOCALIZATIONS}" = "xyes" ] ; then
        /bin/rm -rf /etc/mm_ui_localizations
        mm_confro_get mm_ui_localizations /etc/mm_ui_localizations
        if [ ! -e /etc/mm_ui_localizations ] ; then
            mm_message_output err "error: failed to fetch 'mm_ui_localizations' file."
        fi

        string_list=`/bin/cat /etc/mm_ui_localizations | /bin/sed -e '/^#/ d' -e '/^$/ d' | /bin/sed -e 's/ /+/g' | /bin/sed -e 's/\t//g'`
        for string in ${string_list} ; do
            str=`/bin/echo ${string} | /bin/sed -e 's/^\(.*\)=.*/\1/' | /bin/sed -e 's/+//g'`
            val=`/bin/echo ${string} | /bin/sed -e 's/^.*=+*\(.*\)/\1/'`
            /bin/sed -e "s/${str}=.*/${str}=${val}/g" -i /etc/mm_ui_localizations_sh
            /bin/sed -e "s/^our \$${str}\s*=.*/our \$${str}=${val}/g" -i /etc/mm_ui_localizations_perl
        done
        /bin/sed -e "s/+/ /g" -i /etc/mm_ui_localizations_sh
        /bin/sed -e "s/+/ /g" -i /etc/mm_ui_localizations_perl
    fi

    return 0
}
