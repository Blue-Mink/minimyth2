################################################################################
# MM_THEME configuration variables and files.
################################################################################
conf_clean_MM_THEME() {
    /bin/rm -rf /tmp/init.conf.theme

    return 0
}

conf_check_MM_THEME() {
    local RESOLUTION_X
    local RESOLUTION_Y
    local THEMECACHE_NAME

    # Check for obsolete values.
    if /usr/bin/test "${MM_THEMECACHE_URL}" = "default" ; then
        mm_message_output err "error: 'minimyth.conf' is out of date. MM_THEMECACHE_URL='default' is obsolete."
    fi

    if /usr/bin/test ! -z "${MM_THEME_URL}"          && \
       /usr/bin/test !    "${MM_THEME_URL}" = "none" && \
       /usr/bin/test !    "${MM_THEME_URL}" = "auto" ; then
        if /usr/bin/test -e "/usr/share/mythtv/themes/${MM_THEME_NAME}" ; then
            mm_message_output err "error: MythTV theme directory '${MM_THEME_NAME}' already exists."
        fi
    fi

    if /usr/bin/test ! -z "${MM_THEMEMENU_URL}"          && \
       /usr/bin/test !    "${MM_THEMEMENU_URL}" = "none" && \
       /usr/bin/test !    "${MM_THEMEMENU_URL}" = "auto" ; then
        if /usr/bin/test -e "/usr/share/mythtv/themes/${MM_THEMEMENU_NAME}" ; then
            mm_message_output err "error: MythTV theme directory '${MM_THEMEMENU_NAME}' already exists."
        fi
    fi

    if /usr/bin/test "${MM_THEME_URL}" = "none" ; then
        if /usr/bin/test ! -e "/usr/share/mythtv/themes/${MM_THEME_NAME}" ; then
            mm_message_output err "error: MythTV theme directory '${MM_THEME_NAME}' does not exist."
        fi
    fi
    if /usr/bin/test "${MM_THEMEMENU_URL}" = "none" ; then
        if /usr/bin/test ! -e "/usr/share/mythtv/themes/${MM_THEMEMENU_NAME}" ; then
            mm_message_output err "error: MythTV theme directory '${MM_THEMEMENU_NAME}' does not exist."
        fi
    fi

    return 0
}

conf_default_MM_THEME() {
    # The routine relies on MM_VERSION_* variables.
    conf_default_MM_VERSION

    # The routine relies on MM_X_* variables.
    conf_default_MM_X

    if /usr/bin/test -z "${MM_THEME_NAME}" ; then
        MM_THEME_NAME='Default'
    fi
    if /usr/bin/test -z "${MM_THEME_URL}" ; then
        MM_THEME_URL='auto'
    fi
    if /usr/bin/test -z "${MM_THEMEMENU_URL}" ; then
        MM_THEMEMENU_URL='auto'
    fi
    if /usr/bin/test -z "${MM_THEMECACHE_URL}" ; then
        MM_THEMECACHE_URL='auto'
    fi

    if /usr/bin/test "${MM_THEME_URL}" = "auto" ; then
        if /usr/bin/test ! -e "/usr/share/mythtv/themes/${MM_THEME_NAME}" ; then
            MM_THEME_URL="hunt:themes/${MM_THEME_NAME}.sfs"
        else
            MM_THEME_URL="none"
        fi
    fi
    if /usr/bin/test "${MM_THEMEMENU_URL}" = "auto" ; then
        if /usr/bin/test ! -e "/usr/share/mythtv/themes/${MM_THEMEMENU_NAME}" ; then
            MM_THEMEMENU_URL="hunt:themes/${MM_THEMEMENU_NAME}.sfs"
        else
            MM_THEMEMENU_URL="none"
        fi
    fi
    if /usr/bin/test "${MM_THEMECACHE_URL}" = "auto" ; then
        if /usr/bin/test ! -e "/home/minimyth/.mythtv/cache/themecache/*" ; then
            MM_THEMECACHE_URL="confrw:themecache.sfs"
        else
            MM_THEMECACHE_URL="none"
        fi
    fi

    # Convert 'none' to empty.
    if /usr/bin/test "${MM_THEME_URL}" = "none" ; then
        MM_THEME_URL=
    fi
    if /usr/bin/test "${MM_THEMEMENU_URL}" = "none" ; then
        MM_THEMEMENU_URL=
    fi
    if /usr/bin/test "${MM_THEMECACHE_URL}" = "none" ; then
        MM_THEMECACHE_URL=
    fi
    if /usr/bin/test -z "${MM_THEME_NAME}" ; then
        mm_message_output err "error: 'MM_THEME_NAME' is not set."
    fi

    return 0
}

conf_write_MM_THEME() {
    local conf_file=$1

    conf_variable_write "${conf_file}" MM_THEME_NAME            "${MM_THEME_NAME}"
    conf_variable_write "${conf_file}" MM_THEMEMENU_NAME        "${MM_THEMEMENU_NAME}"
    conf_variable_write "${conf_file}" MM_THEME_URL             "${MM_THEME_URL}"
    conf_variable_write "${conf_file}" MM_THEMEMENU_URL         "${MM_THEMEMENU_URL}"
    conf_variable_write "${conf_file}" MM_THEMECACHE_URL        "${MM_THEMECACHE_URL}"

    return 0
}

conf_fetch_MM_THEME() {
    return 0
}
