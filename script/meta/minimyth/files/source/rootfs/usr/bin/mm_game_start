#!/bin/sh

[ -e /etc/conf ] && . /etc/conf

game_console="${1}"
game_file="${2}"

/usr/bin/mm_ss_suspend "`/usr/bin/basename ${0}`" > /dev/null 2>&1 &

usage()
{
    /bin/echo ""
    /bin/echo "usage:"
    /bin/echo "  mm_mythgame_start <game_console> <game_file>"
    /bin/echo ""
    /bin/echo "where:"
    /bin/echo "  <game_console>:"
    /bin/echo "    The game console."
    /bin/echo "    Valid game consoles are:"
    /bin/echo "      a2600: Atari 2600"
    /bin/echo "      cgb  : Color Game Boy"
    /bin/echo "      gb   : Game Boy"
    /bin/echo "      gba  : Game Boy Advance"
    /bin/echo "      intv : Intellivision"
    /bin/echo "      nes  : Nintendo Entertainment System"
    /bin/echo "      snes : Super Nintendo Entertainment System"
    /bin/echo "  <game_file>:"
    /bin/echo "    The game file."
    /bin/echo ""
}

if [ ! -n "${game_console}" ] ; then
    /bin/echo ""
    /bin/echo "error: game console missing."
    /bin/echo ""
    usage
    exit 1
fi
if [ -n "${game_file}" ] ; then
    /bin/echo ""
    /bin/echo "error: game file missing."
    /bin/echo ""
    usage
    exit 1
fi
if [ ! -e "${game_file}" ] ; then
    /bin/echo ""
    /bin/echo "error: game file ${game_file} does not exist."
    /bin/echo ""
    usage
    exit 1
fi
if [ ! -f "${game_file}" ] ; then
    /bin/echo ""
    /bin/echo "error: game file ${game_file} is not a file."
    /bin/echo ""
    usage
    exit 1
fi
if [ ! -r "${game_file}" ] ; then
    /bin/echo ""
    /bin/echo "error: game file ${game_file} cannot be read."
    /bin/echo ""
    usage
    exit 1
fi

case ${game_console} in
    a2600)
        if [ -e /usr/local/bin/stella ] ; then
            args=
            args="${args} -video gl"
            args="${args} -gl_fsmax 1"
            args="${args} -fullscreen 1"
            args="${args} -scale_tia zoom1x"
            args="${args} -scale_ui zoom1x"
            args="${args} -center 1"
            args="${args} -sound 1"
            args="${args} -channels 2"
            args="${args} -freq 48000"
            args="${args} -volume 100"
            args="${args} -clipvol 1"
            args="${args} -accurate 1"
            /usr/local/bin/stella ${args} "${game_file}"
            if [ "x${MM_GAME_SAVE_ENABLED}" = "xyes" ] ; then
                /usr/bin/mm_run_in_terminal_window /usr/bin/mm_command game_save
            fi
        else
            /bin/echo ""
            /bin/echo "error: console name ${game_console} has no valid emulator."
            /bin/echo ""
            exit 1
        fi
        ;;
    cgb)
        if [ -e /usr/local/bin/VisualBoyAdvance ] ; then
            args=
            args="${args} --fullscreen"
            args="${args} --no-debug"
            /usr/local/bin/VisualBoyAdvance ${args} "${game_file}"
            if [ "x${MM_GAME_SAVE_ENABLED}" = "xyes" ] ; then
                /usr/bin/mm_run_in_terminal_window /usr/bin/mm_command game_save
            fi
        elif [ -e /usr/local/bin/mednafen ] ; then
            resolution_x=`/bin/echo ${MM_X_RESOLUTION} | /bin/sed -e 's%\([0-9][0-9]*\)x\([0-9][0-9]*\)%\1%'`
            resolution_y=`/bin/echo ${MM_X_RESOLUTION} | /bin/sed -e 's%\([0-9][0-9]*\)x\([0-9][0-9]*\)%\2%'`
            args=
            args="${args} -fs 1"
            args="${args} -gb.stretch 1"
            args="${args} -gb.xres ${resolution_x}"
            args="${args} -gb.yres ${resolution_y}"
            /usr/local/bin/mednafen ${args} "${game_file}"
            if [ "x${MM_GAME_SAVE_ENABLED}" = "xyes" ] ; then
                /usr/bin/mm_run_in_terminal_window /usr/bin/mm_command game_save
            fi
        else
            /bin/echo ""
            /bin/echo "error: console name ${game_console} has no valid emulator."
            /bin/echo ""
            exit 1
        fi
        ;;
    gb)
        if [ -e /usr/local/bin/VisualBoyAdvance ] ; then
            args=
            args="${args} --fullscreen"
            args="${args} --no-debug"
            /usr/local/bin/VisualBoyAdvance ${args} "${game_file}"
            if [ "x${MM_GAME_SAVE_ENABLED}" = "xyes" ] ; then
                /usr/bin/mm_run_in_terminal_window /usr/bin/mm_command game_save
            fi
        elif [ -e /usr/local/bin/mednafen ] ; then
            resolution_x=`/bin/echo ${MM_X_RESOLUTION} | /bin/sed -e 's%\([0-9][0-9]*\)x\([0-9][0-9]*\)%\1%'`
            resolution_y=`/bin/echo ${MM_X_RESOLUTION} | /bin/sed -e 's%\([0-9][0-9]*\)x\([0-9][0-9]*\)%\2%'`
            args=
            args="${args} -fs 1"
            args="${args} -gb.stretch 1"
            args="${args} -gb.xres ${resolution_x}"
            args="${args} -gb.yres ${resolution_y}"
            /usr/local/bin/mednafen ${args} "${game_file}"
            if [ "x${MM_GAME_SAVE_ENABLED}" = "xyes" ] ; then
                /usr/bin/mm_run_in_terminal_window /usr/bin/mm_command game_save
            fi
        else
            /bin/echo ""
            /bin/echo "error: console name ${game_console} has no valid emulator."
            /bin/echo ""
            exit 1
        fi
        ;;
    gba)
        if [ -e /usr/local/bin/VisualBoyAdvance ] ; then
            args=
            args="${args} --fullscreen"
            args="${args} --no-debug"
            /usr/local/bin/VisualBoyAdvance ${args} "${game_file}"
            if [ "x${MM_GAME_SAVE_ENABLED}" = "xyes" ] ; then
                /usr/bin/mm_run_in_terminal_window /usr/bin/mm_command game_save
            fi
        elif [ -e /usr/local/bin/mednafen ] ; then
            resolution_x=`/bin/echo ${MM_X_RESOLUTION} | /bin/sed -e 's%\([0-9][0-9]*\)x\([0-9][0-9]*\)%\1%'`
            resolution_y=`/bin/echo ${MM_X_RESOLUTION} | /bin/sed -e 's%\([0-9][0-9]*\)x\([0-9][0-9]*\)%\2%'`
            args=
            args="${args} -fs 1"
            args="${args} -gba.stretch 1"
            args="${args} -gba.xres ${resolution_x}"
            args="${args} -gba.yres ${resolution_y}"
            /usr/local/bin/mednafen ${args} "${game_file}"
            if [ "x${MM_GAME_SAVE_ENABLED}" = "xyes" ] ; then
                /usr/bin/mm_run_in_terminal_window /usr/bin/mm_command game_save
            fi
        else
            /bin/echo ""
            /bin/echo "error: console name ${game_console} has no valid emulator."
            /bin/echo ""
            exit 1
        fi
        ;;
    intv)
        if [ -e /usr/local/bin/jzintv ] ; then
            args=
            [ -e ${MM_GAME_BIOS_ROOT}/intv/exec.bin ] && args="${args} --execimg=${MM_GAME_BIOS_ROOT}/intv/exec.bin"
            [ -e ${MM_GAME_BIOS_ROOT}/intv/grom.bin ] && args="${args} --gromimg=${MM_GAME_BIOS_ROOT}/intv/grom.bin"
            [ -e ${MM_GAME_BIOS_ROOT}/intv/ecs.bin  ] && args="${args} --ecsimg=${MM_GAME_BIOS_ROOT}/intv/ecs.bin"
            args="${args} --fullscreen=1"
            if [ -e ${HOME}/.jzintv/kbdhackfile ] ; then
                args="${args} --kbdhackfile=${HOME}/.jzintv/kbdhackfile"
            fi
            /usr/local/bin/jzintv ${args} "${game_file}"
            if [ "x${MM_GAME_SAVE_ENABLED}" = "xyes" ] ; then
                /usr/bin/mm_run_in_terminal_window /usr/bin/mm_command game_save
            fi
        else
            /bin/echo ""
            /bin/echo "error: console name ${game_console} has no valid emulator."
            /bin/echo ""
            exit 1
        fi
        ;;
    nes)
        if [ -e /usr/local/bin/fceu ] ; then
            resolution_x=`/bin/echo ${MM_X_RESOLUTION} | /bin/sed -e 's%\([0-9][0-9]*\)x\([0-9][0-9]*\)%\1%'`
            resolution_y=`/bin/echo ${MM_X_RESOLUTION} | /bin/sed -e 's%\([0-9][0-9]*\)x\([0-9][0-9]*\)%\2%'`
            args=
            args="${args} -xres ${resolution_x}"
            args="${args} -yres ${resolution_y}"
            args="${args} -stretchx 1"
            args="${args} -stretchy 1"
            args="${args} -opengl 1"
            args="${args} -fs 1"
            args="${args} -sound 1"
            args="${args} -soundrate 48000"
            args="${args} -soundvol 100"
            args="${args} -soundq 1"
            args="${args} -soundbufsize 24"
            args="${args} -input1 gamepad"
            args="${args} -input2 gamepad"
            /usr/local/bin/fceu ${args} "${game_file}"
            if [ "x${MM_GAME_SAVE_ENABLED}" = "xyes" ] ; then
                /usr/bin/mm_run_in_terminal_window /usr/bin/mm_command game_save
            fi
        elif [ -e /usr/local/bin/mednafen ] ; then
            resolution_x=`/bin/echo ${MM_X_RESOLUTION} | /bin/sed -e 's%\([0-9][0-9]*\)x\([0-9][0-9]*\)%\1%'`
            resolution_y=`/bin/echo ${MM_X_RESOLUTION} | /bin/sed -e 's%\([0-9][0-9]*\)x\([0-9][0-9]*\)%\2%'`
            args=
            args="${args} -fs 1"
            args="${args} -nes.stretch 1"
            args="${args} -nes.xres ${resolution_x}"
            args="${args} -nes.yres ${resolution_y}"
            /usr/local/bin/mednafen ${args} "${game_file}"
            if [ "x${MM_GAME_SAVE_ENABLED}" = "xyes" ] ; then
                /usr/bin/mm_run_in_terminal_window /usr/bin/mm_command game_save
            fi
        else
            /bin/echo ""
            /bin/echo "error: console name ${game_console} has no valid emulator."
            /bin/echo ""
            exit 1
        fi
        ;;
    snes)
        if [ -e /usr/local/bin/zsnes ] ; then
            args=
            /usr/local/bin/zsnes ${args} "${game_file}"
            if [ "x${MM_GAME_SAVE_ENABLED}" = "xyes" ] ; then
                /usr/bin/mm_run_in_terminal_window /usr/bin/mm_command game_save
            fi
        else
            /bin/echo ""
            /bin/echo "error: console name ${game_console} has no valid emulator."
            /bin/echo ""
            exit 1
        fi
        ;;
    *)
        /bin/echo ""
        /bin/echo "error: console name ${game_console} is not valid."
        /bin/echo ""
        usage
        exit 1
        ;;
esac

exit 0
