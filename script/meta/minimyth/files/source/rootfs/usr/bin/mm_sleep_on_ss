#!/bin/sh

. /etc/rc.d/functions

trap "_exit_" 0 1 2 3 15

_exit_()
{
    ps -o ppid,pid,args \
    | sed -e 's%  *% %g' -e 's%^ %%' -e 's% $%%' \
    | grep "^$$ " \
    | grep '/bin/sleep [^ ]*$' \
    | cut -d ' ' -f 2 \
    | while read pid ; do
        kill $pid
    done

    ps -o ppid,pid,args \
    | sed -e 's%  *% %g' -e 's%^ %%' -e 's% $%%' \
    | grep "^$$ " \
    | grep '/usr/bin/xscreensaver-command -watch$' \
    | cut -d ' ' -f 2 \
    | while read pid ; do
        kill $pid
    done
}

if [ `/usr/bin/id -u` -ne 0 ] ; then
    exit 1
fi

pids=`/bin/pidof mm_sleep_on_ss`
instances=`/bin/echo ${pids} | /usr/bin/wc -w`
if [ ${instances} -ne 1 ] ; then
    exit 1
fi

/bin/sleep 30

/usr/bin/logger -t minimyth -p "local0.info" "[mm_sleep_on_ss] SLEEP_ON_SS script is running"

if [ -n "`/bin/pidof xscreensaver`" ] ; then
    /usr/bin/xscreensaver-command -deactivate > /dev/null 2>&1
    /usr/bin/xscreensaver-command -watch 2> /dev/null | while read watch ; do
    /usr/bin/logger -t minimyth -p "local0.info" "[mm_sleep_on_ss] SS changed state"
    state=`/bin/echo ${watch} | /bin/sed -e 's%  *% %g' | /usr/bin/cut -d ' ' -f 1`
    /usr/bin/logger -t minimyth -p "local0.info" "[mm_sleep_on_ss] Current SS state is ${state}"
    if [ "x${state}" = "xBLANK" ] ; then
        /usr/bin/logger -t minimyth -p "local0.info" "[mm_sleep_on_ss] SS just blanked -> Checking what mm is doing"
        location=`mm_mythfrontend_networkcontrol "query location"`
        mythfrontend_location=`/bin/echo ${location} | sed -e "s/\(^[a-zA-Z]*\).*/\1/"`
        mythfrontend_is_paused=`/bin/echo ${location} | grep -s "pause"`
        if [ -n "${mythfrontend_location}" ] ; then
            /usr/bin/logger -t minimyth -p "local0.info" "[mm_sleep_on_ss] Locations is: ${mythfrontend_location}"
            if  [ "x${mythfrontend_location}" = "xplaylistview"       ] || \
                [ "x${mythfrontend_location}" = "xplaylisteditorview" ] || \
                [ "x${mythfrontend_location}" = "xvisualizerview"     ] || \
                [ "x${mythfrontend_location}" = "xsearchview"         ] || \
                [ "x${mythfrontend_location}" = "xmythstream"         ] || \
                [ "x${mythfrontend_location}" = "xstreamview"         ] || \
                [ "x${mythfrontend_location}" = "xeditstreampopup"    ] || \
                [ "x${mythfrontend_location}" = "xsearchstream"       ] || \
                [ "x${mythfrontend_location}" = "xripstatus"          ] || \
                [ -e /var/tmp/mm_backup_in_progress                   ] ; then
                /usr/bin/logger -t minimyth -p "local0.info" "[mm_sleep_on_ss] Audio app is running or backup is in progress-> Turning-OFF TV"
                /usr/bin/mm_external tv_power_off
                /bin/touch /var/tmp/mm_tv_is_off
            elif [ "x${mythfrontend_location}"  = "xPlayback"         ] || \
                 [ "x${mythfrontend_location}"  = "xgalleryslideview" ] || \
                 [ "x${mythfrontend_location}"  = "xslideshow"        ] ; then
                if [ -n "${mythfrontend_is_paused}" ] ; then
                    /usr/bin/logger -t minimyth -p "local0.info" "[mm_sleep_on_ss] Location is Playback but state is Pause -> Sending mm to sleep"
                    /usr/bin/mm_sleep &
                else
                    /usr/bin/logger -t minimyth -p "local0.info" "[mm_sleep_on_ss] ERROR: screensaver blanks durring playback. Unblanking screen and killing xscreensaver !"
                    su minimyth -c "/usr/bin/xscreensaver-command --deactivate" & > /dev/null 2>&1
                    cp -rf /var/log/mythfrontend /var/log/mythfrontend.screensaver-error
                    cp -rf /var/log/messages /var/log/messages.screensaver-error
                fi
            else
                /usr/bin/logger -t minimyth -p "local0.info" "[mm_sleep_on_ss] Location is Idle or Pause -> Sending mm to sleep"
                /usr/bin/mm_sleep &
            fi
        else
            /usr/bin/logger -t minimyth -p "local0.info" "[mm_sleep_on_ss] ERROR: QueryLocation returns empty location !"
        fi
    fi
    if [ "x${state}" = "xUNBLANK" ] ; then
        /usr/bin/logger -t minimyth -p "local0.info" "[mm_sleep_on_ss] SS just unblanked -> Checking what mm is doing"
        mythfrontend_location=`mm_mythfrontend_networkcontrol "query location" | sed -e "s/\(^[a-zA-Z]*\).*/\1/"`
        /usr/bin/logger -t minimyth -p "local0.info" "[mm_sleep_on_ss] Locations is: ${mythfrontend_location}"
        if  [ "x${mythfrontend_location}" = "xplaylistview"       ] || \
            [ "x${mythfrontend_location}" = "xplaylisteditorview" ] || \
            [ "x${mythfrontend_location}" = "xvisualizerview"     ] || \
            [ "x${mythfrontend_location}" = "xsearchview"         ] || \
            [ "x${mythfrontend_location}" = "xmythstream"         ] || \
            [ "x${mythfrontend_location}" = "xstreamview"         ] || \
            [ "x${mythfrontend_location}" = "xeditstreampopup"    ] || \
            [ "x${mythfrontend_location}" = "xsearchstream"       ] || \
            [ -e /var/tmp/mm_backup_in_progress                   ] ; then
            /usr/bin/logger -t minimyth -p "local0.info" "[mm_sleep_on_ss] Audio app is playing or backup is in progress -> Checking is TV OFF"
            if /[ -e /var/tmp/mm_tv_is_off ] ; then
                /usr/bin/logger -t minimyth -p "local0.info" "[mm_sleep_on_ss] TV is OFF -> turning-on TV"
                /bin/rm -f /var/tmp/mm_tv_is_off
                /usr/bin/mm_external tv_power_on
            else
                /usr/bin/logger -t minimyth -p "local0.info" "[mm_sleep_on_ss] TV is ON -> no turning-on TV needed"
            fi
        fi
    fi
    done
fi

exit 0
