#!/bin/sh

pids=`/bin/pidof mm_watchdog`
instances=`/bin/echo ${pids} | /usr/bin/wc -w`
if /usr/bin/test ${instances} -ne 1 ; then
    exit 1
fi

. /etc/rc.d/functions

trap "_exit_" 0 1 2 3 15

_exit_()
{
    ps -o ppid,pid,args \
    | sed -e 's%  *% %g' -e 's%^ %%' -e 's% $%%' \
    | grep "^$$ " \
    | grep '/bin/sleep [^ ]*$' \
    | cut -d ' ' -f 2 \
    | while read pid ; do
        kill $pid
    done
}

/bin/sleep 30

/usr/bin/logger -t minimyth -p "local0.info" "[mm_watchdog] MM_WATCHDOG now monitors killed/trapped mythfrontend process..."

while true ; do

    if [ -z "`/bin/pidof mythfrontend`" ] ; then

        /usr/bin/logger -t minimyth -p "local0.info" "[mm_watchdog] MM_WATCHDOG detect killed/trapped mythfrontend process. Restarting it..."

        cp -rf /var/log/mythfrontend /var/log/mythfrontend.fe-trap.$$
        cp -rf /var/log/messages /var/log/messages.fe-trap.$$

        if [ "x${MM_MYTHTV_RUN_ON_EGLFS}" = "xyes" ] ; then

            mm_mythfrontend_start
            /bin/sleep 45

        else

            if [ "${MM_RESTART_ON_SLEEP}" = "mythfrontend" ] ; then
                mm_mythfrontend_start
                /bin/sleep 45
            else
                if [ -n "`/bin/pidof X`" ] ; then
                    /usr/bin/logger -t minimyth -p "local0.info" "[mm_watchdog] Skippig Xinit as X is already running"
                    /bin/sleep 2
                else
                    /usr/bin/logger -t minimyth -p "local0.info" "[mm_watchdog] Kicking Xinit..."
                    /usr/bin/prlimit --rtprio=50 /bin/su -c "/usr/bin/nohup /usr/bin/xinit > /dev/null 2>&1 &" - minimyth
                    /bin/sleep 45
                fi
            fi
        fi

    else

        /bin/sleep 1

    fi

done

exit 0
