#!/bin/sh

. /etc/rc.d/functions

osd_timeout=15
log_file="/var/log/online-update.log"

if [ x${MM_MINIMYTH_ONLINE_UPDATES_URL} = "x" ] ; then
    echo "Error: No MM_MINIMYTH_ONLINE_UPDATES_URL is set. Exiting ..."
    /usr/bin/logger -t minimyth -p "local0.info" "[mm_do_online_update] Error: MM_MINIMYTH_ONLINE_UPDATES_URL is set. Exiting..."
    exit 1
fi

if [ x${MM_MINIMYTH_ONLINE_UPDATES_URL} = "xlocal" ] ; then
    echo "MM_MINIMYTH_ONLINE_UPDATES_URL is set to 'local'. Exiting ..."
    /usr/bin/logger -t minimyth -p "local0.info" "[mm_do_online_update] MM_MINIMYTH_ONLINE_UPDATES_URL is set to local. Exiting..."
    exit 1
fi

command=$1

pids=`/bin/pidof mm_do_online_update`
instances=`/bin/echo ${pids} | /usr/bin/wc -w`
if [ ${instances} -ne 1 ] ; then
    echo "[mm_do_online_update] Another instance already running...Exiting"
    exit 1
fi

run_rsync() {

    local src
    local dst
    local param

    src=$1
    dst=$2
    paam=$3

    echo ' '
    echo "From          : [$1]"
    echo "To            : [$2]"
    echo "Updated files :"
    /usr/bin/logger -t minimyth -p "local0.info" "[mm_do_online_update] from:[$src] to:[$dst]"

rsync \
--port 7135 \
--recursive \
--links \
--perms \
--devices \
--specials \
--checksum \
--compress \
--log-file=${log_file} \
--out-format=' => %f' \
--log-file-format='%f [%b bytes]' \
--stats \
--exclude=/dev* \
--exclude=*.ssh* \
$3 \
$1 \
$2 \

    echo " "

}


if [ "x${command}" = "xdoupdate" ] ; then

    echo 'Starting on-line update ...'
    dry_run="--delete"

else

    echo 'Starting dry-run for on-line update ...'
    dry_run="--dry-run"

fi

rm -f ${log_file}

run_rsync "${MM_MINIMYTH_ONLINE_UPDATES_URL}/boot/dtbs/"      "/media/boot/dtbs"  ${dry_run}
run_rsync "${MM_MINIMYTH_ONLINE_UPDATES_URL}/boot/*Image"     "/media/boot"       ${dry_run}
run_rsync "${MM_MINIMYTH_ONLINE_UPDATES_URL}/root/rootfs-ro/" "/initrd/rootfs-ro" ${dry_run}

is_error=`cat ${log_file} | grep -c "error"`

if [ ${is_error} -eq 0 ] ; then

    number_upd_files=`cat ${log_file} | grep "Number of regular files transferred" | cut -d" " -f9 | sed -e 's/,//g'`

    for number in ${number_upd_files} ; do

      files_total=$((${files_total} + ${number}))

    done

    echo " "
    echo "  Total updated files: ${files_total}"

    if [ x${files_total} = "x0" ] ; then

        if [ "x${command}" = "xdoupdate" ] ; then

            mm_show_mythnotify 'System is already up-to-date ...' '' 'ok' ${osd_timeout} 'On-line Updates'

        else

            mm_show_mythnotify 'There is no any updates ...' '' 'ok' ${osd_timeout} 'On-line Updates'

        fi

    else

        if [ "x${command}" = "xdoupdate" ] ; then

            mm_show_mythnotify ${files_total}' files were updated !' 'Update will effect after reboot!' 'ok' ${osd_timeout} 'On-line Updates'

        else

            mm_show_mythnotify 'There is '${files_total}' files to update !' '' 'ok' ${osd_timeout} 'On-line Updates'
            sync

        fi

    fi

else

    mm_show_mythnotify 'Something went wrong :-(' '' 'error' ${osd_timeout} 'On-line Updates'
    echo 'Error contacting updates server !'

fi

exit 0
