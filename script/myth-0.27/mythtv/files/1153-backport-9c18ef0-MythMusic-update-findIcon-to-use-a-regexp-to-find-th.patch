From 9c18ef09b7aedd56d3480e008bed8686f34ef85b Mon Sep 17 00:00:00 2001
From: Paul Harrison <pharrison@mythtv.org>
Date: Tue, 22 Jul 2014 15:14:09 +0100
Subject: [PATCH 4/5] MythMusic: update findIcon() to use a regexp to find the
 icon

This speeds up looking for an icon by replacing four lookups with a single one
using a regexp to find matching icons.
---
 mythtv/libs/libmythmetadata/musicutils.cpp |   25 +++++++++++--------------
 1 file changed, 11 insertions(+), 14 deletions(-)

diff --git a/mythtv/libs/libmythmetadata/musicutils.cpp b/mythtv/libs/libmythmetadata/musicutils.cpp
index 9a82e49..380c2ca 100644
--- a/mythtv/libs/libmythmetadata/musicutils.cpp
+++ b/mythtv/libs/libmythmetadata/musicutils.cpp
@@ -45,21 +45,18 @@ QString findIcon(const QString &type, const QString &name, bool ignoreCache)
         }
     }
 
-    QString cleanName = fixFilename(name);
-    QString file = QString("Icons/%1/%2").arg(type).arg(cleanName);
-    QStringList imageExtensions = QStringList() << ".jpg" << ".jpeg" << ".png" << ".gif";
-    QString filename;
-
-    // TODO also look on any slave BEs?
-    for (int x = 0; x < imageExtensions.count(); x++)
+    QString cleanName = fixFilename(name) + '.';
+    cleanName = '^' + QRegExp::escape(cleanName);
+    QString file = QString("/Icons/%1/%2").arg(type).arg(cleanName);
+    QString imageExtensions = "(jpg|jpeg|png|gif)";
+    QStringList fileList;
+
+    fileList = RemoteFile::FindFileList(file + imageExtensions, gCoreContext->GetMasterHostName(), "MusicArt", true, true);
+    if (!fileList.isEmpty())
     {
-        filename = RemoteFile::FindFile(file + imageExtensions[x], gCoreContext->GetMasterHostName(), "MusicArt");
-        if (!filename.isEmpty())
-        {
-            LOG(VB_FILE, LOG_INFO, QString("findicon: found at %1").arg(filename));
-            iconMap.insert(type + name, filename);
-            return filename;
-        }
+        LOG(VB_FILE, LOG_INFO, QString("findicon: found %1 icons using %2").arg(fileList.size()).arg(fileList[0]));
+        iconMap.insert(type + name, fileList[0]);
+        return fileList[0];
     }
 
     iconMap.insert(type + name, QString());
-- 
1.7.10.2

