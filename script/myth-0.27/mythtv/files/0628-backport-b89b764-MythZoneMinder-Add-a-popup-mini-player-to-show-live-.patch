From b89b764e1de47ae0b471cadd0c74d5709cc3ef76 Mon Sep 17 00:00:00 2001
From: Paul Harrison <pharrison@mythtv.org>
Date: Thu, 13 Nov 2014 11:01:33 +0000
Subject: [PATCH] MythZoneMinder: Add a popup mini player to show live camera
 views

This adds a jump point which will show a mini player that shows live views
from the ZoneMinders cameras.

The mini player works in a similar way to the music miniplayer so it will show
for 10 seconds then auto hide itself unless you press SELECT which will stop
the popup auto hiding. You can close the popup window at any time with ESCAPE.
The 1 key will cycle through the available cameras same as the normal live
viewer.

The next step is to auto show the mini player when an alarm is triggered in
ZoneMinder.
---
 mythplugins/mythzoneminder/mythzoneminder/main.cpp |   16 ++++
 .../mythzoneminder/mythzoneminder.pro              |    5 +-
 .../mythzoneminder/mythzoneminder/zmliveplayer.cpp |   88 ++++++++++++--------
 .../mythzoneminder/mythzoneminder/zmliveplayer.h   |   10 ++-
 .../mythzoneminder/mythzoneminder/zmminiplayer.cpp |   88 ++++++++++++++++++++
 .../mythzoneminder/mythzoneminder/zmminiplayer.h   |   33 ++++++++
 .../theme/default-wide/zoneminder-ui.xml           |   50 +++++++++++
 .../mythzoneminder/theme/default/zoneminder-ui.xml |   50 +++++++++++
 8 files changed, 296 insertions(+), 44 deletions(-)
 create mode 100644 mythplugins/mythzoneminder/mythzoneminder/zmminiplayer.cpp
 create mode 100644 mythplugins/mythzoneminder/mythzoneminder/zmminiplayer.h

diff --git a/mythplugins/mythzoneminder/mythzoneminder/main.cpp b/mythplugins/mythzoneminder/mythzoneminder/main.cpp
index edf34af..63d4f76 100644
--- a/mythplugins/mythzoneminder/mythzoneminder/main.cpp
+++ b/mythplugins/mythzoneminder/mythzoneminder/main.cpp
@@ -30,6 +30,7 @@
 #include "zmliveplayer.h"
 #include "zmevents.h"
 #include "zmclient.h"
+#include "zmminiplayer.h"
 
 using namespace std;
 
@@ -86,6 +87,19 @@ static void runZMEventView(void)
         mainStack->AddScreen(events);
 }
 
+static void runZMMiniPlayer(void)
+{
+    if (!checkConnection())
+        return;
+
+    MythScreenStack *mainStack = GetMythMainWindow()->GetMainStack();
+
+    ZMMiniPlayer *miniPlayer = new ZMMiniPlayer(mainStack);
+
+    if (miniPlayer->Create())
+        mainStack->AddScreen(miniPlayer);
+}
+
 // these point to the the mainmenu callback if found
 static void (*m_callback)(void *, QString &) = NULL;
 static void *m_callbackdata = NULL;
@@ -167,6 +181,8 @@ static void setupKeys(void)
         "", "", runZMLiveView);
     REG_JUMP(QT_TRANSLATE_NOOP("MythControls", "ZoneMinder Events"),
         "", "", runZMEventView);
+    REG_JUMPEX(QT_TRANSLATE_NOOP("MythControls", "ZoneMinder Mini Live View"),
+        "", "", runZMMiniPlayer, false);
 }
 
 int mythplugin_init(const char *libversion)
diff --git a/mythplugins/mythzoneminder/mythzoneminder/mythzoneminder.pro b/mythplugins/mythzoneminder/mythzoneminder/mythzoneminder.pro
index ef06240..d87f15c 100644
--- a/mythplugins/mythzoneminder/mythzoneminder/mythzoneminder.pro
+++ b/mythplugins/mythzoneminder/mythzoneminder/mythzoneminder.pro
@@ -17,11 +17,10 @@ INCLUDEPATH += $${PREFIX}/include/mythtv/libmythui
 
 # Input
 HEADERS += zmconsole.h zmplayer.h zmevents.h zmliveplayer.h zmdefines.h
-HEADERS += zmsettings.h zmclient.h
+HEADERS += zmsettings.h zmclient.h zmminiplayer.h
 
 SOURCES += main.cpp zmconsole.cpp zmplayer.cpp zmevents.cpp zmliveplayer.cpp
-SOURCES += zmsettings.cpp zmclient.cpp
-
+SOURCES += zmsettings.cpp zmclient.cpp zmminiplayer.cpp
 
 QT += sql xml
 
diff --git a/mythplugins/mythzoneminder/mythzoneminder/zmliveplayer.cpp b/mythplugins/mythzoneminder/mythzoneminder/zmliveplayer.cpp
index 20ded57..3fac57c 100644
--- a/mythplugins/mythzoneminder/mythzoneminder/zmliveplayer.cpp
+++ b/mythplugins/mythzoneminder/mythzoneminder/zmliveplayer.cpp
@@ -32,10 +32,11 @@
 
 const int FRAME_UPDATE_TIME = 1000 / 10;  // try to update the frame 10 times a second
 
-ZMLivePlayer::ZMLivePlayer(MythScreenStack *parent)
+ZMLivePlayer::ZMLivePlayer(MythScreenStack *parent, bool isMiniPlayer)
              :MythScreenType(parent, "zmliveview"),
               m_frameTimer(new QTimer(this)), m_paused(false), m_monitorLayout(1),
-              m_monitorCount(0), m_players(NULL), m_monitors(NULL)
+              m_monitorCount(0), m_players(NULL), m_monitors(NULL),
+              m_isMiniPlayer(isMiniPlayer)
 {
     GetMythUI()->DoDisableScreensaver();
 
@@ -47,19 +48,29 @@ ZMLivePlayer::ZMLivePlayer(MythScreenStack *parent)
 
 bool ZMLivePlayer::Create(void)
 {
-    bool foundtheme = false;
-
     // Load the theme for this screen
-    foundtheme = LoadWindowFromXML("zoneminder-ui.xml", "zmliveplayer", this);
+    QString winName = m_isMiniPlayer ? "miniplayer" : "zmliveplayer";
 
-    if (!foundtheme)
+    if (!LoadWindowFromXML("zoneminder-ui.xml", winName, this))
+    {
+        LOG(VB_GENERAL, LOG_ERR, QString("Cannot load screen '%1'").arg(winName));
         return false;
+    }
 
     if (!hideAll())
         return false;
 
-    if (!initMonitorLayout())
-        return false;
+    if (m_isMiniPlayer)
+    {
+        // we only support the single camera layout in the mini player
+        if (!initMonitorLayout(1))
+            return false;
+    }
+    else
+    {
+        if (!initMonitorLayout(gCoreContext->GetNumSetting("ZoneMinderLiveLayout", 1)))
+            return false;
+    }
 
     return true;
 }
@@ -83,36 +94,39 @@ bool ZMLivePlayer::hideAll(void)
         GetMythUIType("status1-1")->SetVisible(false);
         GetMythUIType("frame1-1")->SetVisible(false);
 
-        // two player layout
-        for (int x = 1; x < 3; x++)
+        if (!m_isMiniPlayer)
         {
-            GetMythUIType(QString("name2-%1").arg(x))->SetVisible(false);
-            GetMythUIType(QString("status2-%1").arg(x))->SetVisible(false);
-            GetMythUIType(QString("frame2-%1").arg(x))->SetVisible(false);
-        }
+            // two player layout
+            for (int x = 1; x < 3; x++)
+            {
+                GetMythUIType(QString("name2-%1").arg(x))->SetVisible(false);
+                GetMythUIType(QString("status2-%1").arg(x))->SetVisible(false);
+                GetMythUIType(QString("frame2-%1").arg(x))->SetVisible(false);
+            }
 
-        // four player layout
-        for (int x = 1; x < 5; x++)
-        {
-            GetMythUIType(QString("name3-%1").arg(x))->SetVisible(false);
-            GetMythUIType(QString("status3-%1").arg(x))->SetVisible(false);
-            GetMythUIType(QString("frame3-%1").arg(x))->SetVisible(false);
-        }
+            // four player layout
+            for (int x = 1; x < 5; x++)
+            {
+                GetMythUIType(QString("name3-%1").arg(x))->SetVisible(false);
+                GetMythUIType(QString("status3-%1").arg(x))->SetVisible(false);
+                GetMythUIType(QString("frame3-%1").arg(x))->SetVisible(false);
+            }
 
-        // six player layout
-        for (int x = 1; x < 7; x++)
-        {
-            GetMythUIType(QString("name4-%1").arg(x))->SetVisible(false);
-            GetMythUIType(QString("status4-%1").arg(x))->SetVisible(false);
-            GetMythUIType(QString("frame4-%1").arg(x))->SetVisible(false);
-        }
+            // six player layout
+            for (int x = 1; x < 7; x++)
+            {
+                GetMythUIType(QString("name4-%1").arg(x))->SetVisible(false);
+                GetMythUIType(QString("status4-%1").arg(x))->SetVisible(false);
+                GetMythUIType(QString("frame4-%1").arg(x))->SetVisible(false);
+            }
 
-        // eight player layout
-        for (int x = 1; x < 9; x++)
-        {
-            GetMythUIType(QString("name5-%1").arg(x))->SetVisible(false);
-            GetMythUIType(QString("status5-%1").arg(x))->SetVisible(false);
-            GetMythUIType(QString("frame5-%1").arg(x))->SetVisible(false);
+            // eight player layout
+            for (int x = 1; x < 9; x++)
+            {
+                GetMythUIType(QString("name5-%1").arg(x))->SetVisible(false);
+                GetMythUIType(QString("status5-%1").arg(x))->SetVisible(false);
+                GetMythUIType(QString("frame5-%1").arg(x))->SetVisible(false);
+            }
         }
     }
     catch (const QString &name)
@@ -126,7 +140,7 @@ bool ZMLivePlayer::hideAll(void)
     return true;
 }
 
-bool ZMLivePlayer::initMonitorLayout()
+bool ZMLivePlayer::initMonitorLayout(int layout)
 {
     // if we haven't got any monitors there's not much we can do so bail out!
     if (m_monitors->empty())
@@ -137,7 +151,7 @@ bool ZMLivePlayer::initMonitorLayout()
         return false;
     }
 
-    setMonitorLayout(gCoreContext->GetNumSetting("ZoneMinderLiveLayout", 1), true);
+    setMonitorLayout(layout, true);
     m_frameTimer->start(FRAME_UPDATE_TIME);
 
     return true;
@@ -202,7 +216,7 @@ bool ZMLivePlayer::keyPressEvent(QKeyEvent *event)
                 m_paused = true;
             }
         }
-        else if (action == "INFO")
+        else if (action == "INFO" && !m_isMiniPlayer)
         {
             m_monitorLayout++;
             if (m_monitorLayout > 5)
diff --git a/mythplugins/mythzoneminder/mythzoneminder/zmliveplayer.h b/mythplugins/mythzoneminder/mythzoneminder/zmliveplayer.h
index 83aced6..05419fc 100644
--- a/mythplugins/mythzoneminder/mythzoneminder/zmliveplayer.h
+++ b/mythplugins/mythzoneminder/mythzoneminder/zmliveplayer.h
@@ -63,7 +63,7 @@ class ZMLivePlayer : public MythScreenType
     Q_OBJECT
 
   public:
-    ZMLivePlayer(MythScreenStack *parent);
+    ZMLivePlayer(MythScreenStack *parent, bool isMiniPlayer = false);
     ~ZMLivePlayer();
 
     bool Create(void);
@@ -72,12 +72,12 @@ class ZMLivePlayer : public MythScreenType
 
     void setMonitorLayout(int layout, bool restore = false);
 
-  private slots:
+  protected slots:
     void updateFrame(void);
-    bool initMonitorLayout(void);
+    bool initMonitorLayout(int layout);
     void getMonitorList(void);
 
-  private:
+  protected:
     MythUIType* GetMythUIType(const QString &name, bool optional = false);
     bool hideAll();
     void stopPlayers(void);
@@ -90,6 +90,8 @@ class ZMLivePlayer : public MythScreenType
 
     vector<Player *>     *m_players;
     vector<Monitor *>    *m_monitors;
+
+    bool                  m_isMiniPlayer;
 };
 
 #endif
diff --git a/mythplugins/mythzoneminder/mythzoneminder/zmminiplayer.cpp b/mythplugins/mythzoneminder/mythzoneminder/zmminiplayer.cpp
new file mode 100644
index 0000000..1f03a32
--- /dev/null
+++ b/mythplugins/mythzoneminder/mythzoneminder/zmminiplayer.cpp
@@ -0,0 +1,88 @@
+// mythtv
+#include <mythcontext.h>
+#include <lcddevice.h>
+#include <mythuiimage.h>
+
+// mythzoneminder
+#include "zmminiplayer.h"
+
+// the maximum image size we are ever likely to get from ZM
+#define MAX_IMAGE_SIZE  (2048*1536*3)
+
+const int FRAME_UPDATE_TIME = 1000 / 10;  // try to update the frame 10 times a second
+
+ZMMiniPlayer::ZMMiniPlayer(MythScreenStack *parent)
+          : ZMLivePlayer(parent, true),
+              m_displayTimer(new QTimer(this))
+{
+    m_displayTimer->setSingleShot(true);
+    connect(m_displayTimer, SIGNAL(timeout()), this, SLOT(timerTimeout()));
+}
+
+ZMMiniPlayer::~ZMMiniPlayer(void)
+{
+    // Timers are deleted by Qt
+    m_displayTimer->disconnect();
+    m_displayTimer = NULL;
+
+    if (LCD *lcd = LCD::Get())
+        lcd->switchToTime ();
+}
+
+void ZMMiniPlayer::timerTimeout(void)
+{
+    Close();
+}
+
+bool ZMMiniPlayer::Create(void)
+{
+    if (!ZMLivePlayer::Create())
+        return false;
+
+    m_displayTimer->start(10000);
+
+    return true;
+}
+
+bool ZMMiniPlayer::keyPressEvent(QKeyEvent *event)
+{
+    // restart the display timer on any keypress if it is active
+    if (m_displayTimer && m_displayTimer->isActive())
+        m_displayTimer->start();
+
+    if (GetFocusWidget() && GetFocusWidget()->keyPressEvent(event))
+        return true;
+
+    bool handled = false;
+    QStringList actions;
+    handled = GetMythMainWindow()->TranslateKeyPress("Music", event, actions);
+
+    for (int i = 0; i < actions.size() && !handled; i++)
+    {
+        QString action = actions[i];
+        handled = true;
+
+        if (action == "SELECT")
+        {
+            if (m_displayTimer)
+                m_displayTimer->stop();
+        }
+        else if (action == "ESCAPE")
+        {
+            Close();
+        }
+        else if (action == "MENU")
+        {
+        }
+        else
+            handled = false;
+    }
+
+    if (!handled && ZMLivePlayer::keyPressEvent(event))
+        handled = true;
+
+    if (!handled && MythScreenType::keyPressEvent(event))
+        handled = true;
+
+    return handled;
+}
diff --git a/mythplugins/mythzoneminder/mythzoneminder/zmminiplayer.h b/mythplugins/mythzoneminder/mythzoneminder/zmminiplayer.h
new file mode 100644
index 0000000..61c9909
--- /dev/null
+++ b/mythplugins/mythzoneminder/mythzoneminder/zmminiplayer.h
@@ -0,0 +1,33 @@
+#ifndef ZMMINIPLAYER_H_
+#define ZMMINIPLAYER_H_
+
+#include <mythexp.h>
+#include <zmliveplayer.h>
+
+class QTimer;
+class MythUIImage;
+
+class MPUBLIC ZMMiniPlayer : public ZMLivePlayer
+{
+  Q_OBJECT
+
+  public:
+    ZMMiniPlayer(MythScreenStack *parent);
+    ~ZMMiniPlayer();
+
+    bool Create(void);
+    bool keyPressEvent(QKeyEvent *);
+
+  public slots:
+    void timerTimeout(void);
+
+  private:
+    QTimer *m_displayTimer;
+    QTimer *m_frameTimer;
+
+    MythUIText  *m_monitorText;
+    MythUIText  *m_statusText;
+    MythUIImage *m_image;
+};
+
+#endif
diff --git a/mythplugins/mythzoneminder/theme/default-wide/zoneminder-ui.xml b/mythplugins/mythzoneminder/theme/default-wide/zoneminder-ui.xml
index c665c6a..31a380e 100644
--- a/mythplugins/mythzoneminder/theme/default-wide/zoneminder-ui.xml
+++ b/mythplugins/mythzoneminder/theme/default-wide/zoneminder-ui.xml
@@ -1111,4 +1111,54 @@
 
     </window>
 
+    <window name="miniplayer">
+        <fontdef name="monitor" from="basesmall">
+            <color>#ffff00</color>
+            <size>16</size>
+        </fontdef>
+
+        <fontdef name="idle" from="basesmall">
+            <color>#ffff00</color>
+            <size>16</size>
+        </fontdef>
+
+        <fontdef name="alarm" from="basesmall">
+            <color>#ff0000</color>
+            <size>16</size>
+        </fontdef>
+
+        <fontdef name="alert" from="basesmall">
+            <color>#ffa500</color>
+            <size>16</size>
+        </fontdef>
+
+        <area>-1,5,396,340</area>
+
+        <shape name="background" from="basebackground">
+            <area>0,0,396,320</area>
+        </shape>
+
+        <textarea name="name1-1" from="basetextarea">
+            <area>10,5,230,30</area>
+            <font>monitor</font>
+            <value>Monitor 1</value>
+        </textarea>
+
+        <textarea name="status1-1" from="basetextarea">
+            <area>241,5,145,30</area>
+            <align>right</align>
+            <font>idle</font>
+            <font state="idle">idle</font>
+            <font state="alarm">alarm</font>
+            <font state="alert">alert</font>
+            <value></value>
+        </textarea>
+
+        <imagetype name="frame1-1">
+            <area>10,30,376,280</area>
+            <filename>mz_testcard.png</filename>
+        </imagetype>
+
+    </window>
+
 </mythuitheme>
diff --git a/mythplugins/mythzoneminder/theme/default/zoneminder-ui.xml b/mythplugins/mythzoneminder/theme/default/zoneminder-ui.xml
index e5cb7c5..fba67ae 100644
--- a/mythplugins/mythzoneminder/theme/default/zoneminder-ui.xml
+++ b/mythplugins/mythzoneminder/theme/default/zoneminder-ui.xml
@@ -1135,4 +1135,54 @@
 
     </window>
 
+    <window name="miniplayer">
+        <fontdef name="monitor" from="basesmall">
+            <color>#ffff00</color>
+            <size>16</size>
+        </fontdef>
+
+        <fontdef name="idle" from="basesmall">
+            <color>#ffff00</color>
+            <size>16</size>
+        </fontdef>
+
+        <fontdef name="alarm" from="basesmall">
+            <color>#ff0000</color>
+            <size>16</size>
+        </fontdef>
+
+        <fontdef name="alert" from="basesmall">
+            <color>#ffa500</color>
+            <size>16</size>
+        </fontdef>
+
+        <area>-1,5,396,340</area>
+
+        <shape name="background" from="basebackground">
+            <area>0,0,396,320</area>
+        </shape>
+
+        <textarea name="name1-1" from="basetextarea">
+            <area>10,5,230,30</area>
+            <font>monitor</font>
+            <value>Monitor 1</value>
+        </textarea>
+
+        <textarea name="status1-1" from="basetextarea">
+            <area>241,5,145,30</area>
+            <align>right</align>
+            <font>idle</font>
+            <font state="idle">idle</font>
+            <font state="alarm">alarm</font>
+            <font state="alert">alert</font>
+            <value></value>
+        </textarea>
+
+        <imagetype name="frame1-1">
+            <area>10,30,376,280</area>
+            <filename>mz_testcard.png</filename>
+        </imagetype>
+
+    </window>
+
 </mythuitheme>
-- 
1.7.10.2

