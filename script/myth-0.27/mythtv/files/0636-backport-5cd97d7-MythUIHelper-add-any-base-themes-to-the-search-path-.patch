From 5cd97d7fd999e4d8575a51a55b97d65c3093a754 Mon Sep 17 00:00:00 2001
From: Paul Harrison <pharrison@mythtv.org>
Date: Sat, 15 Nov 2014 23:42:32 +0000
Subject: [PATCH 3/3] MythUIHelper: add any base themes to the search path and
 cache the result

This allows a simple form of theme inheritance where you could add your own
window or widget definitions to a new theme but still use everything else from
the base theme.

First the theme would be searched then any base theme if defined in
themeinfo.xml then the usual fallback to default-wide then default.

The next step would be allow windows and widgets in the new theme to inherit
from ones in the base theme so you would only need to change the elements
you need rather than having to completely redefine them in the new theme.
---
 mythtv/libs/libmythui/mythuihelper.cpp |   61 ++++++++++++++++++++++++++++----
 mythtv/libs/libmythui/mythuihelper.h   |    2 +-
 2 files changed, 55 insertions(+), 8 deletions(-)

diff --git a/mythtv/libs/libmythui/mythuihelper.cpp b/mythtv/libs/libmythui/mythuihelper.cpp
index fc65869..245bbb7 100644
--- a/mythtv/libs/libmythui/mythuihelper.cpp
+++ b/mythtv/libs/libmythui/mythuihelper.cpp
@@ -145,6 +145,8 @@ public:
     MythUIHelper *parent;
 
     int m_fontStretch;
+
+    QStringList m_searchPaths;
 };
 
 int MythUIHelperPrivate::x_override = -1;
@@ -498,6 +500,7 @@ void MythUIHelper::LoadQtConfig(void)
     // Recalculate GUI dimensions
     d->StoreGUIsettings();
 
+    d->m_searchPaths.clear();
     d->m_themepathname = themedir + '/';
 
     themedir += "/qtlook.txt";
@@ -1015,7 +1018,7 @@ bool MythUIHelper::IsGeometryOverridden(void)
  *  \param themename The theme name.
  *  \return Path to theme or empty string.
  */
-QString MythUIHelper::FindThemeDir(const QString &themename)
+QString MythUIHelper::FindThemeDir(const QString &themename, bool doFallback)
 {
     QString testdir;
     QDir dir;
@@ -1039,6 +1042,9 @@ QString MythUIHelper::FindThemeDir(const QString &themename)
             .arg(dir.absolutePath()));
     }
 
+    if (!doFallback)
+        return QString();
+
     testdir = GetThemesParentDir() + DEFAULT_UI_THEME;
     dir.setPath(testdir);
 
@@ -1135,16 +1141,57 @@ QString MythUIHelper::GetThemeName(void)
 
 QStringList MythUIHelper::GetThemeSearchPath(void)
 {
-    QStringList searchpath;
+    if (!d->m_searchPaths.isEmpty())
+        return d->m_searchPaths;
+
+    // traverse up the theme inheritance list adding their location to the search path
+    QList<ThemeInfo> themeList = GetThemes(THEME_UI);
+    bool found = true;
+    QString themeName = d->m_themename;
+    QString baseName;
+
+    while (found && !themeName.isEmpty())
+    {
+        // find the ThemeInfo for this theme
+        found = false;
+        baseName = "";
+
+        for (int x = 0; x < themeList.count(); x++)
+        {
+            if (themeList.at(x).GetName() == themeName)
+            {
+                found = true;
+                baseName = themeList.at(x).GetBaseTheme();
+                break;
+            }
+        }
 
-    searchpath.append(GetThemeDir());
+        // try to find where the theme is installed
+        if (found)
+        {
+            QString themedir = FindThemeDir(themeName, false);
+            if (!themedir.isEmpty())
+            {
+                LOG(VB_GUI, LOG_INFO, LOC + QString("Adding path '%1' to theme search paths").arg(themedir));
+                d->m_searchPaths.append(themedir + '/');
+            }
+            else
+                LOG(VB_GENERAL, LOG_ERR, LOC + QString("Could not find ui theme location: %1").arg(themedir));
+        }
+        else
+        {
+            LOG(VB_GENERAL, LOG_ERR, LOC + QString("Could not find inherited theme: %1").arg(themeName));
+        }
+
+        themeName = baseName;
+    }
 
     if (d->m_isWide)
-        searchpath.append(GetThemesParentDir() + "default-wide/");
+        d->m_searchPaths.append(GetThemesParentDir() + "default-wide/");
 
-    searchpath.append(GetThemesParentDir() + "default/");
-    searchpath.append("/tmp/");
-    return searchpath;
+    d->m_searchPaths.append(GetThemesParentDir() + "default/");
+    d->m_searchPaths.append("/tmp/");
+    return d->m_searchPaths;
 }
 
 QList<ThemeInfo> MythUIHelper::GetThemes(ThemeType type)
diff --git a/mythtv/libs/libmythui/mythuihelper.h b/mythtv/libs/libmythui/mythuihelper.h
index b6fd5c5..8a49a73 100644
--- a/mythtv/libs/libmythui/mythuihelper.h
+++ b/mythtv/libs/libmythui/mythuihelper.h
@@ -91,7 +91,7 @@ class MUI_PUBLIC MythUIHelper
 
     void ThemeWidget(QWidget *widget);
 
-    QString FindThemeDir(const QString &themename);
+    QString FindThemeDir(const QString &themename, bool doFallback = true);
     QString FindMenuThemeDir(const QString &menuname);
     QString GetThemeDir(void);
     QString GetThemeName(void);
-- 
1.7.10.2

