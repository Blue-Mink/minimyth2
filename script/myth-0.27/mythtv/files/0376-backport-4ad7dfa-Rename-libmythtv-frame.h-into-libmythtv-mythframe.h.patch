From 4ad7dfabfa63335c2fd6f4f69b5a048beefe8ed0 Mon Sep 17 00:00:00 2001
From: Jean-Yves Avenard <jyavenard@mythtv.org>
Date: Sat, 31 May 2014 01:42:13 +1000
Subject: [PATCH 15/28] Rename libmythtv/frame.h into libmythtv/mythframe.h

frame.h is now a FFmpeg header, so avoid potential conflicts
---
 mythtv/filters/adjust/filter_adjust.c              |    2 +-
 mythtv/filters/bobdeint/filter_bobdeint.c          |    2 +-
 mythtv/filters/convert/filter_convert.c            |    2 +-
 mythtv/filters/crop/filter_crop.c                  |    2 +-
 mythtv/filters/denoise3d/filter_denoise3d.c        |    2 +-
 mythtv/filters/fieldorder/filter_fieldorder.c      |    2 +-
 mythtv/filters/force/filter_force.c                |    2 +-
 mythtv/filters/greedyhdeint/filter_greedyhdeint.c  |    2 +-
 mythtv/filters/invert/filter_invert.c              |    2 +-
 mythtv/filters/ivtc/filter_ivtc.c                  |    2 +-
 mythtv/filters/kerneldeint/filter_kerneldeint.c    |    2 +-
 mythtv/filters/linearblend/filter_linearblend.c    |    2 +-
 mythtv/filters/onefield/filter_onefield.c          |    2 +-
 mythtv/filters/postprocess/filter_postprocess.c    |    2 +-
 mythtv/filters/quickdnr/filter_quickdnr.c          |    2 +-
 mythtv/filters/vflip/filter_vflip.c                |    2 +-
 mythtv/filters/yadif/filter_yadif.c                |    2 +-
 mythtv/libs/libmythtv/HLS/httplivestream.h         |    2 +-
 mythtv/libs/libmythtv/avformatdecoder.h            |    2 +-
 mythtv/libs/libmythtv/dummydecoder.h               |    5 +-
 mythtv/libs/libmythtv/filewriterbase.h             |    2 +-
 mythtv/libs/libmythtv/filter.h                     |    2 +-
 mythtv/libs/libmythtv/filtermanager.h              |    2 +-
 mythtv/libs/libmythtv/frame.h                      |  257 --------------------
 mythtv/libs/libmythtv/libmythtv.pro                |    2 +-
 mythtv/libs/libmythtv/mythframe.h                  |  257 ++++++++++++++++++++
 mythtv/libs/libmythtv/nuppeldecoder.h              |    2 +-
 mythtv/libs/libmythtv/privatedecoder_crystalhd.h   |    2 +-
 mythtv/libs/libmythtv/privatedecoder_vda.cpp       |    2 +-
 mythtv/libs/libmythtv/util-osd.h                   |    2 +-
 mythtv/libs/libmythtv/vaapicontext.cpp             |    2 +-
 mythtv/libs/libmythtv/vbi608extractor.h            |    2 +-
 mythtv/libs/libmythtv/videobuffers.h               |    4 +-
 mythtv/libs/libmythtv/videooutbase.h               |    2 +-
 mythtv/programs/mythcommflag/CannyEdgeDetector.cpp |    2 +-
 mythtv/programs/mythcommflag/ClassicCommDetector.h |    2 +-
 mythtv/programs/mythcommflag/EdgeDetector.cpp      |    2 +-
 mythtv/programs/mythcommflag/PGMConverter.cpp      |    2 +-
 mythtv/programs/mythcommflag/TemplateFinder.cpp    |    2 +-
 mythtv/programs/mythcommflag/pgm.cpp               |    2 +-
 40 files changed, 295 insertions(+), 300 deletions(-)
 delete mode 100644 mythtv/libs/libmythtv/frame.h
 create mode 100644 mythtv/libs/libmythtv/mythframe.h

diff --git a/mythtv/filters/adjust/filter_adjust.c b/mythtv/filters/adjust/filter_adjust.c
index 63f0ab0..1350fda 100644
--- a/mythtv/filters/adjust/filter_adjust.c
+++ b/mythtv/filters/adjust/filter_adjust.c
@@ -13,7 +13,7 @@
 #include <math.h>
 
 #include "filter.h"
-#include "frame.h"
+#include "mythframe.h"
 
 #if HAVE_MMX
 
diff --git a/mythtv/filters/bobdeint/filter_bobdeint.c b/mythtv/filters/bobdeint/filter_bobdeint.c
index a06de1c..c9b9f1b 100644
--- a/mythtv/filters/bobdeint/filter_bobdeint.c
+++ b/mythtv/filters/bobdeint/filter_bobdeint.c
@@ -13,7 +13,7 @@
 #include <string.h>
 
 #include "filter.h"
-#include "frame.h"
+#include "mythframe.h"
 
 typedef struct BDFilter
 {
diff --git a/mythtv/filters/convert/filter_convert.c b/mythtv/filters/convert/filter_convert.c
index bf2f579..4193a17 100644
--- a/mythtv/filters/convert/filter_convert.c
+++ b/mythtv/filters/convert/filter_convert.c
@@ -12,7 +12,7 @@
 #include <math.h>
 
 #include "filter.h"
-#include "frame.h"
+#include "mythframe.h"
 
 /*
   Disabled conversion filter Oct 2, 2006 -- dtk
diff --git a/mythtv/filters/crop/filter_crop.c b/mythtv/filters/crop/filter_crop.c
index 491ee53..610dfa8 100644
--- a/mythtv/filters/crop/filter_crop.c
+++ b/mythtv/filters/crop/filter_crop.c
@@ -18,7 +18,7 @@
 #include <string.h>
 
 #include "filter.h"
-#include "frame.h"
+#include "mythframe.h"
 #include "libavutil/mem.h"
 #include "libavcodec/dsputil.h"
 
diff --git a/mythtv/filters/denoise3d/filter_denoise3d.c b/mythtv/filters/denoise3d/filter_denoise3d.c
index 108874a..18172d1 100644
--- a/mythtv/filters/denoise3d/filter_denoise3d.c
+++ b/mythtv/filters/denoise3d/filter_denoise3d.c
@@ -16,7 +16,7 @@
 #include <math.h>
 
 #include "filter.h"
-#include "frame.h"
+#include "mythframe.h"
 #include "../mm_arch.h"
 
 #define PARAM1_DEFAULT 4.0
diff --git a/mythtv/filters/fieldorder/filter_fieldorder.c b/mythtv/filters/fieldorder/filter_fieldorder.c
index 6a9b500..a562e8e 100644
--- a/mythtv/filters/fieldorder/filter_fieldorder.c
+++ b/mythtv/filters/fieldorder/filter_fieldorder.c
@@ -17,7 +17,7 @@
 #include <math.h>
 
 #include "filter.h"
-#include "frame.h"
+#include "mythframe.h"
 
 #define NREFS 2
 #define NCHANS 3
diff --git a/mythtv/filters/force/filter_force.c b/mythtv/filters/force/filter_force.c
index 22695ce..6cdf016 100644
--- a/mythtv/filters/force/filter_force.c
+++ b/mythtv/filters/force/filter_force.c
@@ -4,7 +4,7 @@
 
 #include <stdlib.h>
 #include "filter.h"
-#include "frame.h"
+#include "mythframe.h"
 
 static VideoFilter *
 new_force_template (VideoFrameType inpixfmt, VideoFrameType outpixfmt,
diff --git a/mythtv/filters/greedyhdeint/filter_greedyhdeint.c b/mythtv/filters/greedyhdeint/filter_greedyhdeint.c
index 29f975a..9ed8073 100644
--- a/mythtv/filters/greedyhdeint/filter_greedyhdeint.c
+++ b/mythtv/filters/greedyhdeint/filter_greedyhdeint.c
@@ -16,7 +16,7 @@
 #include <math.h>
 
 #include "filter.h"
-#include "frame.h"
+#include "mythframe.h"
 
 #include "../mm_arch.h"
 
diff --git a/mythtv/filters/invert/filter_invert.c b/mythtv/filters/invert/filter_invert.c
index c2550c8..3021cac 100644
--- a/mythtv/filters/invert/filter_invert.c
+++ b/mythtv/filters/invert/filter_invert.c
@@ -7,7 +7,7 @@
 #include <unistd.h>
 
 #include "filter.h"
-#include "frame.h"
+#include "mythframe.h"
 
 typedef struct ThisFilter
 {
diff --git a/mythtv/filters/ivtc/filter_ivtc.c b/mythtv/filters/ivtc/filter_ivtc.c
index c192c63..904ea64 100644
--- a/mythtv/filters/ivtc/filter_ivtc.c
+++ b/mythtv/filters/ivtc/filter_ivtc.c
@@ -13,7 +13,7 @@
 
 #include "config.h"
 #include "filter.h"
-#include "frame.h"
+#include "mythframe.h"
 
 #include "pullup.h"
 
diff --git a/mythtv/filters/kerneldeint/filter_kerneldeint.c b/mythtv/filters/kerneldeint/filter_kerneldeint.c
index f4bf00f..facea27 100644
--- a/mythtv/filters/kerneldeint/filter_kerneldeint.c
+++ b/mythtv/filters/kerneldeint/filter_kerneldeint.c
@@ -14,7 +14,7 @@
 #include <pthread.h>
 
 #include "filter.h"
-#include "frame.h"
+#include "mythframe.h"
 
 #include "mythlogging.h"
 
diff --git a/mythtv/filters/linearblend/filter_linearblend.c b/mythtv/filters/linearblend/filter_linearblend.c
index 55e9de0..a99c898 100644
--- a/mythtv/filters/linearblend/filter_linearblend.c
+++ b/mythtv/filters/linearblend/filter_linearblend.c
@@ -21,7 +21,7 @@
 #define PAVGUSB(a,b) "pavgusb " #a ", " #b " \n\t"
 
 #include "filter.h"
-#include "frame.h"
+#include "mythframe.h"
 
 typedef struct LBFilter
 {
diff --git a/mythtv/filters/onefield/filter_onefield.c b/mythtv/filters/onefield/filter_onefield.c
index 92930ea..de857a9 100644
--- a/mythtv/filters/onefield/filter_onefield.c
+++ b/mythtv/filters/onefield/filter_onefield.c
@@ -12,7 +12,7 @@
 #include <string.h>
 
 #include "filter.h"
-#include "frame.h"
+#include "mythframe.h"
 
 typedef struct OFFilter
 {
diff --git a/mythtv/filters/postprocess/filter_postprocess.c b/mythtv/filters/postprocess/filter_postprocess.c
index fed38bd..c089db4 100644
--- a/mythtv/filters/postprocess/filter_postprocess.c
+++ b/mythtv/filters/postprocess/filter_postprocess.c
@@ -14,7 +14,7 @@
 
 #include "libavcodec/avcodec.h"
 #include "filter.h"
-#include "frame.h"
+#include "mythframe.h"
 #include "libpostproc/postprocess.h"
 
 //static const char FILTER_NAME[] = "PostProcess";
diff --git a/mythtv/filters/quickdnr/filter_quickdnr.c b/mythtv/filters/quickdnr/filter_quickdnr.c
index da4b5b2..2ee633a 100644
--- a/mythtv/filters/quickdnr/filter_quickdnr.c
+++ b/mythtv/filters/quickdnr/filter_quickdnr.c
@@ -21,7 +21,7 @@
 #include <string.h>
 
 #include "filter.h"
-#include "frame.h"
+#include "mythframe.h"
 #include "libavutil/mem.h"
 #include "libavcodec/dsputil.h"
 
diff --git a/mythtv/filters/vflip/filter_vflip.c b/mythtv/filters/vflip/filter_vflip.c
index 23f182d..4e55519 100644
--- a/mythtv/filters/vflip/filter_vflip.c
+++ b/mythtv/filters/vflip/filter_vflip.c
@@ -7,7 +7,7 @@
 #include <unistd.h>
 
 #include "filter.h"
-#include "frame.h"
+#include "mythframe.h"
 
 typedef struct ThisFilter
 {
diff --git a/mythtv/filters/yadif/filter_yadif.c b/mythtv/filters/yadif/filter_yadif.c
index b98383d..975d463 100644
--- a/mythtv/filters/yadif/filter_yadif.c
+++ b/mythtv/filters/yadif/filter_yadif.c
@@ -34,7 +34,7 @@
 #include <pthread.h>
 
 #include "filter.h"
-#include "frame.h"
+#include "mythframe.h"
 
 #define MIN(a,b) ((a) > (b) ? (b) : (a))
 #define MAX(a,b) ((a) < (b) ? (b) : (a))
diff --git a/mythtv/libs/libmythtv/HLS/httplivestream.h b/mythtv/libs/libmythtv/HLS/httplivestream.h
index 856e202..dd3519b 100644
--- a/mythtv/libs/libmythtv/HLS/httplivestream.h
+++ b/mythtv/libs/libmythtv/HLS/httplivestream.h
@@ -5,7 +5,7 @@
 
 #include "datacontracts/liveStreamInfoList.h"
 
-#include "frame.h"
+#include "mythframe.h"
 
 typedef enum {
     kHLSStatusUndefined    = -1,
diff --git a/mythtv/libs/libmythtv/avformatdecoder.h b/mythtv/libs/libmythtv/avformatdecoder.h
index ed3d407..8a0f04b 100644
--- a/mythtv/libs/libmythtv/avformatdecoder.h
+++ b/mythtv/libs/libmythtv/avformatdecoder.h
@@ -21,7 +21,7 @@
 #include "mythplayer.h"
 
 extern "C" {
-#include "frame.h"
+#include "mythframe.h"
 #include "libavcodec/avcodec.h"
 #include "libavformat/avformat.h"
 #include "libavcodec/audioconvert.h"
diff --git a/mythtv/libs/libmythtv/dummydecoder.h b/mythtv/libs/libmythtv/dummydecoder.h
index 7af47be..dadb746 100644
--- a/mythtv/libs/libmythtv/dummydecoder.h
+++ b/mythtv/libs/libmythtv/dummydecoder.h
@@ -4,10 +4,7 @@
 #include "programinfo.h"
 #include "format.h"
 #include "decoderbase.h"
-
-extern "C" {
-#include "frame.h"
-}
+#include "mythframe.h"
 
 class DummyDecoder : public DecoderBase
 {
diff --git a/mythtv/libs/libmythtv/filewriterbase.h b/mythtv/libs/libmythtv/filewriterbase.h
index 30ce5f3..15eb623 100644
--- a/mythtv/libs/libmythtv/filewriterbase.h
+++ b/mythtv/libs/libmythtv/filewriterbase.h
@@ -3,7 +3,7 @@
 
 #include <QString>
 
-#include "frame.h"
+#include "mythframe.h"
 #include "audiooutputsettings.h"
 
 class MTV_PUBLIC FileWriterBase
diff --git a/mythtv/libs/libmythtv/filter.h b/mythtv/libs/libmythtv/filter.h
index c46eece..1d8c474 100644
--- a/mythtv/libs/libmythtv/filter.h
+++ b/mythtv/libs/libmythtv/filter.h
@@ -5,7 +5,7 @@
 #ifndef _FILTER_H
 #define _FILTER_H
 
-#include "frame.h"
+#include "mythframe.h"
 
 #ifdef __cplusplus
 extern "C" {
diff --git a/mythtv/libs/libmythtv/filtermanager.h b/mythtv/libs/libmythtv/filtermanager.h
index 65c950d..066518e 100644
--- a/mythtv/libs/libmythtv/filtermanager.h
+++ b/mythtv/libs/libmythtv/filtermanager.h
@@ -2,7 +2,7 @@
 #define FILTERMANAGER
 
 #include "filter.h"
-#include "frame.h"
+#include "mythframe.h"
 
 // C++ headers
 #include <vector>
diff --git a/mythtv/libs/libmythtv/frame.h b/mythtv/libs/libmythtv/frame.h
deleted file mode 100644
index 2a08d30..0000000
--- a/mythtv/libs/libmythtv/frame.h
+++ /dev/null
@@ -1,257 +0,0 @@
-#ifndef _FRAME_H
-#define _FRAME_H
-
-#include <string.h>
-#include <stdint.h>
-#include "fourcc.h"
-#include "mythtvexp.h" // for MUNUSED
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-typedef enum FrameType_
-{
-    FMT_NONE = -1,
-    FMT_RGB24 = 0,
-    FMT_YV12,
-    FMT_IA44,
-    FMT_AI44,
-    FMT_ARGB32,
-    FMT_RGBA32,
-    FMT_YUV422P,
-    FMT_BGRA,
-    FMT_VDPAU,
-    FMT_VAAPI,
-    FMT_YUY2,
-    FMT_DXVA2,
-} VideoFrameType;
-
-typedef struct VideoFrame_
-{
-    VideoFrameType codec;
-    unsigned char *buf;
-
-    int width;
-    int height;
-    float aspect;
-    double frame_rate;
-    int bpp;
-    int size;
-
-    long long frameNumber;
-    long long timecode;
-    int64_t   disp_timecode;
-
-    unsigned char *priv[4]; // random empty storage
-
-    unsigned char *qscale_table;
-    int            qstride;
-
-    int interlaced_frame; // 1 if interlaced.
-    int top_field_first; // 1 if top field is first.
-    int repeat_pict;
-    int forcekey; // hardware encoded .nuv
-    int dummy;
-
-    int pitches[3]; // Y, U, & V pitches
-    int offsets[3]; // Y, U, & V offsets
-
-    int pix_fmt;
-    int directrendering; // 1 if managed by FFmpeg
-} VideoFrame;
-
-#ifdef __cplusplus
-}
-#endif
-
-#ifdef __cplusplus
-static inline void init(VideoFrame *vf, VideoFrameType _codec,
-                        unsigned char *_buf, int _width, int _height, int _size,
-                        const int *p = 0,
-                        const int *o = 0,
-                        float _aspect = -1.0f, double _rate = -1.0f) MUNUSED;
-static inline void clear(VideoFrame *vf);
-static inline bool compatible(const VideoFrame *a,
-                              const VideoFrame *b) MUNUSED;
-static inline int  bitsperpixel(VideoFrameType type);
-
-static inline void init(VideoFrame *vf, VideoFrameType _codec,
-                        unsigned char *_buf, int _width, int _height,
-                        int _size, const int *p, const int *o,
-                        float _aspect, double _rate)
-{
-    vf->bpp    = bitsperpixel(_codec);
-    vf->codec  = _codec;
-    vf->buf    = _buf;
-    vf->width  = _width;
-    vf->height = _height;
-    vf->aspect = _aspect;
-    vf->frame_rate = _rate;
-
-    vf->size         = _size;
-    vf->frameNumber  = 0;
-    vf->timecode     = 0;
-
-    vf->qscale_table = 0;
-    vf->qstride      = 0;
-
-    vf->interlaced_frame = 1;
-    vf->top_field_first  = 1;
-    vf->repeat_pict      = 0;
-    vf->forcekey         = 0;
-    vf->dummy            = 0;
-    vf->pix_fmt          = 0;
-    vf->directrendering  = 1;
-
-    memset(vf->priv, 0, 4 * sizeof(unsigned char *));
-
-    if (p)
-    {
-        memcpy(vf->pitches, p, 3 * sizeof(int));
-    }
-    else
-    {
-        if (FMT_YV12 == _codec || FMT_YUV422P == _codec)
-        {
-            vf->pitches[0] = _width;
-            vf->pitches[1] = vf->pitches[2] = _width >> 1;
-        }
-        else
-        {
-            vf->pitches[0] = (_width * vf->bpp) >> 3;
-            vf->pitches[1] = vf->pitches[2] = 0;
-        }
-    }
-
-    if (o)
-    {
-        memcpy(vf->offsets, o, 3 * sizeof(int));
-    }
-    else
-    {
-        if (FMT_YV12 == _codec)
-        {
-            vf->offsets[0] = 0;
-            vf->offsets[1] = _width * _height;
-            vf->offsets[2] = vf->offsets[1] + (vf->offsets[1] >> 2);
-        }
-        else if (FMT_YUV422P == _codec)
-        {
-            vf->offsets[0] = 0;
-            vf->offsets[1] = _width * _height;
-            vf->offsets[2] = vf->offsets[1] + (vf->offsets[1] >> 1);
-        }
-        else
-        {
-            vf->offsets[0] = vf->offsets[1] = vf->offsets[2] = 0;
-        }
-    }
-}
-
-static inline void clear(VideoFrame *vf)
-{
-    if (!vf)
-        return;
-
-    if (FMT_YV12 == vf->codec)
-    {
-        int uv_height = vf->height >> 1;
-        memset(vf->buf + vf->offsets[0],   0, vf->pitches[0] * vf->height);
-        memset(vf->buf + vf->offsets[1], 127, vf->pitches[1] * uv_height);
-        memset(vf->buf + vf->offsets[2], 127, vf->pitches[2] * uv_height);
-    }
-}
-
-static inline bool compatible(const VideoFrame *a, const VideoFrame *b)
-{
-    return a && b &&
-        (a->codec      == b->codec)      &&
-        (a->width      == b->width)      &&
-        (a->height     == b->height)     &&
-        (a->size       == b->size)       &&
-        (a->offsets[0] == b->offsets[0]) &&
-        (a->offsets[1] == b->offsets[1]) &&
-        (a->offsets[2] == b->offsets[2]) &&
-        (a->pitches[0] == b->pitches[0]) &&
-        (a->pitches[1] == b->pitches[1]) &&
-        (a->pitches[2] == b->pitches[2]);
-}
-
-static inline void copy(VideoFrame *dst, const VideoFrame *src)
-{
-    VideoFrameType codec = dst->codec;
-    if (dst->codec != src->codec)
-        return;
-
-    dst->interlaced_frame = src->interlaced_frame;
-    dst->repeat_pict      = src->repeat_pict;
-    dst->top_field_first  = src->top_field_first;
-
-    if (FMT_YV12 == codec)
-    {
-        int height0 = (dst->height < src->height) ? dst->height : src->height;
-        int height1 = height0 >> 1;
-        int height2 = height0 >> 1;
-        int pitch0  = ((dst->pitches[0] < src->pitches[0]) ?
-                       dst->pitches[0] : src->pitches[0]);
-        int pitch1  = ((dst->pitches[1] < src->pitches[1]) ?
-                       dst->pitches[1] : src->pitches[1]);
-        int pitch2  = ((dst->pitches[2] < src->pitches[2]) ?
-                       dst->pitches[2] : src->pitches[2]);
-
-        memcpy(dst->buf + dst->offsets[0],
-               src->buf + src->offsets[0], pitch0 * height0);
-        memcpy(dst->buf + dst->offsets[1],
-               src->buf + src->offsets[1], pitch1 * height1);
-        memcpy(dst->buf + dst->offsets[2],
-               src->buf + src->offsets[2], pitch2 * height2);
-    }
-}
-
-static inline int bitsperpixel(VideoFrameType type)
-{
-    int res = 8;
-    switch (type)
-    {
-        case FMT_BGRA:
-        case FMT_RGBA32:
-        case FMT_ARGB32:
-            res = 32;
-            break;
-        case FMT_RGB24:
-            res = 24;
-            break;
-        case FMT_YUV422P:
-        case FMT_YUY2:
-            res = 16;
-            break;
-        case FMT_YV12:
-            res = 12;
-            break;
-        case FMT_IA44:
-        case FMT_AI44:
-        default:
-            res = 8;
-    }
-    return res;
-}
-
-static inline uint buffersize(VideoFrameType type, int width, int height)
-{
-    int  type_bpp = bitsperpixel(type);
-    uint bpp = type_bpp / 4; /* bits per pixel div common factor */
-    uint bpb =  8 / 4; /* bits per byte div common factor */
-
-    // If the buffer sizes are not a multple of 16, adjust.
-    // old versions of MythTV allowed people to set invalid
-    // dimensions for MPEG-4 capture, no need to segfault..
-    uint adj_w = (width  + 15) & ~0xF;
-    uint adj_h = (height + 15) & ~0xF;
-    return (adj_w * adj_h * bpp + 4/* to round up */) / bpb;
-}
-
-#endif /* __cplusplus */
-
-#endif
-
diff --git a/mythtv/libs/libmythtv/libmythtv.pro b/mythtv/libs/libmythtv/libmythtv.pro
index b9c9e13..37b8455 100644
--- a/mythtv/libs/libmythtv/libmythtv.pro
+++ b/mythtv/libs/libmythtv/libmythtv.pro
@@ -106,7 +106,7 @@ QMAKE_CLEAN += $(TARGET) $(TARGETA) $(TARGETD) $(TARGET0) $(TARGET1) $(TARGET2)
 
 # Headers needed by frontend & backend
 HEADERS += filter.h                 format.h
-HEADERS += frame.h
+HEADERS += mythframe.h
 
 # LZO used by NuppelDecoder & NuppelVideoRecorder
 HEADERS += lzoconf.h
diff --git a/mythtv/libs/libmythtv/mythframe.h b/mythtv/libs/libmythtv/mythframe.h
new file mode 100644
index 0000000..2a08d30
--- /dev/null
+++ b/mythtv/libs/libmythtv/mythframe.h
@@ -0,0 +1,257 @@
+#ifndef _FRAME_H
+#define _FRAME_H
+
+#include <string.h>
+#include <stdint.h>
+#include "fourcc.h"
+#include "mythtvexp.h" // for MUNUSED
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+typedef enum FrameType_
+{
+    FMT_NONE = -1,
+    FMT_RGB24 = 0,
+    FMT_YV12,
+    FMT_IA44,
+    FMT_AI44,
+    FMT_ARGB32,
+    FMT_RGBA32,
+    FMT_YUV422P,
+    FMT_BGRA,
+    FMT_VDPAU,
+    FMT_VAAPI,
+    FMT_YUY2,
+    FMT_DXVA2,
+} VideoFrameType;
+
+typedef struct VideoFrame_
+{
+    VideoFrameType codec;
+    unsigned char *buf;
+
+    int width;
+    int height;
+    float aspect;
+    double frame_rate;
+    int bpp;
+    int size;
+
+    long long frameNumber;
+    long long timecode;
+    int64_t   disp_timecode;
+
+    unsigned char *priv[4]; // random empty storage
+
+    unsigned char *qscale_table;
+    int            qstride;
+
+    int interlaced_frame; // 1 if interlaced.
+    int top_field_first; // 1 if top field is first.
+    int repeat_pict;
+    int forcekey; // hardware encoded .nuv
+    int dummy;
+
+    int pitches[3]; // Y, U, & V pitches
+    int offsets[3]; // Y, U, & V offsets
+
+    int pix_fmt;
+    int directrendering; // 1 if managed by FFmpeg
+} VideoFrame;
+
+#ifdef __cplusplus
+}
+#endif
+
+#ifdef __cplusplus
+static inline void init(VideoFrame *vf, VideoFrameType _codec,
+                        unsigned char *_buf, int _width, int _height, int _size,
+                        const int *p = 0,
+                        const int *o = 0,
+                        float _aspect = -1.0f, double _rate = -1.0f) MUNUSED;
+static inline void clear(VideoFrame *vf);
+static inline bool compatible(const VideoFrame *a,
+                              const VideoFrame *b) MUNUSED;
+static inline int  bitsperpixel(VideoFrameType type);
+
+static inline void init(VideoFrame *vf, VideoFrameType _codec,
+                        unsigned char *_buf, int _width, int _height,
+                        int _size, const int *p, const int *o,
+                        float _aspect, double _rate)
+{
+    vf->bpp    = bitsperpixel(_codec);
+    vf->codec  = _codec;
+    vf->buf    = _buf;
+    vf->width  = _width;
+    vf->height = _height;
+    vf->aspect = _aspect;
+    vf->frame_rate = _rate;
+
+    vf->size         = _size;
+    vf->frameNumber  = 0;
+    vf->timecode     = 0;
+
+    vf->qscale_table = 0;
+    vf->qstride      = 0;
+
+    vf->interlaced_frame = 1;
+    vf->top_field_first  = 1;
+    vf->repeat_pict      = 0;
+    vf->forcekey         = 0;
+    vf->dummy            = 0;
+    vf->pix_fmt          = 0;
+    vf->directrendering  = 1;
+
+    memset(vf->priv, 0, 4 * sizeof(unsigned char *));
+
+    if (p)
+    {
+        memcpy(vf->pitches, p, 3 * sizeof(int));
+    }
+    else
+    {
+        if (FMT_YV12 == _codec || FMT_YUV422P == _codec)
+        {
+            vf->pitches[0] = _width;
+            vf->pitches[1] = vf->pitches[2] = _width >> 1;
+        }
+        else
+        {
+            vf->pitches[0] = (_width * vf->bpp) >> 3;
+            vf->pitches[1] = vf->pitches[2] = 0;
+        }
+    }
+
+    if (o)
+    {
+        memcpy(vf->offsets, o, 3 * sizeof(int));
+    }
+    else
+    {
+        if (FMT_YV12 == _codec)
+        {
+            vf->offsets[0] = 0;
+            vf->offsets[1] = _width * _height;
+            vf->offsets[2] = vf->offsets[1] + (vf->offsets[1] >> 2);
+        }
+        else if (FMT_YUV422P == _codec)
+        {
+            vf->offsets[0] = 0;
+            vf->offsets[1] = _width * _height;
+            vf->offsets[2] = vf->offsets[1] + (vf->offsets[1] >> 1);
+        }
+        else
+        {
+            vf->offsets[0] = vf->offsets[1] = vf->offsets[2] = 0;
+        }
+    }
+}
+
+static inline void clear(VideoFrame *vf)
+{
+    if (!vf)
+        return;
+
+    if (FMT_YV12 == vf->codec)
+    {
+        int uv_height = vf->height >> 1;
+        memset(vf->buf + vf->offsets[0],   0, vf->pitches[0] * vf->height);
+        memset(vf->buf + vf->offsets[1], 127, vf->pitches[1] * uv_height);
+        memset(vf->buf + vf->offsets[2], 127, vf->pitches[2] * uv_height);
+    }
+}
+
+static inline bool compatible(const VideoFrame *a, const VideoFrame *b)
+{
+    return a && b &&
+        (a->codec      == b->codec)      &&
+        (a->width      == b->width)      &&
+        (a->height     == b->height)     &&
+        (a->size       == b->size)       &&
+        (a->offsets[0] == b->offsets[0]) &&
+        (a->offsets[1] == b->offsets[1]) &&
+        (a->offsets[2] == b->offsets[2]) &&
+        (a->pitches[0] == b->pitches[0]) &&
+        (a->pitches[1] == b->pitches[1]) &&
+        (a->pitches[2] == b->pitches[2]);
+}
+
+static inline void copy(VideoFrame *dst, const VideoFrame *src)
+{
+    VideoFrameType codec = dst->codec;
+    if (dst->codec != src->codec)
+        return;
+
+    dst->interlaced_frame = src->interlaced_frame;
+    dst->repeat_pict      = src->repeat_pict;
+    dst->top_field_first  = src->top_field_first;
+
+    if (FMT_YV12 == codec)
+    {
+        int height0 = (dst->height < src->height) ? dst->height : src->height;
+        int height1 = height0 >> 1;
+        int height2 = height0 >> 1;
+        int pitch0  = ((dst->pitches[0] < src->pitches[0]) ?
+                       dst->pitches[0] : src->pitches[0]);
+        int pitch1  = ((dst->pitches[1] < src->pitches[1]) ?
+                       dst->pitches[1] : src->pitches[1]);
+        int pitch2  = ((dst->pitches[2] < src->pitches[2]) ?
+                       dst->pitches[2] : src->pitches[2]);
+
+        memcpy(dst->buf + dst->offsets[0],
+               src->buf + src->offsets[0], pitch0 * height0);
+        memcpy(dst->buf + dst->offsets[1],
+               src->buf + src->offsets[1], pitch1 * height1);
+        memcpy(dst->buf + dst->offsets[2],
+               src->buf + src->offsets[2], pitch2 * height2);
+    }
+}
+
+static inline int bitsperpixel(VideoFrameType type)
+{
+    int res = 8;
+    switch (type)
+    {
+        case FMT_BGRA:
+        case FMT_RGBA32:
+        case FMT_ARGB32:
+            res = 32;
+            break;
+        case FMT_RGB24:
+            res = 24;
+            break;
+        case FMT_YUV422P:
+        case FMT_YUY2:
+            res = 16;
+            break;
+        case FMT_YV12:
+            res = 12;
+            break;
+        case FMT_IA44:
+        case FMT_AI44:
+        default:
+            res = 8;
+    }
+    return res;
+}
+
+static inline uint buffersize(VideoFrameType type, int width, int height)
+{
+    int  type_bpp = bitsperpixel(type);
+    uint bpp = type_bpp / 4; /* bits per pixel div common factor */
+    uint bpb =  8 / 4; /* bits per byte div common factor */
+
+    // If the buffer sizes are not a multple of 16, adjust.
+    // old versions of MythTV allowed people to set invalid
+    // dimensions for MPEG-4 capture, no need to segfault..
+    uint adj_w = (width  + 15) & ~0xF;
+    uint adj_h = (height + 15) & ~0xF;
+    return (adj_w * adj_h * bpp + 4/* to round up */) / bpb;
+}
+
+#endif /* __cplusplus */
+
+#endif
+
diff --git a/mythtv/libs/libmythtv/nuppeldecoder.h b/mythtv/libs/libmythtv/nuppeldecoder.h
index 7bb1190..896f7ea 100644
--- a/mythtv/libs/libmythtv/nuppeldecoder.h
+++ b/mythtv/libs/libmythtv/nuppeldecoder.h
@@ -10,11 +10,11 @@ using namespace std;
 
 #include "format.h"
 #include "decoderbase.h"
+#include "mythframe.h"
 
 #include "RTjpegN.h"
 
 extern "C" {
-#include "frame.h"
 #include "libavcodec/avcodec.h"
 }
 
diff --git a/mythtv/libs/libmythtv/privatedecoder_crystalhd.h b/mythtv/libs/libmythtv/privatedecoder_crystalhd.h
index e57abed..086074b 100644
--- a/mythtv/libs/libmythtv/privatedecoder_crystalhd.h
+++ b/mythtv/libs/libmythtv/privatedecoder_crystalhd.h
@@ -11,7 +11,7 @@ typedef void                *HANDLE;
 #endif
 #endif
 
-#include "frame.h"
+#include "mythframe.h"
 #include <libcrystalhd/bc_dts_types.h>
 #include <libcrystalhd/bc_dts_defs.h>
 #include <libcrystalhd/libcrystalhd_if.h>
diff --git a/mythtv/libs/libmythtv/privatedecoder_vda.cpp b/mythtv/libs/libmythtv/privatedecoder_vda.cpp
index dac2067..2339c6d 100644
--- a/mythtv/libs/libmythtv/privatedecoder_vda.cpp
+++ b/mythtv/libs/libmythtv/privatedecoder_vda.cpp
@@ -5,7 +5,7 @@
 #define LOC QString("VDADec: ")
 #define ERR QString("VDADec error: ")
 
-#include "frame.h"
+#include "mythframe.h"
 #include "myth_imgconvert.h"
 #include "util-osx-cocoa.h"
 #include "privatedecoder_vda.h"
diff --git a/mythtv/libs/libmythtv/util-osd.h b/mythtv/libs/libmythtv/util-osd.h
index 17ff80c..5f75242 100644
--- a/mythtv/libs/libmythtv/util-osd.h
+++ b/mythtv/libs/libmythtv/util-osd.h
@@ -3,7 +3,7 @@
 
 #include "mythlogging.h"
 #include "mythimage.h"
-#include "frame.h"
+#include "mythframe.h"
 
 #define ALIGN_C 2
 #ifdef MMX
diff --git a/mythtv/libs/libmythtv/vaapicontext.cpp b/mythtv/libs/libmythtv/vaapicontext.cpp
index 4adff42..c7aa09d 100644
--- a/mythtv/libs/libmythtv/vaapicontext.cpp
+++ b/mythtv/libs/libmythtv/vaapicontext.cpp
@@ -2,7 +2,7 @@
 #include "mythlogging.h"
 #include "mythxdisplay.h"
 #include "mythcodecid.h"
-#include "frame.h"
+#include "mythframe.h"
 #include "vaapicontext.h"
 #include "mythmainwindow.h"
 #include "myth_imgconvert.h"
diff --git a/mythtv/libs/libmythtv/vbi608extractor.h b/mythtv/libs/libmythtv/vbi608extractor.h
index 7d03e7f..8a35b6a 100644
--- a/mythtv/libs/libmythtv/vbi608extractor.h
+++ b/mythtv/libs/libmythtv/vbi608extractor.h
@@ -24,7 +24,7 @@
 
 #include <QList>
 
-#include "frame.h"
+#include "mythframe.h"
 
 class VBI608Extractor
 {
diff --git a/mythtv/libs/libmythtv/videobuffers.h b/mythtv/libs/libmythtv/videobuffers.h
index 1d45b7e..465deae 100644
--- a/mythtv/libs/libmythtv/videobuffers.h
+++ b/mythtv/libs/libmythtv/videobuffers.h
@@ -3,9 +3,6 @@
 #ifndef __VIDEOBUFFERS_H__
 #define __VIDEOBUFFERS_H__
 
-extern "C" {
-#include "frame.h"
-}
 #include <vector>
 #include <map>
 using namespace std;
@@ -14,6 +11,7 @@ using namespace std;
 #include <QString>
 #include <QWaitCondition>
 
+#include "mythframe.h"
 #include "mythdeque.h"
 
 #ifdef USING_X11
diff --git a/mythtv/libs/libmythtv/videooutbase.h b/mythtv/libs/libmythtv/videooutbase.h
index de1d789..5602563 100644
--- a/mythtv/libs/libmythtv/videooutbase.h
+++ b/mythtv/libs/libmythtv/videooutbase.h
@@ -3,7 +3,7 @@
 #ifndef VIDEOOUTBASE_H_
 #define VIDEOOUTBASE_H_
 
-#include "frame.h"
+#include "mythframe.h"
 #include "filter.h"
 
 #include <QSize>
diff --git a/mythtv/programs/mythcommflag/CannyEdgeDetector.cpp b/mythtv/programs/mythcommflag/CannyEdgeDetector.cpp
index 29d3a91..2b50e35 100644
--- a/mythtv/programs/mythcommflag/CannyEdgeDetector.cpp
+++ b/mythtv/programs/mythcommflag/CannyEdgeDetector.cpp
@@ -3,7 +3,7 @@
 
 // MythTV headers
 #include "mythplayer.h"
-#include "frame.h"          // VideoFrame
+#include "mythframe.h"          // VideoFrame
 #include "mythlogging.h"
 
 // Commercial Flagging headers
diff --git a/mythtv/programs/mythcommflag/ClassicCommDetector.h b/mythtv/programs/mythcommflag/ClassicCommDetector.h
index f9e5c4c..a86ab27 100644
--- a/mythtv/programs/mythcommflag/ClassicCommDetector.h
+++ b/mythtv/programs/mythcommflag/ClassicCommDetector.h
@@ -11,7 +11,7 @@
 
 // MythTV headers
 #include "programinfo.h"
-#include "frame.h"
+#include "mythframe.h"
 
 // Commercial Flagging headers
 #include "CommDetectorBase.h"
diff --git a/mythtv/programs/mythcommflag/EdgeDetector.cpp b/mythtv/programs/mythcommflag/EdgeDetector.cpp
index ea5f26f..a0be23f 100644
--- a/mythtv/programs/mythcommflag/EdgeDetector.cpp
+++ b/mythtv/programs/mythcommflag/EdgeDetector.cpp
@@ -13,7 +13,7 @@ extern "C" {
 }
 
 // MythTV headers
-#include "frame.h"          // VideoFrame
+#include "mythframe.h"          // VideoFrame
 #include "mythplayer.h"
 
 // Commercial Flagging headers
diff --git a/mythtv/programs/mythcommflag/PGMConverter.cpp b/mythtv/programs/mythcommflag/PGMConverter.cpp
index 370520f..324f82c 100644
--- a/mythtv/programs/mythcommflag/PGMConverter.cpp
+++ b/mythtv/programs/mythcommflag/PGMConverter.cpp
@@ -7,7 +7,7 @@
 // MythTV headers
 #include "mythlogging.h"
 #include "mythplayer.h"
-#include "frame.h"          /* VideoFrame */
+#include "mythframe.h"          /* VideoFrame */
 
 // Commercial Flagging headers
 #include "CommDetector2.h"
diff --git a/mythtv/programs/mythcommflag/TemplateFinder.cpp b/mythtv/programs/mythcommflag/TemplateFinder.cpp
index b4f96fc..00b0336 100644
--- a/mythtv/programs/mythcommflag/TemplateFinder.cpp
+++ b/mythtv/programs/mythcommflag/TemplateFinder.cpp
@@ -13,7 +13,7 @@
 // MythTV headers
 #include "mythplayer.h"
 #include "mythcorecontext.h"    /* gContext */
-#include "frame.h"          /* VideoFrame */
+#include "mythframe.h"          /* VideoFrame */
 #include "mythdate.h"
 #include "mythsystemlegacy.h"
 #include "exitcodes.h"
diff --git a/mythtv/programs/mythcommflag/pgm.cpp b/mythtv/programs/mythcommflag/pgm.cpp
index d13f375..4593cc2 100644
--- a/mythtv/programs/mythcommflag/pgm.cpp
+++ b/mythtv/programs/mythcommflag/pgm.cpp
@@ -5,7 +5,7 @@
 extern "C" {
 #include "libavcodec/avcodec.h"
 }
-#include "frame.h"
+#include "mythframe.h"
 #include "mythlogging.h"
 #include "myth_imgconvert.h"
 #include "pgm.h"
-- 
1.7.10.2

