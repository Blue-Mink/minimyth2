diff -Naur mythtv-0.27-20140402-gb10d885-old/mythtv/libs/libmythtv/HLS/httplivestreambuffer.cpp mythtv-0.27-20140402-gb10d885-new/mythtv/libs/libmythtv/HLS/httplivestreambuffer.cpp
--- mythtv-0.27-20140402-gb10d885-old/mythtv/libs/libmythtv/HLS/httplivestreambuffer.cpp	2014-04-03 10:32:34.290091792 +0200
+++ mythtv-0.27-20140402-gb10d885-new/mythtv/libs/libmythtv/HLS/httplivestreambuffer.cpp	2014-04-03 10:32:50.993616087 +0200
@@ -2781,7 +2781,7 @@
     return (int)((size * 1000.0) / byterate);
 }
 
-long long HLSRingBuffer::GetRealFileSize(void) const
+long long HLSRingBuffer::GetRealFileSizeInternal(void) const
 {
     QReadLocker lock(&rwlock);
     return SizeMedia();
diff -Naur mythtv-0.27-20140402-gb10d885-old/mythtv/libs/libmythtv/HLS/httplivestreambuffer.h mythtv-0.27-20140402-gb10d885-new/mythtv/libs/libmythtv/HLS/httplivestreambuffer.h
--- mythtv-0.27-20140402-gb10d885-old/mythtv/libs/libmythtv/HLS/httplivestreambuffer.h	2014-04-03 10:32:34.290091792 +0200
+++ mythtv-0.27-20140402-gb10d885-new/mythtv/libs/libmythtv/HLS/httplivestreambuffer.h	2014-04-03 10:32:51.220285340 +0200
@@ -52,7 +52,6 @@
     virtual bool OpenFile(const QString &lfilename,
                           uint retry_ms = kDefaultOpenTimeout);
     virtual long long Seek(long long pos, int whence, bool has_lock);
-    virtual long long GetRealFileSize(void) const;
     virtual bool IsStreamed(void)           { return false;   }
     virtual bool IsSeekingAllowed(void)     { return !m_error; }
     virtual bool IsBookmarkAllowed(void)    { return true; }
@@ -67,6 +66,7 @@
 
 protected:
     virtual int safe_read(void *data, uint i_read);
+    virtual long long GetRealFileSizeInternal(void) const;
 
 private:
     void FreeStreamsList(QList<HLSStream*> *streams) const;
diff -Naur mythtv-0.27-20140402-gb10d885-old/mythtv/libs/libmythtv/avformatdecoder.cpp mythtv-0.27-20140402-gb10d885-new/mythtv/libs/libmythtv/avformatdecoder.cpp
--- mythtv-0.27-20140402-gb10d885-old/mythtv/libs/libmythtv/avformatdecoder.cpp	2014-04-03 10:32:34.296758535 +0200
+++ mythtv-0.27-20140402-gb10d885-new/mythtv/libs/libmythtv/avformatdecoder.cpp	2014-04-03 10:32:51.230285459 +0200
@@ -855,7 +855,8 @@
                                                      AVFRingBuffer::AVF_Write_Packet,
                                                      AVFRingBuffer::AVF_Seek_Packet);
 
-    ic->pb->seekable            = !streamed;
+    // We can always seek during LiveTV
+    ic->pb->seekable            = !streamed || ringBuffer->LiveMode();
     LOG(VB_PLAYBACK, LOG_INFO, LOC + QString("Buffer size: %1, streamed %2")
         .arg(buf_size).arg(streamed));
 }
@@ -912,10 +913,8 @@
     // Suppress ffmpeg logging unless "-v libav --loglevel debug"
     if (!VERBOSE_LEVEL_CHECK(VB_LIBAV, LOG_DEBUG))
         silence_ffmpeg_logging = true;
-    avfRingBuffer->SetInInit(ringBuffer->IsStreamed());
     int retval = avformat_find_stream_info(ic, NULL);
     silence_ffmpeg_logging = false;
-    avfRingBuffer->SetInInit(false);
     return retval;
 }
 
@@ -961,6 +960,8 @@
     else
         probe.buf_size = kDecoderProbeBufferSize - AVPROBE_PADDING_SIZE;
 
+    avfRingBuffer->SetInInit(ringBuffer->LiveMode());
+
     fmt = av_probe_input_format(&probe, true);
     if (!fmt)
     {
@@ -1020,6 +1021,7 @@
     }
 
     int ret = FindStreamInfo();
+    avfRingBuffer->SetInInit(false);
     if (ret < 0)
     {
         LOG(VB_GENERAL, LOG_ERR, LOC + "Could not find codec parameters. " +
diff -Naur mythtv-0.27-20140402-gb10d885-old/mythtv/libs/libmythtv/avfringbuffer.cpp mythtv-0.27-20140402-gb10d885-new/mythtv/libs/libmythtv/avfringbuffer.cpp
--- mythtv-0.27-20140402-gb10d885-old/mythtv/libs/libmythtv/avfringbuffer.cpp	2014-04-03 10:32:34.293425163 +0200
+++ mythtv-0.27-20140402-gb10d885-new/mythtv/libs/libmythtv/avfringbuffer.cpp	2014-04-03 10:32:51.250285686 +0200
@@ -41,11 +41,7 @@
         return 0;
 
     if (whence == AVSEEK_SIZE)
-    {
-        if (avfr->IsInInit())
-            return INT64_MAX >> 4;
         return avfr->GetRingBuffer()->GetRealFileSize();
-    }
 
     if (whence == SEEK_END)
         return avfr->GetRingBuffer()->GetRealFileSize() + offset;
@@ -103,4 +99,11 @@
     return &m_avfrURL;
 }
 
+void AVFRingBuffer::SetInInit(bool state)
+{
+    m_initState = state;
+
+    GetRingBuffer()->SetReadInternalMode(state);
+}
+
 /* vim: set expandtab tabstop=4 shiftwidth=4: */
diff -Naur mythtv-0.27-20140402-gb10d885-old/mythtv/libs/libmythtv/avfringbuffer.h mythtv-0.27-20140402-gb10d885-new/mythtv/libs/libmythtv/avfringbuffer.h
--- mythtv-0.27-20140402-gb10d885-old/mythtv/libs/libmythtv/avfringbuffer.h	2014-04-03 10:32:34.293425163 +0200
+++ mythtv-0.27-20140402-gb10d885-new/mythtv/libs/libmythtv/avfringbuffer.h	2014-04-03 10:32:51.283619401 +0200
@@ -32,7 +32,7 @@
     static int          AVF_Write(URLContext *h, const uint8_t *buf, int buf_size);
     static int64_t      AVF_Seek(URLContext *h, int64_t offset, int whence);
     static int          AVF_Close(URLContext *h);
-    void                SetInInit(bool state) { m_initState = state; }
+    void                SetInInit(bool state);
     bool                IsInInit(void) { return m_initState; }
 
 private:
diff -Naur mythtv-0.27-20140402-gb10d885-old/mythtv/libs/libmythtv/fileringbuffer.cpp mythtv-0.27-20140402-gb10d885-new/mythtv/libs/libmythtv/fileringbuffer.cpp
--- mythtv-0.27-20140402-gb10d885-old/mythtv/libs/libmythtv/fileringbuffer.cpp	2014-04-03 10:32:34.290091792 +0200
+++ mythtv-0.27-20140402-gb10d885-new/mythtv/libs/libmythtv/fileringbuffer.cpp	2014-04-03 10:32:51.323619858 +0200
@@ -379,7 +379,6 @@
     commserror = false;
     numfailures = 0;
 
-    rawbitrate = 800;
     CalcReadAheadThresh();
 
     bool ok = fd2 >= 0 || remotefile;
@@ -585,7 +584,7 @@
     return ret;
 }
 
-long long FileRingBuffer::GetRealFileSize(void) const
+long long FileRingBuffer::GetRealFileSizeInternal(void) const
 {
     rwlock.lockForRead();
     long long ret = -1;
@@ -657,7 +656,6 @@
     // only valid for SEEK_SET & SEEK_CUR
     long long new_pos = (SEEK_SET==whence) ? pos : readpos + pos;
 
-#if 1
     // Optimize short seeks where the data for
     // them is in our ringbuffer already.
     if (readaheadrunning &&
@@ -671,15 +669,16 @@
                 .arg(rbrpos).arg(rbwpos)
                 .arg(readpos).arg(internalreadpos));
         bool used_opt = false;
-        if ((new_pos < readpos))
+        if ((new_pos < readpos - readOffset))
         {
+            // Seeking to earlier than current buffer's start, but still in buffer
             int min_safety = max(fill_min, readblocksize);
             int free = ((rbwpos >= rbrpos) ?
                         rbrpos + bufferSize : rbrpos) - rbwpos;
             int internal_backbuf =
                 (rbwpos >= rbrpos) ? rbrpos : rbrpos - rbwpos;
             internal_backbuf = min(internal_backbuf, free - min_safety);
-            long long sba = readpos - new_pos;
+            long long sba = (readpos - readOffset) - new_pos;
             LOG(VB_FILE, LOG_INFO, LOC +
                 QString("Seek(): internal_backbuf: %1 sba: %2")
                     .arg(internal_backbuf).arg(sba));
@@ -687,6 +686,7 @@
             {
                 rbrpos = (rbrpos>=sba) ? rbrpos - sba :
                     bufferSize + rbrpos - sba;
+                readOffset = 0;
                 used_opt = true;
                 LOG(VB_FILE, LOG_INFO, LOC +
                     QString("Seek(): OPT1 rbrpos: %1 rbwpos: %2"
@@ -695,9 +695,16 @@
                         .arg(new_pos).arg(internalreadpos));
             }
         }
-        else if ((new_pos >= readpos) && (new_pos <= internalreadpos))
+        else if ((new_pos >= (readpos - readOffset)) && (new_pos <= internalreadpos))
         {
-            rbrpos = (rbrpos + (new_pos - readpos)) % bufferSize;
+            if (readInternalMode)
+            {
+                readOffset += new_pos - readpos;
+            }
+            else
+            {
+                rbrpos = (rbrpos + (new_pos - readpos)) % bufferSize;
+            }
             used_opt = true;
             LOG(VB_FILE, LOG_INFO, LOC +
                 QString("Seek(): OPT2 rbrpos: %1 sba: %2")
@@ -708,6 +715,15 @@
 
         if (used_opt)
         {
+            if (readInternalMode)
+            {
+                ateof = false;
+                readpos = new_pos;
+                poslock.unlock();
+                if (!has_lock)
+                    rwlock.unlock();
+                return new_pos;
+            }
             if (ignorereadpos >= 0)
             {
                 // seek should always succeed since we were at this position
@@ -745,7 +761,6 @@
             return new_pos;
         }
     }
-#endif
 
 #if 1
     // This optimizes the seek end-250000, read, seek 0, read portion 
diff -Naur mythtv-0.27-20140402-gb10d885-old/mythtv/libs/libmythtv/fileringbuffer.h mythtv-0.27-20140402-gb10d885-new/mythtv/libs/libmythtv/fileringbuffer.h
--- mythtv-0.27-20140402-gb10d885-old/mythtv/libs/libmythtv/fileringbuffer.h	2014-04-03 10:32:34.293425163 +0200
+++ mythtv-0.27-20140402-gb10d885-new/mythtv/libs/libmythtv/fileringbuffer.h	2014-04-03 10:32:51.906960114 +0200
@@ -15,7 +15,6 @@
     // Gets
     virtual bool      IsOpen(void)          const;
     virtual long long GetReadPosition(void) const;
-    virtual long long GetRealFileSize(void) const;
 
     // General Commands
     virtual bool OpenFile(const QString &lfilename,
@@ -39,4 +38,5 @@
     }
     int safe_read(int fd, void *data, uint sz);
     int safe_read(RemoteFile *rf, void *data, uint sz);
+    virtual long long GetRealFileSizeInternal(void) const;
 };
diff -Naur mythtv-0.27-20140402-gb10d885-old/mythtv/libs/libmythtv/icringbuffer.cpp mythtv-0.27-20140402-gb10d885-new/mythtv/libs/libmythtv/icringbuffer.cpp
--- mythtv-0.27-20140402-gb10d885-old/mythtv/libs/libmythtv/icringbuffer.cpp	2014-04-03 10:32:34.293425163 +0200
+++ mythtv-0.27-20140402-gb10d885-new/mythtv/libs/libmythtv/icringbuffer.cpp	2014-04-03 10:32:51.916959979 +0200
@@ -159,7 +159,7 @@
     return m_stream ? m_stream->safe_read(data, sz, 1000) : (ateof = true, 0);
 }
 
-long long ICRingBuffer::GetRealFileSize(void) const
+long long ICRingBuffer::GetRealFileSizeInternal(void) const
 {
     return m_stream ? m_stream->GetSize() : -1;
 }
diff -Naur mythtv-0.27-20140402-gb10d885-old/mythtv/libs/libmythtv/icringbuffer.h mythtv-0.27-20140402-gb10d885-new/mythtv/libs/libmythtv/icringbuffer.h
--- mythtv-0.27-20140402-gb10d885-old/mythtv/libs/libmythtv/icringbuffer.h	2014-04-03 10:32:34.293425163 +0200
+++ mythtv-0.27-20140402-gb10d885-new/mythtv/libs/libmythtv/icringbuffer.h	2014-04-03 10:32:51.933626846 +0200
@@ -19,13 +19,13 @@
     virtual bool OpenFile(const QString &url,
                           uint retry_ms = kDefaultOpenTimeout);
     virtual long long Seek(long long pos, int whence, bool has_lock);
-    virtual long long GetRealFileSize(void) const;
     virtual bool IsStreamed(void)       { return false;  }
     virtual bool IsSeekingAllowed(void) { return true; }
     virtual bool IsBookmarkAllowed(void) { return false; }
 
   protected:
     virtual int safe_read(void *data, uint sz);
+    virtual long long GetRealFileSizeInternal(void) const;
 
     // Operations
   public:
diff -Naur mythtv-0.27-20140402-gb10d885-old/mythtv/libs/libmythtv/ringbuffer.cpp mythtv-0.27-20140402-gb10d885-new/mythtv/libs/libmythtv/ringbuffer.cpp
--- mythtv-0.27-20140402-gb10d885-old/mythtv/libs/libmythtv/ringbuffer.cpp	2014-04-03 10:32:34.296758535 +0200
+++ mythtv-0.27-20140402-gb10d885-new/mythtv/libs/libmythtv/ringbuffer.cpp	2014-04-03 10:32:51.950293692 +0200
@@ -206,13 +206,15 @@
     request_pause(false),     paused(false),
     ateof(false),             readsallowed(false),
     setswitchtonext(false),
-    rawbitrate(800),          playspeed(1.0f),
+    rawbitrate(8000),         playspeed(1.0f),
     fill_threshold(65536),    fill_min(-1),
     readblocksize(CHUNK),     wanttoread(0),
     numfailures(0),           commserror(false),
     oldfile(false),           livetvchain(NULL),
     ignoreliveeof(false),     readAdjust(0),
-    bitrateMonitorEnabled(false)
+    readOffset(0),            readInternalMode(false),
+    bitrateMonitorEnabled(false),
+    bitrateInitialized(false)
 {
     {
         QMutexLocker locker(&subExtLock);
@@ -319,6 +321,7 @@
     rwlock.lockForWrite();
     rawbitrate = raw_bitrate;
     CalcReadAheadThresh();
+    bitrateInitialized = true;
     rwlock.unlock();
 }
 
@@ -391,11 +394,11 @@
     }
     else
     {
-        readblocksize = max(rbs,readblocksize);
+        readblocksize = bitrateInitialized ? max(rbs,readblocksize) : rbs;
     }
 
     // minumum seconds of buffering before allowing read
-    float secs_min = 0.15;
+    float secs_min = 0.30;
     // set the minimum buffering before allowing ffmpeg read
     fill_min  = (uint) ((estbitrate * 1000 * secs_min) * 0.125f);
     // make this a multiple of ffmpeg block size..
@@ -474,6 +477,42 @@
 }
 
 /// \brief Returns number of bytes available for reading from buffer.
+int RingBuffer::GetReadBufAvail(void) const
+{
+    QReadLocker lock(&rwlock);
+
+    return ReadBufAvail();
+}
+
+long long RingBuffer::GetRealFileSize(void) const
+{
+    {
+        QReadLocker lock(&rwlock);
+        if (readInternalMode)
+        {
+            return ReadBufAvail();
+        }
+    }
+
+    return GetRealFileSizeInternal();
+}
+
+bool RingBuffer::SetReadInternalMode(bool mode)
+{
+    QWriteLocker lock(&rwlock);
+    bool old = readInternalMode;
+
+    readInternalMode = mode;
+
+    if (!mode)
+    {
+        // reset the read offset as we are exiting the internal read mode
+        readOffset = 0;
+    }
+    return old;
+}
+
+/// \brief Returns number of bytes available for reading from buffer.
 /// WARNING: Must be called with rwlock in locked state.
 int RingBuffer::ReadBufAvail(void) const
 {
@@ -502,6 +541,9 @@
         QString("ResetReadAhead(internalreadpos = %1->%2)")
             .arg(internalreadpos).arg(newinternal));
 
+    readInternalMode = false;
+    readOffset = 0;
+
     rbrlock.lockForWrite();
     rbwlock.lockForWrite();
 
@@ -1304,7 +1346,8 @@
         return -1;
     }
 
-    if (request_pause || stopreads || !readaheadrunning || (ignorereadpos>=0))
+    if (!readInternalMode &&
+        (request_pause || stopreads || !readaheadrunning || (ignorereadpos>=0)))
     {
         rwlock.unlock();
         rwlock.lockForWrite();
@@ -1338,7 +1381,7 @@
         return 0;
     }
 
-    if (!WaitForAvail(count))
+    if (!readInternalMode && !WaitForAvail(count))
     {
         LOG(VB_FILE, LOG_NOTICE, LOC + loc_desc + ": !WaitForAvail()");
         rwlock.unlock();
@@ -1350,7 +1393,7 @@
         return 0;
     }
 
-    count = min(ReadBufAvail(), count);
+    count = min(ReadBufAvail() - readOffset, count);
 
     if (count <= 0)
     {
@@ -1362,32 +1405,48 @@
         return count;
     }
 
-    if (peek)
+    if (peek || readInternalMode)
         rbrlock.lockForRead();
     else
         rbrlock.lockForWrite();
 
     LOG(VB_FILE, LOG_DEBUG, LOC + loc_desc + " -- copying data");
 
-    if (rbrpos + count > (int) bufferSize)
+    int rpos;
+    if (rbrpos + readOffset > bufferSize)
     {
-        int firstsize = bufferSize - rbrpos;
+        rpos = bufferSize - readOffset;
+    }
+    else
+    {
+        rpos = rbrpos + readOffset;
+    }
+    if (rpos + count > (int) bufferSize)
+    {
+        int firstsize = bufferSize - rpos;
         int secondsize = count - firstsize;
 
-        memcpy(buf, readAheadBuffer + rbrpos, firstsize);
+        memcpy(buf, readAheadBuffer + rpos, firstsize);
         memcpy((char *)buf + firstsize, readAheadBuffer, secondsize);
     }
     else
     {
-        memcpy(buf, readAheadBuffer + rbrpos, count);
+        memcpy(buf, readAheadBuffer + rpos, count);
     }
     LOG(VB_FILE, LOG_DEBUG, LOC + loc_desc + QString(" -- checksum %1")
             .arg(qChecksum((char*)buf,count)));
 
     if (!peek)
     {
-        rbrpos = (rbrpos + count) % bufferSize;
-        generalWait.wakeAll();
+        if (readInternalMode)
+        {
+            readOffset += count;
+        }
+        else
+        {
+            rbrpos = (rbrpos + count) % bufferSize;
+            generalWait.wakeAll();
+        }
     }
     rbrlock.unlock();
     rwlock.unlock();
diff -Naur mythtv-0.27-20140402-gb10d885-old/mythtv/libs/libmythtv/ringbuffer.h mythtv-0.27-20140402-gb10d885-new/mythtv/libs/libmythtv/ringbuffer.h
--- mythtv-0.27-20140402-gb10d885-old/mythtv/libs/libmythtv/ringbuffer.h	2014-04-03 10:32:34.296758535 +0200
+++ mythtv-0.27-20140402-gb10d885-new/mythtv/libs/libmythtv/ringbuffer.h	2014-04-03 10:32:51.950293692 +0200
@@ -81,7 +81,7 @@
     long long GetWritePosition(void) const;
     /// \brief Returns the size of the file we are reading/writing,
     ///        or -1 if the query fails.
-    virtual long long GetRealFileSize(void)  const { return -1; }
+    long long GetRealFileSize(void) const;
     bool      IsNearEnd(double fps, uint vvf) const;
     /// \brief Returns true if open for either reading or writing.
     virtual bool IsOpen(void) const = 0;
@@ -92,6 +92,11 @@
     static QString BitrateToString(uint64_t rate, bool hz = false);
     RingBufferType GetType() const { return type; }
 
+    // LiveTV used utilities
+    int GetReadBufAvail() const;
+    bool SetReadInternalMode(bool mode);
+    bool IsReadInternalMode(void) { return readInternalMode; }
+
     // DVD and bluray methods
     bool IsDisc(void) const { return IsDVD() || IsBD(); }
     bool IsDVD(void)  const { return type == kRingBuffer_DVD; }
@@ -176,6 +181,7 @@
     int ReadDirect(void *buf, int count, bool peek);
     bool WaitForReadsAllowed(void);
     bool WaitForAvail(int count);
+    virtual long long GetRealFileSizeInternal(void) const { return -1; }
 
     int ReadBufFree(void) const;
     int ReadBufAvail(void) const;
@@ -245,6 +251,10 @@
 
     long long readAdjust;         // protected by rwlock
 
+    // Internal RingBuffer Method
+    int       readOffset;         // protected by rwlock
+    bool      readInternalMode;   // protected by rwlock
+
     // bitrate monitors
     bool              bitrateMonitorEnabled;
     QMutex            decoderReadLock;
@@ -268,6 +278,7 @@
 
   private:
     static bool gAVformat_net_initialised;
+    bool bitrateInitialized;
 };
 
 #endif // _RINGBUFFER_H_
diff -Naur mythtv-0.27-20140402-gb10d885-old/mythtv/libs/libmythtv/streamingringbuffer.cpp mythtv-0.27-20140402-gb10d885-new/mythtv/libs/libmythtv/streamingringbuffer.cpp
--- mythtv-0.27-20140402-gb10d885-old/mythtv/libs/libmythtv/streamingringbuffer.cpp	2014-04-03 10:32:34.286758420 +0200
+++ mythtv-0.27-20140402-gb10d885-new/mythtv/libs/libmythtv/streamingringbuffer.cpp	2014-04-03 10:32:52.030294601 +0200
@@ -127,7 +127,7 @@
     return len;
 }
 
-long long StreamingRingBuffer::GetRealFileSize(void) const
+long long StreamingRingBuffer::GetRealFileSizeInternal(void) const
 {
     long long result = -1;
     rwlock.lockForRead();
diff -Naur mythtv-0.27-20140402-gb10d885-old/mythtv/libs/libmythtv/streamingringbuffer.h mythtv-0.27-20140402-gb10d885-new/mythtv/libs/libmythtv/streamingringbuffer.h
--- mythtv-0.27-20140402-gb10d885-old/mythtv/libs/libmythtv/streamingringbuffer.h	2014-04-03 10:32:34.283425049 +0200
+++ mythtv-0.27-20140402-gb10d885-new/mythtv/libs/libmythtv/streamingringbuffer.h	2014-04-03 10:32:52.056961573 +0200
@@ -19,13 +19,13 @@
     virtual bool OpenFile(const QString &lfilename,
                           uint retry_ms = kDefaultOpenTimeout);
     virtual long long Seek(long long pos, int whence, bool has_lock);
-    virtual long long GetRealFileSize(void) const;
     virtual bool IsStreamed(void)       { return m_streamed;   }
     virtual bool IsSeekingAllowed(void) { return m_allowSeeks; }
     virtual bool IsBookmarkAllowed(void) { return false; }
 
   protected:
     virtual int safe_read(void *data, uint sz);
+    virtual long long GetRealFileSizeInternal(void) const;
 
   private:
     URLContext *m_context;
