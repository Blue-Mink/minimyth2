From b4be8e24f9fab5b6a71f62df8e2c0403bedf4805 Mon Sep 17 00:00:00 2001
From: Mike Thomas <pfw.demon.co.uk>
Date: Sun, 19 Jan 2014 03:16:00 +1100
Subject: [PATCH 1/3] Speed up ProgramInfo::SavePositionMap() database writes.

Use a single SQL query to save all new position map entries.
This speeds up SavePositionMap by an order of magnitude.

Fixes #12016

Signed-off-by: Jean-Yves Avenard <jyavenard@mythtv.org>
---
 mythtv/libs/libmyth/programinfo.cpp |   94 +++++++++++++++++++++--------------
 1 file changed, 56 insertions(+), 38 deletions(-)

diff --git a/mythtv/libs/libmyth/programinfo.cpp b/mythtv/libs/libmyth/programinfo.cpp
index de64d07..739baea 100644
--- a/mythtv/libs/libmyth/programinfo.cpp
+++ b/mythtv/libs/libmyth/programinfo.cpp
@@ -3683,25 +3683,28 @@ void ProgramInfo::SavePositionMap(
     if (!query.exec())
         MythDB::DBError("position map clear", query);
 
+    // Use the multi-value insert syntax to reduce database I/O
+    QStringList q("INSERT INTO ");
+    QString qfields;
     if (IsVideo())
     {
-        query.prepare(
-            "INSERT INTO "
-            "filemarkup (filename, mark, type, offset) "
-            "VALUES ( :PATH , :MARK , :TYPE , :OFFSET )");
-        query.bindValue(":PATH", videoPath);
+        q << "filemarkup (filename, type, mark, offset)";
+        qfields = QString("('%1',%2,") .
+            // ideally, this should be escaped
+            arg(videoPath) .
+            arg(type);
     }
     else // if (IsRecording())
     {
-        query.prepare(
-            "INSERT INTO "
-            "recordedseek (chanid, starttime, mark, type, offset) "
-            " VALUES ( :CHANID , :STARTTIME , :MARK , :TYPE , :OFFSET )");
-        query.bindValue(":CHANID",    chanid);
-        query.bindValue(":STARTTIME", recstartts);
+        q << "recordedseek (chanid, starttime, type, mark, offset)";
+        qfields = QString("(%1,'%2',%3,") .
+            arg(chanid) .
+            arg(recstartts.toString(Qt::ISODate)) .
+            arg(type);
     }
-    query.bindValue(":TYPE", type);
+    q << " VALUES ";
 
+    bool add_comma = false;
     frm_pos_map_t::iterator it;
     for (it = posMap.begin(); it != posMap.end(); ++it)
     {
@@ -3715,14 +3718,20 @@ void ProgramInfo::SavePositionMap(
 
         uint64_t offset = *it;
 
-        query.bindValue(":MARK",   (quint64)frame);
-        query.bindValue(":OFFSET", (quint64)offset);
-
-        if (!query.exec())
+        if (add_comma)
         {
-            MythDB::DBError("position map insert", query);
-            break;
+            q << ",";
         }
+        else
+        {
+            add_comma = true;
+        }
+        q << qfields << QString("%1,%2)").arg(frame).arg(offset);
+    }
+    query.prepare(q.join(""));
+    if (!query.exec())
+    {
+        MythDB::DBError("position map insert", query);
     }
 }
 
@@ -3741,45 +3750,54 @@ void ProgramInfo::SavePositionMapDelta(
         return;
     }
 
-    MSqlQuery query(MSqlQuery::InitCon());
-
+    // Use the multi-value insert syntax to reduce database I/O
+    QStringList q("INSERT INTO ");
+    QString qfields;
     if (IsVideo())
     {
-        query.prepare(
-            "INSERT INTO "
-            "filemarkup (filename, mark, type, offset) "
-            "VALUES ( :PATH , :MARK , :TYPE , :OFFSET )");
-        query.bindValue(":PATH", StorageGroup::GetRelativePathname(pathname));
+        q << "filemarkup (filename, type, mark, offset)";
+        qfields = QString("('%1',%2,") .
+            // ideally, this should be escaped
+            arg(StorageGroup::GetRelativePathname(pathname)) .
+            arg(type);
     }
     else if (IsRecording())
     {
-        query.prepare(
-            "INSERT INTO "
-            "recordedseek (chanid, starttime, mark, type, offset) "
-            " VALUES ( :CHANID , :STARTTIME , :MARK , :TYPE , :OFFSET )");
-        query.bindValue(":CHANID",    chanid);
-        query.bindValue(":STARTTIME", recstartts);
+        q << "recordedseek (chanid, starttime, type, mark, offset)";
+        qfields = QString("(%1,'%2',%3,") .
+            arg(chanid) .
+            arg(recstartts.toString(Qt::ISODate)) .
+            arg(type);
     }
     else
     {
         return;
     }
-    query.bindValue(":TYPE", type);
+    q << " VALUES ";
 
+    bool add_comma = false;
     frm_pos_map_t::iterator it;
     for (it = posMap.begin(); it != posMap.end(); ++it)
     {
         uint64_t frame  = it.key();
         uint64_t offset = *it;
 
-        query.bindValue(":MARK",   (quint64)frame);
-        query.bindValue(":OFFSET", (quint64)offset);
-
-        if (!query.exec())
+        if (add_comma)
         {
-            MythDB::DBError("delta position map insert", query);
-            break;
+            q << ",";
         }
+        else
+        {
+            add_comma = true;
+        }
+        q << qfields << QString("%1,%2)").arg(frame).arg(offset);
+    }
+
+    MSqlQuery query(MSqlQuery::InitCon());
+    query.prepare(q.join(""));
+    if (!query.exec())
+    {
+        MythDB::DBError("delta position map insert", query);
     }
 }
 
-- 
1.7.10.2

