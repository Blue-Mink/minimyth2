From d8c0ad9930dd157106f651617d1217f1d6cce234 Mon Sep 17 00:00:00 2001
From: Stuart Morgan <smorgan@mythtv.org>
Date: Thu, 10 Jul 2014 23:45:48 +0100
Subject: [PATCH 1/3] UPnP: Add the fraction of a second component to the
 'Duration' attribute for music.

This is a no-op, it's entirely optional in the spec and we don't store
music duration to this resolution. I'm making the change because it
future proofs the upnp code should we ever decide to store music
duration down to the millisecond.

Refs #9632
---
 mythtv/programs/mythbackend/upnpcdsmusic.cpp |   13 +++++++------
 1 file changed, 7 insertions(+), 6 deletions(-)

diff --git a/mythtv/programs/mythbackend/upnpcdsmusic.cpp b/mythtv/programs/mythbackend/upnpcdsmusic.cpp
index cd8e2d4..e4c88ce 100644
--- a/mythtv/programs/mythbackend/upnpcdsmusic.cpp
+++ b/mythtv/programs/mythbackend/upnpcdsmusic.cpp
@@ -268,7 +268,7 @@ void UPnpCDSMusic::AddItem( const UPnpCDSRequest    *pRequest,
     int            nTrackNum    = query.value( 6).toInt();
     QString        sDescription = query.value( 7).toString();
     QString        sFileName    = query.value( 8).toString();
-    uint           nLength      = query.value( 9).toInt();
+    uint           nLengthMS    = query.value( 9).toInt();
     uint64_t       nFileSize    = (quint64)query.value(10).toULongLong();
 
 #if 0
@@ -429,14 +429,15 @@ void UPnpCDSMusic::AddItem( const UPnpCDSRequest    *pRequest,
 
     Resource *pRes = pItem->AddResource( sProtocol, sURI );
 
-    nLength /= 1000;
+    int nLengthSecs = nLengthMS / 1000;
 
     QString sDur;
 
-    sDur.sprintf("%02d:%02d:%02d",
-                  (nLength / 3600) % 24,
-                  (nLength / 60) % 60,
-                  nLength % 60);
+    sDur.sprintf("%02d:%02d:%02d.%03d",
+                  (nLengthSecs / 3600) % 24,
+                  (nLengthSecs / 60) % 60,
+                  nLengthSecs % 60,
+                  nLengthMS % 1000);
 
     pRes->AddAttribute( "duration"  , sDur      );
     if (nFileSize > 0)
-- 
1.7.10.2

