From 717b39cd25c5bd4ea9e9f4835aae00ee2dffb425 Mon Sep 17 00:00:00 2001
From: Jonatan Lindblad <jlindblad@mythtv.org>
Date: Sun, 8 Jun 2014 01:10:43 +0200
Subject: [PATCH 19/23] MythNetvision: Split NetTree::SlotItemChanged into
 separate methods

---
 .../mythnetvision/mythnetvision/nettree.cpp        |  275 ++++++++++----------
 mythplugins/mythnetvision/mythnetvision/nettree.h  |    4 +
 2 files changed, 145 insertions(+), 134 deletions(-)

diff --git a/mythplugins/mythnetvision/mythnetvision/nettree.cpp b/mythplugins/mythnetvision/mythnetvision/nettree.cpp
index f676668..1004e11 100644
--- a/mythplugins/mythnetvision/mythnetvision/nettree.cpp
+++ b/mythplugins/mythnetvision/mythnetvision/nettree.cpp
@@ -653,174 +653,181 @@ ResultItem* NetTree::GetStreamItem()
     return item;
 }
 
-void NetTree::SlotItemChanged()
+void NetTree::UpdateResultItem(ResultItem *item)
 {
-    ResultItem *item;
-    RSSSite *site;
+    InfoMap metadataMap;
+    item->toMap(metadataMap);
+    SetTextFromMap(metadataMap);
 
-    if (m_type == DLG_TREE)
+    if (!item->GetThumbnail().isEmpty() && m_thumbImage)
     {
-        item =
-            qVariantValue<ResultItem *>(m_siteMap->GetCurrentNode()->GetData());
-        site = qVariantValue<RSSSite *>(m_siteMap->GetCurrentNode()->GetData());
-    }
-    else
-    {
-        MythGenericTree *node =
-            GetNodePtrFromButton(m_siteButtonList->GetItemCurrent());
-
-        if (!node)
-            return;
-
-        item = qVariantValue<ResultItem *>(node->GetData());
-        site = qVariantValue<RSSSite *>(node->GetData());
-    }
-
-    if (item)
-    {
-        InfoMap metadataMap;
-        item->toMap(metadataMap);
-        SetTextFromMap(metadataMap);
-
-        if (!item->GetThumbnail().isEmpty() && m_thumbImage)
+        m_thumbImage->Reset();
+        QString dlfile = item->GetThumbnail();
+        if (dlfile.contains("%SHAREDIR%"))
         {
-            m_thumbImage->Reset();
-            QString dlfile = item->GetThumbnail();
-            if (dlfile.contains("%SHAREDIR%"))
+            dlfile.replace("%SHAREDIR%", GetShareDir());
+            m_thumbImage->SetFilename(dlfile);
+            m_thumbImage->Load();
+        }
+        else
+        {
+            QString sFilename = getDownloadFilename(item->GetTitle(),
+                                                    item->GetThumbnail());
+
+            bool exists = QFile::exists(sFilename);
+            if (exists)
             {
-                dlfile.replace("%SHAREDIR%", GetShareDir());
-                m_thumbImage->SetFilename(dlfile);
+                m_thumbImage->SetFilename(sFilename);
                 m_thumbImage->Load();
             }
-            else
+            else if (item->GetThumbnail().startsWith("http"))
             {
-                QString sFilename = getDownloadFilename(item->GetTitle(),
-                                                        item->GetThumbnail());
-
-                bool exists = QFile::exists(sFilename);
-                if (exists)
-                {
-                    m_thumbImage->SetFilename(sFilename);
-                    m_thumbImage->Load();
-                }
-                else if (item->GetThumbnail().startsWith("http"))
-                {
-                    m_imageDownload->addThumb(item->GetTitle(),
-                                              item->GetThumbnail(),
-                                              qVariantFromValue<uint>(0));
-                }
+                m_imageDownload->addThumb(item->GetTitle(),
+                                          item->GetThumbnail(),
+                                          qVariantFromValue<uint>(0));
             }
         }
-        else if (m_thumbImage)
-            m_thumbImage->Reset();
-
-        if (m_downloadable)
-        {
-            if (item->GetDownloadable())
-                m_downloadable->DisplayState("yes");
-            else
-                m_downloadable->DisplayState("no");
-        }
     }
-    else if (site)
+    else if (m_thumbImage)
+        m_thumbImage->Reset();
+
+    if (m_downloadable)
     {
-        ResultItem res =
-            ResultItem(site->GetTitle(), QString(), site->GetDescription(),
-                       site->GetURL(), site->GetImage(), QString(),
-                       site->GetAuthor(), QDateTime(), 0, 0, -1, QString(),
-                       QStringList(), QString(), QStringList(), 0, 0, QString(),
-                       0, QStringList(), 0, 0, 0);
+        if (item->GetDownloadable())
+            m_downloadable->DisplayState("yes");
+        else
+            m_downloadable->DisplayState("no");
+    }
+}
 
-        InfoMap metadataMap;
-        res.toMap(metadataMap);
-        SetTextFromMap(metadataMap);
+void NetTree::UpdateSiteItem(RSSSite *site)
+{
+    ResultItem res =
+        ResultItem(site->GetTitle(), QString(), site->GetDescription(),
+                   site->GetURL(), site->GetImage(), QString(),
+                   site->GetAuthor(), QDateTime(), 0, 0, -1, QString(),
+                   QStringList(), QString(), QStringList(), 0, 0, QString(),
+                   0, QStringList(), 0, 0, 0);
 
-        if (!site->GetImage().isEmpty() && m_thumbImage)
-        {
-            m_thumbImage->SetFilename(site->GetImage());
-            m_thumbImage->Load();
-        }
-        else if (m_thumbImage)
-            m_thumbImage->Reset();
+    InfoMap metadataMap;
+    res.toMap(metadataMap);
+    SetTextFromMap(metadataMap);
 
-        if (m_downloadable)
-            m_downloadable->Reset();
+    if (!site->GetImage().isEmpty() && m_thumbImage)
+    {
+        m_thumbImage->SetFilename(site->GetImage());
+        m_thumbImage->Load();
     }
+    else if (m_thumbImage)
+        m_thumbImage->Reset();
+
+    if (m_downloadable)
+        m_downloadable->Reset();
+}
+
+void NetTree::UpdateCurrentItem(void)
+{
+    QString title;
+
+    if (m_type == DLG_TREE)
+        title = m_siteMap->GetItemCurrent()->GetText();
+    else
+        title = m_siteButtonList->GetItemCurrent()->GetText();
+
+    QString thumb;
+    if (m_type == DLG_TREE)
+        thumb = m_siteMap->GetCurrentNode()->GetData().toString();
     else
     {
-        QString title;
+        MythGenericTree *node =
+            GetNodePtrFromButton(m_siteButtonList->GetItemCurrent());
 
-        if (m_type == DLG_TREE)
-            title = m_siteMap->GetItemCurrent()->GetText();
-        else
-            title = m_siteButtonList->GetItemCurrent()->GetText();
+        if (node)
+            thumb = node->GetData().toString();
+    }
 
-        QString thumb;
-        if (m_type == DLG_TREE)
-            thumb = m_siteMap->GetCurrentNode()->
-                        GetData().toString();
-        else
-        {
-            MythGenericTree *node =
-                GetNodePtrFromButton(m_siteButtonList->GetItemCurrent());
+    ResultItem res =
+        ResultItem(title, QString(), QString(), QString(), thumb, QString(),
+                   QString(), QDateTime(), 0, 0, -1, QString(),
+                   QStringList(), QString(), QStringList(), 0, 0, QString(),
+                   0, QStringList(), 0, 0, 0);
 
-            if (node)
-                thumb = node->GetData().toString();
-        }
+    InfoMap metadataMap;
+    res.toMap(metadataMap);
+    SetTextFromMap(metadataMap);
 
-        ResultItem res =
-            ResultItem(title, QString(), QString(), QString(), thumb, QString(),
-                       QString(), QDateTime(), 0, 0, -1, QString(),
-                       QStringList(), QString(), QStringList(), 0, 0, QString(),
-                       0, QStringList(), 0, 0, 0);
+    if (m_thumbImage)
+    {
+        if (!thumb.startsWith("http://"))
+        {
+            if (thumb.contains("%SHAREDIR%"))
+                thumb.replace("%SHAREDIR%", GetShareDir());
 
-        InfoMap metadataMap;
-        res.toMap(metadataMap);
-        SetTextFromMap(metadataMap);
+            bool exists = QFile::exists(thumb);
 
-        if (m_thumbImage)
-        {
-            if (!thumb.startsWith("http://"))
+            if (exists)
             {
-                if (thumb.contains("%SHAREDIR%"))
-                    thumb.replace("%SHAREDIR%", GetShareDir());
+                m_thumbImage->SetFilename(thumb);
+                m_thumbImage->Load();
+            }
+            else
+                m_thumbImage->Reset();
+        }
+        else
+        {
+            QString url = thumb;
+            QString title;
+            if (m_type == DLG_TREE)
+                title = m_siteMap->GetItemCurrent()->GetText();
+            else
+                title = m_siteButtonList->GetItemCurrent()->GetText();
 
-                bool exists = QFile::exists(thumb);
+            QString sFilename = GetDownloadFilename(title, url);
 
-                if (exists)
-                {
-                    m_thumbImage->SetFilename(thumb);
-                    m_thumbImage->Load();
-                }
-                else
-                    m_thumbImage->Reset();
+            bool exists = QFile::exists(sFilename);
+            if (exists && !url.isEmpty())
+            {
+                m_thumbImage->SetFilename(sFilename);
+                m_thumbImage->Load();
             }
             else
-            {
+                m_thumbImage->Reset();
+        }
+    }
 
-                QString url = thumb;
-                QString title;
-                if (m_type == DLG_TREE)
-                    title = m_siteMap->GetItemCurrent()->GetText();
-                else
-                    title = m_siteButtonList->GetItemCurrent()->GetText();
+    if (m_downloadable)
+        m_downloadable->Reset();
+}
 
-                QString sFilename = GetDownloadFilename(title, url);
+void NetTree::SlotItemChanged()
+{
+    ResultItem *item;
+    RSSSite *site;
 
-                bool exists = QFile::exists(sFilename);
-                if (exists && !url.isEmpty())
-                {
-                    m_thumbImage->SetFilename(sFilename);
-                    m_thumbImage->Load();
-                }
-                else
-                    m_thumbImage->Reset();
-            }
-        }
+    if (m_type == DLG_TREE)
+    {
+        item =
+            qVariantValue<ResultItem *>(m_siteMap->GetCurrentNode()->GetData());
+        site = qVariantValue<RSSSite *>(m_siteMap->GetCurrentNode()->GetData());
+    }
+    else
+    {
+        MythGenericTree *node =
+            GetNodePtrFromButton(m_siteButtonList->GetItemCurrent());
+
+        if (!node)
+            return;
 
-        if (m_downloadable)
-            m_downloadable->Reset();
+        item = qVariantValue<ResultItem *>(node->GetData());
+        site = qVariantValue<RSSSite *>(node->GetData());
     }
+
+    if (item)
+        UpdateResultItem(item);
+    else if (site)
+        UpdateSiteItem(site);
+    else
+        UpdateCurrentItem();
 }
 
 void NetTree::RunTreeEditor()
diff --git a/mythplugins/mythnetvision/mythnetvision/nettree.h b/mythplugins/mythnetvision/mythnetvision/nettree.h
index c6a7808..cdf5af4 100644
--- a/mythplugins/mythnetvision/mythnetvision/nettree.h
+++ b/mythplugins/mythnetvision/mythnetvision/nettree.h
@@ -73,6 +73,10 @@ class NetTree : public NetBase
 
     void SwitchView(void);
 
+    void UpdateResultItem(ResultItem *item);
+    void UpdateSiteItem(RSSSite *site);
+    void UpdateCurrentItem(void);
+
     // Only to keep track of what to delete
     QList<ResultItem*> m_videos;
 
-- 
1.7.10.2

