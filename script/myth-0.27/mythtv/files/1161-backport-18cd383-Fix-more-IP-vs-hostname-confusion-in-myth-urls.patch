From 18cd3832585d3d993de9561f07885280c3c2ee8e Mon Sep 17 00:00:00 2001
From: Stuart Morgan <smorgan@mythtv.org>
Date: Thu, 4 Sep 2014 20:31:06 +0100
Subject: [PATCH 11/11] Fix more IP vs hostname confusion in myth:// urls

A myth url consists of <group>@<hostname>:<port> where <hostname> is
the unique identifier of a backend, NOT an IP address. Some code
rightly expects to be able to extract the hostname from the URL and
use it as the unique identifier, for example to StorageGroup() or as a
key for DB lookups. The places where an IP was used broke this
assumption and caused the code to take an extended route to complete
it's task, or caused failures.

The 'hostname' will be converted to an IP address only at the point
where we connect to the remote backend to transfer/delete/etc the
file. Since only mythtv is expected to handle myth:// urls this is OK.

Since this has been causing confusion for some time there may be parts
of the code that incorrectly expect an IP address which will have to
be fixed.
---
 mythtv/libs/libmyth/programinfo.cpp                |    4 ++--
 mythtv/libs/libmythbase/mythcorecontext.cpp        |   11 +++++++--
 mythtv/libs/libmythbase/remotefile.cpp             |    4 ++--
 .../libs/libmythmetadata/metadataimagedownload.cpp |    3 +--
 mythtv/libs/libmythmetadata/musicmetadata.cpp      |   13 +++++++---
 mythtv/libs/libmythmetadata/videoutils.h           |    3 +--
 mythtv/libs/libmythtv/metadataimagehelper.h        |    3 +--
 mythtv/libs/libmythtv/tv_rec.cpp                   |    2 +-
 mythtv/programs/mythbackend/mainserver.cpp         |   25 ++++++++++++--------
 .../mythfrontend/gallerydatabasehelper.cpp         |    4 ++--
 mythtv/programs/mythfrontend/gallerywidget.cpp     |    4 ++--
 mythtv/programs/mythfrontend/themechooser.cpp      |    4 ++--
 mythtv/programs/mythtranscode/main.cpp             |    3 +--
 13 files changed, 49 insertions(+), 34 deletions(-)

diff --git a/mythtv/libs/libmyth/programinfo.cpp b/mythtv/libs/libmyth/programinfo.cpp
index 6b4efba..3b9d210 100644
--- a/mythtv/libs/libmyth/programinfo.cpp
+++ b/mythtv/libs/libmyth/programinfo.cpp
@@ -2550,7 +2550,7 @@ QString ProgramInfo::GetPlaybackURL(
         (gCoreContext->GetNumSetting("MasterBackendOverride", 0)) &&
         (RemoteCheckFile(this, false)))
     {
-        tmpURL = gCoreContext->GenMythURL(gCoreContext->GetMasterServerIP(),
+        tmpURL = gCoreContext->GenMythURL(gCoreContext->GetMasterHostName(),
                                           gCoreContext->GetMasterServerPort(),
                                           basename);
 
@@ -2560,7 +2560,7 @@ QString ProgramInfo::GetPlaybackURL(
     }
 
     // Fallback to streaming from the backend the recording was created on
-    tmpURL = gCoreContext->GenMythURL(gCoreContext->GetBackendServerIP(hostname),
+    tmpURL = gCoreContext->GenMythURL(hostname,
                                       gCoreContext->GetBackendServerPort(hostname),
                                       basename);
 
diff --git a/mythtv/libs/libmythbase/mythcorecontext.cpp b/mythtv/libs/libmythbase/mythcorecontext.cpp
index d4a051e..be13d05 100644
--- a/mythtv/libs/libmythbase/mythcorecontext.cpp
+++ b/mythtv/libs/libmythbase/mythcorecontext.cpp
@@ -693,6 +693,13 @@ QString MythCoreContext::GenMythURL(QString host, int port, QString path, QStrin
     QString m_port;
 
     QHostAddress addr(host);
+    if (!addr.isNull())
+    {
+        LOG(VB_GENERAL, LOG_CRIT, QString("MythCoreContext::GenMythURL(%1/%2): Given "
+                                          "IP address instead of hostname "
+                                          "(ID). This is invalid.").arg(host).arg(path));
+    }
+
 
     if (!storageGroup.isEmpty())
         m_storageGroup = storageGroup + "@";
@@ -701,7 +708,7 @@ QString MythCoreContext::GenMythURL(QString host, int port, QString path, QStrin
 
 #if !defined(QT_NO_IPV6)
     // Basically if it appears to be an IPv6 IP surround the IP with [] otherwise don't bother
-    if (addr.protocol() == QAbstractSocket::IPv6Protocol)
+    if (!addr.isNull() && addr.protocol() == QAbstractSocket::IPv6Protocol)
         m_host = "[" + addr.toString().toLower() + "]";
 #endif
 
@@ -729,7 +736,7 @@ QString MythCoreContext::GenMythURL(QString host, int port, QString path, QStrin
 QString MythCoreContext::GetMasterHostPrefix(const QString &storageGroup,
                                              const QString &path)
 {
-    return GenMythURL(GetMasterServerIP(),
+    return GenMythURL(GetMasterHostName(),
                       GetMasterServerPort(),
                       path,
                       storageGroup);
diff --git a/mythtv/libs/libmythbase/remotefile.cpp b/mythtv/libs/libmythbase/remotefile.cpp
index d76ca81..226b852 100644
--- a/mythtv/libs/libmythbase/remotefile.cpp
+++ b/mythtv/libs/libmythbase/remotefile.cpp
@@ -1195,7 +1195,7 @@ QStringList RemoteFile::FindFileList(const QString& filename, const QString& hos
             QStringList filteredFiles = files.filter(QRegExp(fi.fileName()));
             for (int x = 0; x < filteredFiles.size(); x++)
             {
-                strList << gCoreContext->GenMythURL(gCoreContext->GetBackendServerIP(),
+                strList << gCoreContext->GenMythURL(gCoreContext->GetHostName(),
                                                     gCoreContext->GetBackendServerPort(),
                                                     fi.path() + '/' + filteredFiles[x],
                                                     storageGroup);
@@ -1204,7 +1204,7 @@ QStringList RemoteFile::FindFileList(const QString& filename, const QString& hos
         else
         {
             if (!sgroup.FindFile(filename).isEmpty())
-                strList << gCoreContext->GenMythURL(gCoreContext->GetBackendServerIP(hostName),
+                strList << gCoreContext->GenMythURL(hostName,
                                                     gCoreContext->GetBackendServerPort(hostName),
                                                     filename, storageGroup);
         }
diff --git a/mythtv/libs/libmythmetadata/metadataimagedownload.cpp b/mythtv/libs/libmythmetadata/metadataimagedownload.cpp
index cff1516..59a974b 100644
--- a/mythtv/libs/libmythmetadata/metadataimagedownload.cpp
+++ b/mythtv/libs/libmythmetadata/metadataimagedownload.cpp
@@ -461,10 +461,9 @@ QString getLocalWritePath(MetadataType metadatatype, VideoArtworkType type)
 QString getStorageGroupURL(VideoArtworkType type, QString host)
 {
     QString sgroup = getStorageGroupName(type);
-    QString ip = gCoreContext->GetBackendServerIP(host);
     uint port = gCoreContext->GetBackendServerPort(host);
 
-    return gCoreContext->GenMythURL(ip,port,"",sgroup);
+    return gCoreContext->GenMythURL(host, port, "", sgroup);
 }
 
 QString getLocalStorageGroupPath(VideoArtworkType type, QString host)
diff --git a/mythtv/libs/libmythmetadata/musicmetadata.cpp b/mythtv/libs/libmythmetadata/musicmetadata.cpp
index 4fc9a62..7f98605 100644
--- a/mythtv/libs/libmythmetadata/musicmetadata.cpp
+++ b/mythtv/libs/libmythmetadata/musicmetadata.cpp
@@ -289,6 +289,12 @@ MusicMetadata *MusicMetadata::createFromID(int trackid)
         mdata->m_filename = query.value(17).toString();
         mdata->m_hostname = query.value(18).toString();
 
+        if (!QHostAddress(mdata->m_hostname).isNull()) // A bug caused an IP to replace hostname, reset and it will fix itself
+        {
+            mdata->m_hostname = "";
+            mdata->saveHostname();
+        }
+
         return mdata;
     }
 
@@ -790,7 +796,7 @@ QString MusicMetadata::Filename(bool find)
     }
 
     // first check to see if the filename is complete
-    if (RemoteFile::Exists(m_filename))
+    if (QFile::exists(m_filename))
     {
         m_actualFilename = m_filename;
         return m_filename;
@@ -803,7 +809,8 @@ QString MusicMetadata::Filename(bool find)
         m_actualFilename = mythUrl;
 
         QUrl url(mythUrl);
-        if (url.host() != m_hostname)
+        if (url.host() != m_hostname &&
+            QHostAddress(url.host()).isNull()) // Check that it's not an IP address
         {
             m_hostname = url.host();
             saveHostname();
@@ -1100,7 +1107,7 @@ QString MusicMetadata::getAlbumArtFile(void)
                 if (albumart_image->embedded)
                 {
                     if (gCoreContext->IsMasterBackend() &&
-                        url.host() == gCoreContext->GetMasterServerIP())
+                        url.host() == gCoreContext->GetMasterHostName())
                     {
                         QStringList paramList;
                         paramList.append(QString("--songid='%1'").arg(ID()));
diff --git a/mythtv/libs/libmythmetadata/videoutils.h b/mythtv/libs/libmythmetadata/videoutils.h
index 03f3f15..d3c0dd3 100644
--- a/mythtv/libs/libmythmetadata/videoutils.h
+++ b/mythtv/libs/libmythmetadata/videoutils.h
@@ -65,10 +65,9 @@ META_PUBLIC QString ContentTypeToString(VideoContentType type);
 inline QString generate_file_url(
     const QString &storage_group, const QString &host, const QString &path)
 {
-    QString ip = gCoreContext->GetBackendServerIP(host);
     uint port = gCoreContext->GetBackendServerPort(host);
 
-    return gCoreContext->GenMythURL(ip,port,path,
+    return gCoreContext->GenMythURL(host, port, path,
                                     StorageGroup::GetGroupToUse(host, storage_group));
 
 }
diff --git a/mythtv/libs/libmythtv/metadataimagehelper.h b/mythtv/libs/libmythtv/metadataimagehelper.h
index 017da87..1b5f042 100644
--- a/mythtv/libs/libmythtv/metadataimagehelper.h
+++ b/mythtv/libs/libmythtv/metadataimagehelper.h
@@ -48,10 +48,9 @@ MTV_PUBLIC bool SetArtwork(const QString &inetref,
 inline QString generate_myth_url(
     const QString &storage_group, const QString &host, const QString &path)
 {
-    QString ip = gCoreContext->GetBackendServerIP(host);
     uint port = gCoreContext->GetBackendServerPort(host);
 
-    return gCoreContext->GenMythURL(ip,port,path,
+    return gCoreContext->GenMythURL(host, port, path,
                                     StorageGroup::GetGroupToUse(host, storage_group));
 
 }
diff --git a/mythtv/libs/libmythtv/tv_rec.cpp b/mythtv/libs/libmythtv/tv_rec.cpp
index 4a045a1..7d820fe 100644
--- a/mythtv/libs/libmythtv/tv_rec.cpp
+++ b/mythtv/libs/libmythtv/tv_rec.cpp
@@ -2625,7 +2625,7 @@ void TVRec::SpawnLiveTV(LiveTVChain *newchain, bool pip, QString startchan)
     tvchain->ReloadAll();
 
     QString hostprefix = gCoreContext->GenMythURL(
-                    gCoreContext->GetBackendServerIP(),
+                    gCoreContext->GetHostName(),
                     gCoreContext->GetBackendServerPort());
 
     tvchain->SetHostPrefix(hostprefix);
diff --git a/mythtv/programs/mythbackend/mainserver.cpp b/mythtv/programs/mythbackend/mainserver.cpp
index be74dd5..38bdd15 100644
--- a/mythtv/programs/mythbackend/mainserver.cpp
+++ b/mythtv/programs/mythbackend/mainserver.cpp
@@ -1939,6 +1939,7 @@ void MainServer::HandleQueryRecordings(QString type, PlaybackSock *pbs)
     QMap<QString, QString> backendPortMap;
     QString ip   = gCoreContext->GetBackendServerIP();
     int port = gCoreContext->GetBackendServerPort();
+    QString host = gCoreContext->GetHostName();
 
     ProgramList::iterator it = destination.begin();
     for (it = destination.begin(); it != destination.end(); ++it)
@@ -1952,7 +1953,7 @@ void MainServer::HandleQueryRecordings(QString type, PlaybackSock *pbs)
         if ((proginfo->GetHostname() == gCoreContext->GetHostName()) ||
             (!slave && masterBackendOverride))
         {
-            proginfo->SetPathname(gCoreContext->GenMythURL(ip,port,proginfo->GetBasename()));
+            proginfo->SetPathname(gCoreContext->GenMythURL(host,port,proginfo->GetBasename()));
             if (!proginfo->GetFilesize())
             {
                 QString tmpURL = GetPlaybackURL(proginfo);
@@ -2093,13 +2094,13 @@ void MainServer::HandleFillProgramInfo(QStringList &slist, PlaybackSock *pbs)
     if (pginfo.HasPathname())
     {
         QString lpath = GetPlaybackURL(&pginfo);
-        QString ip    = gCoreContext->GetBackendServerIP();
         int port  = gCoreContext->GetBackendServerPort();
+        QString host = gCoreContext->GetHostName();
 
         if (playbackhost == gCoreContext->GetHostName())
             pginfo.SetPathname(lpath);
         else
-            pginfo.SetPathname(gCoreContext->GenMythURL(ip,port,pginfo.GetBasename()));
+            pginfo.SetPathname(gCoreContext->GenMythURL(host,port,pginfo.GetBasename()));
 
         const QFileInfo info(lpath);
         pginfo.SetFilesize(info.size());
@@ -2303,8 +2304,7 @@ void MainServer::DeleteRecordedFiles(DeleteStruct *ds)
             StorageGroup sgroup(storagegroup);
             QString localFile = sgroup.FindFile(basename);
 
-            QString url = gCoreContext->GenMythURL(
-                                  gCoreContext->GetBackendServerIP(hostname),
+            QString url = gCoreContext->GenMythURL(hostname,
                                   gCoreContext->GetBackendServerPort(hostname),
                                   basename,
                                   storagegroup);
@@ -3595,6 +3595,11 @@ void MainServer::HandleQueryFindFile(QStringList &slist, PlaybackSock *pbs)
     bool useRegex = false;
     QStringList fileList;
 
+    if (!QHostAddress(hostname).isNull())
+        LOG(VB_GENERAL, LOG_ERR, QString("Mainserver: QUERY_FINDFILE called "
+                                         "with IP (%1) instead of hostname. "
+                                         "This is invalid.").arg(hostname));
+
     if (hostname.isEmpty())
         hostname = gCoreContext->GetHostName();
 
@@ -3625,7 +3630,7 @@ void MainServer::HandleQueryFindFile(QStringList &slist, PlaybackSock *pbs)
     // first check the given host
     if (gCoreContext->IsThisHost(hostname))
     {
-        LOG(VB_FILE, LOG_INFO, LOC + QString("Checking local host '%1' for file").arg(hostname));
+        LOG(VB_FILE, LOG_INFO, LOC + QString("Checking local host '%1' for file").arg(gCoreContext->GetHostName()));
 
         // check the local storage group
         StorageGroup sgroup(storageGroup, gCoreContext->GetHostName(), false);
@@ -3645,7 +3650,7 @@ void MainServer::HandleQueryFindFile(QStringList &slist, PlaybackSock *pbs)
             QStringList filteredFiles = files.filter(QRegExp(fi.fileName()));
             for (int x = 0; x < filteredFiles.size(); x++)
             {
-                fileList << gCoreContext->GenMythURL(gCoreContext->GetBackendServerIP(),
+                fileList << gCoreContext->GenMythURL(gCoreContext->GetHostName(),
                                                      gCoreContext->GetBackendServerPort(),
                                                      fi.path() + '/' + filteredFiles[x],
                                                      storageGroup);
@@ -3655,7 +3660,7 @@ void MainServer::HandleQueryFindFile(QStringList &slist, PlaybackSock *pbs)
         {
             if (!sgroup.FindFile(filename).isEmpty())
             {
-                fileList << gCoreContext->GenMythURL(gCoreContext->GetBackendServerIP(),
+                fileList << gCoreContext->GenMythURL(gCoreContext->GetHostName(),
                                                      gCoreContext->GetBackendServerPort(),
                                                      filename, storageGroup);
             }
@@ -3732,7 +3737,7 @@ void MainServer::HandleQueryFindFile(QStringList &slist, PlaybackSock *pbs)
 
                     for (int x = 0; x < filteredFiles.size(); x++)
                     {
-                        fileList << gCoreContext->GenMythURL(gCoreContext->GetBackendServerIP(),
+                        fileList << gCoreContext->GenMythURL(gCoreContext->GetHostName(),
                                                                 gCoreContext->GetBackendServerPort(),
                                                                 fi.path() + '/' + filteredFiles[x],
                                                                 storageGroup);
@@ -3743,7 +3748,7 @@ void MainServer::HandleQueryFindFile(QStringList &slist, PlaybackSock *pbs)
                     QString fname = sgroup.FindFile(filename);
                     if (!fname.isEmpty())
                     {
-                        fileList << gCoreContext->GenMythURL(gCoreContext->GetMasterServerIP(),
+                        fileList << gCoreContext->GenMythURL(gCoreContext->GetMasterHostName(),
                                                         gCoreContext->GetMasterServerPort(),
                                                         filename, storageGroup);
                     }
diff --git a/mythtv/programs/mythfrontend/gallerydatabasehelper.cpp b/mythtv/programs/mythfrontend/gallerydatabasehelper.cpp
index 9fd449e..0a4b131 100644
--- a/mythtv/programs/mythfrontend/gallerydatabasehelper.cpp
+++ b/mythtv/programs/mythfrontend/gallerydatabasehelper.cpp
@@ -506,8 +506,8 @@ void GalleryDatabaseHelper::LoadDirectoryThumbnailValues(ImageMetadata *im)
                 .arg("/MythImage/")
                 .arg(query.value(0).toString());
 
-        thumbFileName = gCoreContext->GenMythURL(gCoreContext->GetSetting("MasterServerIP"),
-                                                 gCoreContext->GetNumSetting("MasterServerPort"),
+        thumbFileName = gCoreContext->GenMythURL(gCoreContext->GetMasterHostName(),
+                                                 gCoreContext->GetMasterServerPort(),
                                                  thumbFileName, "Temp");
 
         if (i >= im->m_thumbFileNameList->size())
diff --git a/mythtv/programs/mythfrontend/gallerywidget.cpp b/mythtv/programs/mythfrontend/gallerywidget.cpp
index 695e313..457b3d2 100644
--- a/mythtv/programs/mythfrontend/gallerywidget.cpp
+++ b/mythtv/programs/mythfrontend/gallerywidget.cpp
@@ -555,8 +555,8 @@ void GalleryWidget::LoadFile()
  */
 QString GalleryWidget::CreateImageUrl(QString &fileName)
 {
-    QString url = gCoreContext->GenMythURL(gCoreContext->GetSetting("MasterServerIP"),
-                                           gCoreContext->GetNumSetting("MasterServerPort"),
+    QString url = gCoreContext->GenMythURL(gCoreContext->GetMasterHostName(),
+                                           gCoreContext->GetMasterServerPort(),
                                            fileName,
                                            m_gvh->m_sgName);
 
diff --git a/mythtv/programs/mythfrontend/themechooser.cpp b/mythtv/programs/mythfrontend/themechooser.cpp
index da9f09e..1189479 100644
--- a/mythtv/programs/mythfrontend/themechooser.cpp
+++ b/mythtv/programs/mythfrontend/themechooser.cpp
@@ -984,7 +984,7 @@ ThemeUpdateChecker::ThemeUpdateChecker() :
         m_mythVersion.replace(QRegExp("\\.[0-9]{8,}.*"), "");
     }
 
-    m_infoPackage = gCoreContext->GenMythURL(gCoreContext->GetMasterServerIP(),
+    m_infoPackage = gCoreContext->GenMythURL(gCoreContext->GetMasterHostName(),
                                              gCoreContext->GetMasterServerPort(),
                                              "remotethemes/themes.zip",
                                              "Temp");
@@ -1016,7 +1016,7 @@ void ThemeUpdateChecker::checkForUpdate(void)
     if (RemoteFile::Exists(m_infoPackage))
     {
         QString remoteThemeDir =
-            gCoreContext->GenMythURL(gCoreContext->GetMasterServerIP(),
+            gCoreContext->GenMythURL(gCoreContext->GetMasterHostName(),
                                      gCoreContext->GetMasterServerPort(),
                                      QString("remotethemes/%1/%2")
                                              .arg(m_mythVersion)
diff --git a/mythtv/programs/mythtranscode/main.cpp b/mythtv/programs/mythtranscode/main.cpp
index f49c66b..7740e61 100644
--- a/mythtv/programs/mythtranscode/main.cpp
+++ b/mythtv/programs/mythtranscode/main.cpp
@@ -740,10 +740,9 @@ static int transUnlink(QString filename, ProgramInfo *pginfo)
     if (!pginfo->GetStorageGroup().isEmpty() &&
         !hostname.isEmpty())
     {
-        QString ip = gCoreContext->GetBackendServerIP(hostname);
         int port = gCoreContext->GetBackendServerPort(hostname);
         QString basename = filename.section('/', -1);
-        QString uri = gCoreContext->GenMythURL(ip, port, basename,
+        QString uri = gCoreContext->GenMythURL(hostname, port, basename,
                                                pginfo->GetStorageGroup());
 
         LOG(VB_GENERAL, LOG_NOTICE, QString("Requesting delete for file '%1'.")
-- 
1.7.10.2

