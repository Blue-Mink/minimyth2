diff -Naur mythtv-0.27-20140504-ge2acf0d-old/mythtv/libs/libmythbase/remotefile.cpp mythtv-0.27-20140504-ge2acf0d-new/mythtv/libs/libmythbase/remotefile.cpp
--- mythtv-0.27-20140504-ge2acf0d-old/mythtv/libs/libmythbase/remotefile.cpp	2014-05-05 12:00:36.898017722 +0200
+++ mythtv-0.27-20140504-ge2acf0d-new/mythtv/libs/libmythbase/remotefile.cpp	2014-05-05 12:00:50.744605625 +0200
@@ -43,7 +43,7 @@
     lock(QMutex::NonRecursive),
     controlSock(NULL),    sock(NULL),
     query("QUERY_FILETRANSFER %1"),
-    writemode(write),
+    writemode(write),     completed(false),
     localFile(NULL),      fileWriter(NULL)
 {
     if (writemode)
@@ -807,6 +807,11 @@
     return recv;
 }
 
+/**
+ * GetFileSize: returns the remote file's size at the time it was first opened
+ * Will query the server in order to get the size. If file isn't being modified
+ * by the server, that value will be cached
+ */
 long long RemoteFile::GetFileSize(void) const
 {
     if (isLocal())
@@ -828,12 +833,76 @@
         }
         return -1;
     }
+
+    QMutexLocker locker(&lock);
     return filesize;
 }
 
+/**
+ * GetRealFileSize: returns the current remote file's size.
+ * Will query the server in order to get the size. If file isn't being modified
+ * by the server, that value will be cached.
+ * A QUERY_SIZE myth request will be made. If the server doesn't support this command
+ * the size will be queried using a QUERY_FILE_EXISTS request
+ * Avoid using GetRealFileSize from the GUI thread
+ */
+long long RemoteFile::GetRealFileSize(void)
+{
+    if (isLocal())
+    {
+        return GetFileSize();
+    }
+
+    QMutexLocker locker(&lock);
+
+    if (completed)
+    {
+        return filesize;
+    }
+
+    if (!sock)
+    {
+        LOG(VB_NETWORK, LOG_ERR, "RemoteFileque(): Called with no socket");
+        return -1;
+    }
+
+    if (!sock->IsConnected() || !controlSock->IsConnected())
+    {
+        return -1;
+    }
+
+    QStringList strlist(QString(query).arg(recordernum));
+    strlist << "REQUEST_SIZE";
+
+    bool ok = controlSock->SendReceiveStringList(strlist);
+
+    if (ok && !strlist.isEmpty())
+    {
+        bool validate;
+        long long size = strlist[0].toLongLong(&validate);
+
+        if (validate)
+        {
+            if (strlist.count() >= 2)
+            {
+                completed = strlist[1].toInt();
+                filesize = size;
+            }
+            return size;
+        }
+        struct stat fileinfo;
+        if (Exists(path, &fileinfo))
+        {
+            return fileinfo.st_size;
+        }
+    }
+
+    return -1;
+}
+
 bool RemoteFile::SaveAs(QByteArray &data)
 {
-    long long fs = GetFileSize();
+    long long fs = GetRealFileSize();
 
     if (fs < 0)
         return false;
diff -Naur mythtv-0.27-20140504-ge2acf0d-old/mythtv/libs/libmythbase/remotefile.h mythtv-0.27-20140504-ge2acf0d-new/mythtv/libs/libmythbase/remotefile.h
--- mythtv-0.27-20140504-ge2acf0d-old/mythtv/libs/libmythbase/remotefile.h	2014-05-05 12:00:36.894684408 +0200
+++ mythtv-0.27-20140504-ge2acf0d-new/mythtv/libs/libmythbase/remotefile.h	2014-05-05 12:00:50.744605625 +0200
@@ -47,6 +47,7 @@
     static bool isLocal(const QString &path);
     bool isLocal(void) const;
     long long GetFileSize(void) const;
+    long long GetRealFileSize(void);
 
     QStringList GetAuxiliaryFiles(void) const
         { return auxfiles; }
@@ -71,6 +72,7 @@
     QString         query;
 
     bool            writemode;
+    bool            completed;
 
     QStringList     possibleauxfiles;
     QStringList     auxfiles;
