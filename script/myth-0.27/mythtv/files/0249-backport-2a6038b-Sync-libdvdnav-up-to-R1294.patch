diff -Naur mythtv-0.27-20140504-ge2acf0d-old/mythtv/libs/libmythdvdnav/dvdnav/dvdnav.c mythtv-0.27-20140504-ge2acf0d-new/mythtv/libs/libmythdvdnav/dvdnav/dvdnav.c
--- mythtv-0.27-20140504-ge2acf0d-old/mythtv/libs/libmythdvdnav/dvdnav/dvdnav.c	2014-05-05 11:54:34.950090879 +0200
+++ mythtv-0.27-20140504-ge2acf0d-new/mythtv/libs/libmythdvdnav/dvdnav/dvdnav.c	2014-05-05 11:54:53.276651895 +0200
@@ -203,7 +203,7 @@
   int64_t result;
   int64_t frames;
 
-  result  = (time->hour    >> 4  ) * 10 * 60 * 60 * 90000;
+  result  = (time->hour    >> 4  ) * 10 * 60 * 60 * 90000ull;
   result += (time->hour    & 0x0f)      * 60 * 60 * 90000;
   result += (time->minute  >> 4  )      * 10 * 60 * 90000;
   result += (time->minute  & 0x0f)           * 60 * 90000;
diff -Naur mythtv-0.27-20140504-ge2acf0d-old/mythtv/libs/libmythdvdnav/dvdnav/dvdnav.h mythtv-0.27-20140504-ge2acf0d-new/mythtv/libs/libmythdvdnav/dvdnav/dvdnav.h
--- mythtv-0.27-20140504-ge2acf0d-old/mythtv/libs/libmythdvdnav/dvdnav/dvdnav.h	2014-05-05 11:54:34.950090879 +0200
+++ mythtv-0.27-20140504-ge2acf0d-new/mythtv/libs/libmythdvdnav/dvdnav/dvdnav.h	2014-05-05 11:54:53.276651895 +0200
@@ -29,7 +29,7 @@
 #define MP_DVDNAV 1
 
 // Change this only when syncing to mplayer dvdnav trunk
-#define DVDNAV_SVN_REV "svnR1251"
+#define DVDNAV_SVN_REV "svnR1294"
 
 #ifdef __cplusplus
 extern "C" {
diff -Naur mythtv-0.27-20140504-ge2acf0d-old/mythtv/libs/libmythdvdnav/dvdnav/remap.c mythtv-0.27-20140504-ge2acf0d-new/mythtv/libs/libmythdvdnav/dvdnav/remap.c
--- mythtv-0.27-20140504-ge2acf0d-old/mythtv/libs/libmythdvdnav/dvdnav/remap.c	2014-05-05 11:54:34.950090879 +0200
+++ mythtv-0.27-20140504-ge2acf0d-new/mythtv/libs/libmythdvdnav/dvdnav/remap.c	2014-05-05 11:54:53.276651895 +0200
@@ -22,6 +22,7 @@
 
 #include <stdlib.h>
 #include <string.h>
+#include <strings.h>
 #include <stdio.h>
 
 #ifndef _MSC_VER
diff -Naur mythtv-0.27-20140504-ge2acf0d-old/mythtv/libs/libmythdvdnav/dvdnav/searching.c mythtv-0.27-20140504-ge2acf0d-new/mythtv/libs/libmythdvdnav/dvdnav/searching.c
--- mythtv-0.27-20140504-ge2acf0d-old/mythtv/libs/libmythdvdnav/dvdnav/searching.c	2014-05-05 11:54:34.950090879 +0200
+++ mythtv-0.27-20140504-ge2acf0d-new/mythtv/libs/libmythdvdnav/dvdnav/searching.c	2014-05-05 11:54:53.276651895 +0200
@@ -787,13 +787,41 @@
   length = 0;
   for(i=0; i<parts; i++) {
     uint32_t cellnr, endcellnr;
+    if (ptt[i].pgcn == 0 || ptt[i].pgcn > ifo->vts_pgcit->nr_of_pgci_srp) {
+      printerr("PGCN out of bounds.");
+      continue;
+    }
+    if (ifo->vts_pgcit->pgci_srp[ptt[i].pgcn-1].pgc_start_byte >= ifo->vts_pgcit->last_byte) {
+      printerr("PGC start out of bounds");
+      continue;
+    }
     pgc = ifo->vts_pgcit->pgci_srp[ptt[i].pgcn-1].pgc;
-    if(ptt[i].pgn > pgc->nr_of_programs) {
+    if (pgc == NULL) {
+      printerr("PGC missing.");
+      continue;
+    }
+    if (pgc->program_map == NULL) {
+      printerr("Program map missing.");
+      continue;
+    }
+    if(ptt[i].pgn == 0 || ptt[i].pgn > pgc->nr_of_programs) {
       printerr("WRONG part number.");
       goto fail;
     }
 
-    cellnr = pgc->program_map[ptt[i].pgn-1];
+    if (pgc->nr_of_cells == 0) {
+      printerr("Number of cells cannot be 0");
+      continue;
+    }
+    if ((cellnr = pgc->program_map[ptt[i].pgn-1]) == 0) {
+      printerr("Cell new row cannot be 0");
+      continue;
+    }
+    if (pgc->cell_playback == NULL) {
+      printerr("Cell missing");
+      continue;
+    }
+
     if(ptt[i].pgn < pgc->nr_of_programs)
       endcellnr = pgc->program_map[ptt[i].pgn];
     else
diff -Naur mythtv-0.27-20140504-ge2acf0d-old/mythtv/libs/libmythdvdnav/dvdnav/vm/vm.c mythtv-0.27-20140504-ge2acf0d-new/mythtv/libs/libmythdvdnav/dvdnav/vm/vm.c
--- mythtv-0.27-20140504-ge2acf0d-old/mythtv/libs/libmythdvdnav/dvdnav/vm/vm.c	2014-05-05 11:54:34.950090879 +0200
+++ mythtv-0.27-20140504-ge2acf0d-new/mythtv/libs/libmythdvdnav/dvdnav/vm/vm.c	2014-05-05 11:54:53.286651837 +0200
@@ -62,7 +62,7 @@
 #include "mythiowrapper.h"
 
 /*
-#define STRICT
+#define DVDNAV_STRICT
 */
 
 /* Local prototypes */
@@ -266,7 +266,7 @@
 /* Initialisation & Destruction */
 
 vm_t* vm_new_vm() {
-  return (vm_t*)calloc(sizeof(vm_t), sizeof(char));
+  return (vm_t*)calloc(1, sizeof(vm_t));
 }
 
 void vm_free_vm(vm_t *vm) {
@@ -1155,7 +1155,7 @@
     case 1: /*  Angle block */
       /* Loop and check each cell instead? So we don't get outside the block? */
       (vm->state).cellN += (vm->state).AGL_REG - 1;
-#ifdef STRICT
+#ifdef DVDNAV_STRICT
       assert((vm->state).cellN <= (vm->state).pgc->nr_of_cells);
       assert((vm->state).pgc->cell_playback[(vm->state).cellN - 1].block_mode != 0);
       assert((vm->state).pgc->cell_playback[(vm->state).cellN - 1].block_type == 1);
