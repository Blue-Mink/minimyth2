From 0937dac17f362ca28ff8e627d58d6b32eecad02f Mon Sep 17 00:00:00 2001
From: Lawrence Rust <lvr@softsystem.co.uk>
Date: Wed, 12 Mar 2014 13:49:41 +0000
Subject: [PATCH 54/56] Transcode: Fix a race condition in VideoDecodeBuffer
 when EOF encountered

Signed-off-by: Lawrence Rust <lvr@softsystem.co.uk>
Signed-off-by: Jean-Yves Avenard <jyavenard@mythtv.org>
---
 mythtv/libs/libmythtv/mythplayer.cpp               |    3 ++
 .../programs/mythtranscode/videodecodebuffer.cpp   |   36 +++++++++++---------
 mythtv/programs/mythtranscode/videodecodebuffer.h  |   25 +++++++-------
 3 files changed, 35 insertions(+), 29 deletions(-)

diff --git a/mythtv/libs/libmythtv/mythplayer.cpp b/mythtv/libs/libmythtv/mythplayer.cpp
index 83bcdb2..3cf495b 100644
--- a/mythtv/libs/libmythtv/mythplayer.cpp
+++ b/mythtv/libs/libmythtv/mythplayer.cpp
@@ -4708,7 +4708,10 @@ bool MythPlayer::TranscodeGetNextFrame(
                 QString("Fast-Forwarding from %1 to %2")
                     .arg(lastDecodedFrameNumber).arg(jumpto));
             if (jumpto >= totalFrames)
+            {
+                SetEof(kEofStateDelayed);
                 return false;
+            }
 
             // For 0.25, move this to DoJumpToFrame(jumpto)
             WaitForSeek(jumpto, 0);
diff --git a/mythtv/programs/mythtranscode/videodecodebuffer.cpp b/mythtv/programs/mythtranscode/videodecodebuffer.cpp
index 73d23e0..b6bbdf9 100644
--- a/mythtv/programs/mythtranscode/videodecodebuffer.cpp
+++ b/mythtv/programs/mythtranscode/videodecodebuffer.cpp
@@ -1,11 +1,14 @@
 #include "videodecodebuffer.h"
 
+#include "mythplayer.h"
+#include "videooutbase.h"
+
 VideoDecodeBuffer::VideoDecodeBuffer(MythPlayer *player, VideoOutput *videoout,
                                      bool cutlist, int size)
   : m_player(player),         m_videoOutput(videoout),
-    m_honorCutlist(cutlist),
-    m_eof(false),             m_maxFrames(size),
-    m_runThread(true),        m_isRunning(false)
+    m_honorCutlist(cutlist),  m_maxFrames(size),
+    m_runThread(true),        m_isRunning(false),
+    m_eof(false)
 {
 
 }
@@ -35,8 +38,12 @@ void VideoDecodeBuffer::run()
     m_isRunning = true;
     while (m_runThread)
     {
+        QMutexLocker locker(&m_queueLock);
+
         if (m_frameList.size() < m_maxFrames && !m_eof)
         {
+            locker.unlock();
+
             DecodedFrameInfo tfInfo;
             tfInfo.frame = NULL;
             tfInfo.didFF = 0;
@@ -47,21 +54,22 @@ void VideoDecodeBuffer::run()
             {
                 tfInfo.frame = m_videoOutput->GetLastDecodedFrame();
 
-                QMutexLocker locker(&m_queueLock);
+                locker.relock();
                 m_frameList.append(tfInfo);
             }
-            else
+            else if (m_player->GetEof() != kEofStateNone)
             {
+                locker.relock();
                 m_eof = true;
             }
+            else
+                continue;
 
             m_frameWaitCond.wakeAll();
         }
         else
         {
-            m_frameWaitLock.lock();
-            m_frameWaitCond.wait(&m_frameWaitLock);
-            m_frameWaitLock.unlock();
+            m_frameWaitCond.wait(locker.mutex());
         }
     }
     m_isRunning = false;
@@ -69,27 +77,21 @@ void VideoDecodeBuffer::run()
 
 VideoFrame *VideoDecodeBuffer::GetFrame(int &didFF, bool &isKey)
 {
-    m_queueLock.lock();
+    QMutexLocker locker(&m_queueLock);
 
     if (m_frameList.isEmpty())
     {
-        m_queueLock.unlock();
-
         if (m_eof)
             return NULL;
 
-        m_frameWaitLock.lock();
-        m_frameWaitCond.wait(&m_frameWaitLock);
-        m_frameWaitLock.unlock();
+        m_frameWaitCond.wait(locker.mutex());
 
         if (m_frameList.isEmpty())
             return NULL;
-
-        m_queueLock.lock();
     }
 
     DecodedFrameInfo tfInfo = m_frameList.takeFirst();
-    m_queueLock.unlock();
+    locker.unlock();
     m_frameWaitCond.wakeAll();
 
     didFF = tfInfo.didFF;
diff --git a/mythtv/programs/mythtranscode/videodecodebuffer.h b/mythtv/programs/mythtranscode/videodecodebuffer.h
index 50c33d0..b4e241a 100644
--- a/mythtv/programs/mythtranscode/videodecodebuffer.h
+++ b/mythtv/programs/mythtranscode/videodecodebuffer.h
@@ -6,18 +6,20 @@
 #include <QMutex>
 #include <QRunnable>
 
-#include "mythplayer.h"
 #include "videooutbase.h"
 
+class MythPlayer;
+class VideoOutput;
+
 class VideoDecodeBuffer : public QRunnable
 {
   public:
     VideoDecodeBuffer(MythPlayer *player, VideoOutput *videoout,
         bool cutlist, int size = 5);
-    ~VideoDecodeBuffer();
+    virtual ~VideoDecodeBuffer();
 
-    void        stop(void);
-    void        run();
+    void          stop(void);
+    virtual void run();
     VideoFrame *GetFrame(int &didFF, bool &isKey);
 
   private:
@@ -28,17 +30,16 @@ class VideoDecodeBuffer : public QRunnable
         bool        isKey;
     } DecodedFrameInfo;
 
-    MythPlayer             *m_player;
-    VideoOutput            *m_videoOutput;
-    bool                    m_honorCutlist;
+    MythPlayer * const      m_player;
+    VideoOutput * const     m_videoOutput;
+    bool const              m_honorCutlist;
+    int const               m_maxFrames;
+    bool volatile           m_runThread;
+    bool volatile           m_isRunning;
+    QMutex mutable          m_queueLock; // Guards the following...
     bool                    m_eof;
-    int                     m_maxFrames;
-    bool                    m_runThread;
-    bool                    m_isRunning;
-    QMutex                  m_queueLock;
     QList<DecodedFrameInfo> m_frameList;
     QWaitCondition          m_frameWaitCond;
-    QMutex                  m_frameWaitLock;
 };
 
 #endif
-- 
1.7.10.2

