From 5c782b83cbcad416e6899b68a11732241459df41 Mon Sep 17 00:00:00 2001
From: Jean-Yves Avenard <jyavenard@mythtv.org>
Date: Sat, 7 Jun 2014 01:34:18 +1000
Subject: [PATCH 02/13] Add MythAVFrame and mythavutil.h

Convenience class to allocate an AVFrame on the heap, maki
---
 mythtv/libs/libmythtv/libmythtv.pro |    3 +-
 mythtv/libs/libmythtv/mythavutil.h  |   65 +++++++++++++++++++++++++++++++++++
 2 files changed, 67 insertions(+), 1 deletion(-)
 create mode 100644 mythtv/libs/libmythtv/mythavutil.h

diff --git a/mythtv/libs/libmythtv/libmythtv.pro b/mythtv/libs/libmythtv/libmythtv.pro
index 37b8455..e69cf8e 100644
--- a/mythtv/libs/libmythtv/libmythtv.pro
+++ b/mythtv/libs/libmythtv/libmythtv.pro
@@ -142,6 +142,7 @@ HEADERS += avfringbuffer.h
 HEADERS += ringbuffer.h             fileringbuffer.h
 HEADERS += streamingringbuffer.h    metadataimagehelper.h
 HEADERS += icringbuffer.h
+HEADERS += mythavutil.h
 
 SOURCES += recordinginfo.cpp
 SOURCES += dbcheck.cpp
@@ -248,7 +249,7 @@ SOURCES += srtwriter.cpp
 
 inc.path = $${PREFIX}/include/mythtv/
 inc.files  = playgroup.h
-inc.files += mythtvexp.h            metadataimagehelper.h
+inc.files += mythtvexp.h            metadataimagehelper.h mythavutil.h
 
 INSTALLS += inc
 
diff --git a/mythtv/libs/libmythtv/mythavutil.h b/mythtv/libs/libmythtv/mythavutil.h
new file mode 100644
index 0000000..4444c4b
--- /dev/null
+++ b/mythtv/libs/libmythtv/mythavutil.h
@@ -0,0 +1,65 @@
+//
+//  mythavutil.h
+//  MythTV
+//
+//  Created by Jean-Yves Avenard on 7/06/2014.
+//  Copyright (c) 2014 Bubblestuff Pty Ltd. All rights reserved.
+//
+
+#ifndef MythTV_mythavutil_h
+#define MythTV_mythavutil_h
+
+extern "C" {
+#include "libavutil/avutil.h"
+}
+
+/** MythAVFrame
+ * little utility class that act as a safe way to allocate an AVFrame
+ * which can then be allocated on the heap. It simplifies the need to free
+ * the AVFrame once done with it.
+ * Example of usage:
+ * {
+ *   MythAVFrame frame;
+ *   if (!frame)
+ *   {
+ *     return false
+ *   }
+ *
+ *   frame->width = 1080;
+ *
+ *   AVFrame *src = frame;
+ * }
+ */
+class MythAVFrame
+{
+public:
+    MythAVFrame(void)
+    {
+        m_frame = av_frame_alloc();
+    }
+    ~MythAVFrame(void)
+    {
+        av_frame_free(&m_frame);
+    }
+    bool operator !() const
+    {
+        return m_frame == NULL;
+    }
+    AVFrame* operator->()
+    {
+        return m_frame;
+    }
+    AVFrame& operator*()
+    {
+        return *m_frame;
+    }
+    operator AVFrame*()
+    {
+        return m_frame;
+    }
+
+private:
+    AVFrame *m_frame;
+};
+
+#endif
-- 
1.7.10.2

