From ef54e6602da8e64b155337929e626030a62c835f Mon Sep 17 00:00:00 2001
From: Jean-Yves Avenard <jyavenard@mythtv.org>
Date: Tue, 10 Jun 2014 13:06:28 +1000
Subject: [PATCH 2/2] Fix VAAPI accelerated PiP

PiP wasn't possible with VAAPI playback. There was the issue that only one VAAPI context was allowed at a time, and then the frame retrieved couldn't be used as-is (fixed with 520b8bceb57235bba397fe7c15e12bc25f365ca5)

Drop VAAPI NV12 frame format support, the conversion to YV12 as it is is buggy and from a quick search/test, all VAAPI backends support either YV12 or YUV420P format, so there's no use for it anyway.
---
 mythtv/libs/libmythtv/vaapicontext.cpp       |   56 ++++++++------------------
 mythtv/libs/libmythtv/videoout_nullvaapi.cpp |    2 +-
 2 files changed, 18 insertions(+), 40 deletions(-)

diff --git a/mythtv/libs/libmythtv/vaapicontext.cpp b/mythtv/libs/libmythtv/vaapicontext.cpp
index 4b6f075..af2e37b 100644
--- a/mythtv/libs/libmythtv/vaapicontext.cpp
+++ b/mythtv/libs/libmythtv/vaapicontext.cpp
@@ -673,9 +673,8 @@ bool VAAPIContext::InitImage(const void *buf)
     const vaapi_surface *surf = (vaapi_surface*)buf;
     for (int i = 0; i < num_formats; i++)
     {
-        if(formats[i].fourcc == VA_FOURCC('Y','V','1','2') ||
-           formats[i].fourcc == VA_FOURCC('I','4','2','0') ||
-           formats[i].fourcc == VA_FOURCC('N','V','1','2'))
+        if (formats[i].fourcc == VA_FOURCC('Y','V','1','2') ||
+            formats[i].fourcc == VA_FOURCC('I','4','2','0'))
         {
             if (vaCreateImage(m_ctx.display, &formats[i],
                               m_size.width(), m_size.height(), &m_image))
@@ -739,46 +738,25 @@ bool VAAPIContext::CopySurfaceToFrame(VideoFrame *frame, const void *buf)
         if (vaMapBuffer(m_ctx.display, m_image.buf, &source))
             return false;
 
-        if (m_image.format.fourcc == VA_FOURCC('Y','V','1','2') ||
-            m_image.format.fourcc == VA_FOURCC('I','4','2','0'))
-        {
-            bool swap = m_image.format.fourcc == VA_FOURCC('Y','V','1','2');
-            VideoFrame src;
-            init(&src, FMT_YV12, (unsigned char*)source, m_image.width,
-                 m_image.height, m_image.data_size, NULL,
-                 NULL, frame->aspect, frame->frame_rate);
-            src.pitches[0] = m_image.pitches[0];
-            src.pitches[1] = m_image.pitches[swap ? 2 : 1];
-            src.pitches[2] = m_image.pitches[swap ? 1 : 2];
-            src.offsets[0] = m_image.offsets[0];
-            src.offsets[1] = m_image.offsets[swap ? 2 : 1];
-            src.offsets[2] = m_image.offsets[swap ? 1 : 2];
-            copy(frame, &src);
-        }
-        else if (m_image.format.fourcc == VA_FOURCC('N','V','1','2'))
-        {
-            AVPicture img_in, img_out;
-            avpicture_fill(&img_out, (uint8_t *)frame->buf, PIX_FMT_YUV420P,
-                           frame->width, frame->height);
-            avpicture_fill(&img_in, (uint8_t *)source, PIX_FMT_NV12,
-                           m_image.width, m_image.height);
-            myth_sws_img_convert(&img_out, PIX_FMT_YUV420P,
-                                 &img_in, PIX_FMT_NV12,
-                                 frame->width, frame->height);
-            // Is this needed? Is it safe?
-            frame->pitches[0] = img_out.linesize[0];
-            frame->pitches[1] = img_out.linesize[1];
-            frame->pitches[2] = img_out.linesize[2];
-            frame->offsets[0] = 0;
-            frame->offsets[1] = img_out.data[1] - img_out.data[0];
-            frame->offsets[2] = img_out.data[2] - img_out.data[0];
-        }
+        bool swap = m_image.format.fourcc == VA_FOURCC('Y','V','1','2');
+        VideoFrame src;
+        init(&src, FMT_YV12, (unsigned char*)source, m_image.width,
+             m_image.height, m_image.data_size, NULL,
+             NULL, frame->aspect, frame->frame_rate);
+        src.pitches[0] = m_image.pitches[0];
+        src.pitches[1] = m_image.pitches[swap ? 2 : 1];
+        src.pitches[2] = m_image.pitches[swap ? 1 : 2];
+        src.offsets[0] = m_image.offsets[0];
+        src.offsets[1] = m_image.offsets[swap ? 2 : 1];
+        src.offsets[2] = m_image.offsets[swap ? 1 : 2];
+        copy(frame, &src);
+
         if (vaUnmapBuffer(m_ctx.display, m_image.buf))
             return false;
-    }
 
-    if (ok)
         return true;
+    }
+
     LOG(VB_GENERAL, LOG_ERR, LOC + "Failed to get image");
     return false;
 }
diff --git a/mythtv/libs/libmythtv/videoout_nullvaapi.cpp b/mythtv/libs/libmythtv/videoout_nullvaapi.cpp
index f710b44..bce40ae 100644
--- a/mythtv/libs/libmythtv/videoout_nullvaapi.cpp
+++ b/mythtv/libs/libmythtv/videoout_nullvaapi.cpp
@@ -45,7 +45,7 @@ bool VideoOutputNullVAAPI::CreateVAAPIContext(QSize size)
         DeleteVAAPIContext();
 
     m_ctx = new VAAPIContext(kVADisplayX11, video_codec_id);
-    if (m_ctx && m_ctx->CreateDisplay(size))
+    if (m_ctx && m_ctx->CreateDisplay(size, true))
         return true;
     return false;
 }
-- 
1.7.10.2

