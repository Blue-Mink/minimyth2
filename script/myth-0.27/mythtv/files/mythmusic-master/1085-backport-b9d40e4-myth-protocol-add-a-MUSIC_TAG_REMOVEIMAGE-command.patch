From b9d40e4075aea4706736d4edec2761225ad76b46 Mon Sep 17 00:00:00 2001
From: Paul Harrison <pharrison@mythtv.org>
Date: Sun, 9 Mar 2014 22:30:52 +0000
Subject: [PATCH 3/6] myth protocol: add a MUSIC_TAG_REMOVEIMAGE command

This command will be used by the music metadata editor to remove an image from
a tracks tag.

format: MUSIC_TAG_REMOVEIMAGE <hostname> <songid> <imageid>
---
 mythtv/programs/mythbackend/mainserver.cpp |  137 ++++++++++++++++++++++++++++
 mythtv/programs/mythbackend/mainserver.h   |    1 +
 2 files changed, 138 insertions(+)

diff --git a/mythtv/programs/mythbackend/mainserver.cpp b/mythtv/programs/mythbackend/mainserver.cpp
index 491fc5b..dcd9a32 100644
--- a/mythtv/programs/mythbackend/mainserver.cpp
+++ b/mythtv/programs/mythbackend/mainserver.cpp
@@ -845,6 +845,13 @@ void MainServer::ProcessRequestWork(MythSocket *sock)
         else
             HandleMusicTagAddImage(listline, pbs);
     }
+    else if (command == "MUSIC_TAG_REMOVEIMAGE")
+    {
+        if (tokens.size() < 4)
+            LOG(VB_GENERAL, LOG_ERR, LOC + "Bad MUSIC_TAG_REMOVEIMAGE");
+        else
+            HandleMusicTagRemoveImage(listline, pbs);
+    }
     else if (command == "ALLOW_SHUTDOWN")
     {
         if (tokens.size() != 1)
@@ -5890,6 +5897,136 @@ void MainServer::HandleMusicTagAddImage(const QStringList& slist, PlaybackSock*
         SendResponse(pbssock, strlist);
 }
 
+void MainServer::HandleMusicTagRemoveImage(const QStringList& slist, PlaybackSock* pbs)
+{
+// format: MUSIC_TAG_REMOVEIMAGE <hostname> <songid> <imageid>
+
+    QStringList strlist;
+
+    MythSocket *pbssock = pbs->getSocket();
+
+    QString hostname = slist[1];
+
+    if (ismaster && hostname != gCoreContext->GetHostName())
+    {
+        // forward the request to the slave BE
+        PlaybackSock *slave = GetMediaServerByHostname(hostname);
+        if (slave)
+        {
+            LOG(VB_GENERAL, LOG_INFO, LOC +
+                QString("HandleMusicTagRemoveImage: asking slave '%1' "
+                        "to remove the image").arg(hostname));
+            strlist = slave->ForwardRequest(slist);
+            slave->DecrRef();
+
+            if (pbssock)
+                SendResponse(pbssock, strlist);
+
+            return;
+        }
+        else
+        {
+            LOG(VB_GENERAL, LOG_INFO, LOC +
+                QString("HandleMusicTagRemoveImage: Failed to grab "
+                        "slave socket on '%1'").arg(hostname));
+
+            strlist << "ERROR: slave not found";
+
+            if (pbssock)
+                SendResponse(pbssock, strlist);
+
+            return;
+        }
+    }
+    else
+    {
+        int songID = slist[2].toInt();
+        int imageID = slist[3].toInt();
+
+        // load the metadata from the database
+        MusicMetadata *mdata = MusicMetadata::createFromID(songID);
+
+        if (!mdata)
+        {
+            LOG(VB_GENERAL, LOG_ERR, LOC +
+                QString("HandleMusicTagRemoveImage: Cannot find metadata for trackid: %1")
+                        .arg(songID));
+
+            strlist << "ERROR: track not found";
+
+            if (pbssock)
+                SendResponse(pbssock, strlist);
+
+            return;
+        }
+
+        MetaIO *tagger = mdata->getTagger();
+
+        if (!tagger)
+        {
+            LOG(VB_GENERAL, LOG_ERR, LOC +
+                "HandleMusicTagRemoveImage: failed to find a tagger for track");
+
+            strlist << "ERROR: tagger not found";
+
+            if (pbssock)
+                SendResponse(pbssock, strlist);
+
+            delete mdata;
+            return;
+        }
+
+        if (!tagger->supportsEmbeddedImages())
+        {
+            LOG(VB_GENERAL, LOG_ERR, LOC + "HandleMusicTagRemoveImage: asked to remove album art "
+                                           "from the tag but the tagger doesn't support it!");
+
+            strlist << "ERROR: embedded images not supported by tag";
+
+            if (pbssock)
+                SendResponse(pbssock, strlist);
+
+            delete mdata;
+            delete tagger;
+            return;
+        }
+
+        AlbumArtImage *image = mdata->getAlbumArtImages()->getImageByID(imageID);
+        if (!image)
+        {
+            LOG(VB_GENERAL, LOG_ERR, LOC +
+                QString("HandleMusicTagRemoveImage: Cannot find image for imageid: %1")
+                        .arg(imageID));
+
+            strlist << "ERROR: image not found";
+
+            if (pbssock)
+                SendResponse(pbssock, strlist);
+
+            delete mdata;
+            delete tagger;
+            return;
+        }
+
+        if (!tagger->removeAlbumArt(mdata->getLocalFilename(), image))
+        {
+            LOG(VB_GENERAL, LOG_ERR, LOC + "HandleMusicTagRemoveImage: failed to remove album art from tag");
+
+            strlist << "ERROR: failed to remove album art from tag";
+
+            if (pbssock)
+                SendResponse(pbssock, strlist);
+
+            return;
+        }
+    }
+
+    strlist << "OK";
+
+    if (pbssock)
+        SendResponse(pbssock, strlist);
+}
+
 void MainServer::HandleFileTransferQuery(QStringList &slist,
                                          QStringList &commands,
                                          PlaybackSock *pbs)
diff --git a/mythtv/programs/mythbackend/mainserver.h b/mythtv/programs/mythbackend/mainserver.h
index 35e5349..8ebf88a 100644
--- a/mythtv/programs/mythbackend/mainserver.h
+++ b/mythtv/programs/mythbackend/mainserver.h
@@ -222,6 +222,7 @@ class MainServer : public QObject, public MythSocketCBs
     void HandleMusicFindAlbumArt(const QStringList &slist, PlaybackSock *pbs);
     void HandleMusicTagGetImage(const QStringList &slist, PlaybackSock *pbs);
     void HandleMusicTagAddImage(const QStringList &slist, PlaybackSock *pbs);
+    void HandleMusicTagRemoveImage(const QStringList &slist, PlaybackSock *pbs);
     void HandleMusicCalcTrackLen(const QStringList &slist, PlaybackSock *pbs);
     void HandleVersion(MythSocket *socket, const QStringList &slist);
     void HandleBackendRefresh(MythSocket *socket);
-- 
1.7.10.2

