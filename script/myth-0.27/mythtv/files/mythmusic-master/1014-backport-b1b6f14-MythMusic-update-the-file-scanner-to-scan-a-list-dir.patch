diff -Naur mythtv-0.27-20140204-g1b7404d-old/mythtv/libs/libmythmetadata/musicfilescanner.cpp mythtv-0.27-20140204-g1b7404d-new/mythtv/libs/libmythmetadata/musicfilescanner.cpp
--- mythtv-0.27-20140204-g1b7404d-old/mythtv/libs/libmythmetadata/musicfilescanner.cpp	2014-02-05 16:36:33.872568222 +0100
+++ mythtv-0.27-20140204-g1b7404d-new/mythtv/libs/libmythmetadata/musicfilescanner.cpp	2014-02-05 16:36:47.659172946 +0100
@@ -555,15 +555,15 @@
 }
 
 /*!
- * \brief Scan a directory recursively for music and albumart.
+ * \brief Scan a list of directories recursively for music and albumart.
  *        Inserts, updates and removes any files any files found in the
  *        database.
  *
- * \param directory Directory to scan
+ * \param dirList List of directories to scan
  *
  * \returns Nothing.
  */
-void MusicFileScanner::SearchDir(QString &directory)
+void MusicFileScanner::SearchDirs(const QStringList &dirList)
 {
     QString host = gCoreContext->GetHostName();
 
@@ -604,8 +604,6 @@
     QString status = QString("running");
     updateLastRunStatus(status);
 
-    m_startdir = directory;
-
     m_tracksTotal = m_tracksAdded = m_tracksUnchanged = m_tracksRemoved = m_tracksUpdated = 0;
     m_coverartTotal = m_coverartAdded = m_coverartUnchanged = m_coverartRemoved = m_coverartUpdated = 0;
 
@@ -613,54 +611,59 @@
     MusicLoadedMap art_files;
     MusicLoadedMap::Iterator iter;
 
-    LOG(VB_GENERAL, LOG_INFO, "Searching filesystem for music files");
+    for (int x = 0; x < dirList.count(); x++)
+    {
+        m_startdir = dirList[x];
 
-    BuildFileList(m_startdir, music_files, art_files, 0);
+        LOG(VB_GENERAL, LOG_INFO, QString("Searching '%1' for music files").arg(m_startdir));
 
-    m_tracksTotal = music_files.count();
-    m_coverartTotal = art_files.count();
+        BuildFileList(m_startdir, music_files, art_files, 0);
 
-    ScanMusic(music_files);
-    ScanArtwork(art_files);
+        m_tracksTotal = music_files.count();
+        m_coverartTotal = art_files.count();
 
-    LOG(VB_GENERAL, LOG_INFO, "Updating database");
+        ScanMusic(music_files);
+        ScanArtwork(art_files);
 
-     /*
-       This can be optimised quite a bit by consolidating all commands
-       via a lot of refactoring.
+        LOG(VB_GENERAL, LOG_INFO, "Updating database");
 
-       1) group all files of the same decoder type, and don't
-       create/delete a Decoder pr. AddFileToDB. Or make Decoders be
-       singletons, it should be a fairly simple change.
+            /*
+            This can be optimised quite a bit by consolidating all commands
+            via a lot of refactoring.
 
-       2) RemoveFileFromDB should group the remove into one big SQL.
+            1) group all files of the same decoder type, and don't
+            create/delete a Decoder pr. AddFileToDB. Or make Decoders be
+            singletons, it should be a fairly simple change.
 
-       3) UpdateFileInDB, same as 1.
-     */
+            2) RemoveFileFromDB should group the remove into one big SQL.
 
-    for (iter = music_files.begin(); iter != music_files.end(); iter++)
-    {
-        if (*iter == MusicFileScanner::kFileSystem)
-            AddFileToDB(iter.key());
-        else if (*iter == MusicFileScanner::kDatabase)
-            RemoveFileFromDB(iter.key());
-        else if (*iter == MusicFileScanner::kNeedUpdate)
+            3) UpdateFileInDB, same as 1.
+            */
+
+        for (iter = music_files.begin(); iter != music_files.end(); iter++)
         {
-            UpdateFileInDB(iter.key());
-            ++m_tracksUpdated;
+            if (*iter == MusicFileScanner::kFileSystem)
+                AddFileToDB(iter.key());
+            else if (*iter == MusicFileScanner::kDatabase)
+                RemoveFileFromDB(iter.key());
+            else if (*iter == MusicFileScanner::kNeedUpdate)
+            {
+                UpdateFileInDB(iter.key());
+                ++m_tracksUpdated;
+            }
         }
-    }
 
-    for (iter = art_files.begin(); iter != art_files.end(); iter++)
-    {
-        if (*iter == MusicFileScanner::kFileSystem)
-            AddFileToDB(iter.key());
-        else if (*iter == MusicFileScanner::kDatabase)
-            RemoveFileFromDB(iter.key());
-        else if (*iter == MusicFileScanner::kNeedUpdate)
+        for (iter = art_files.begin(); iter != art_files.end(); iter++)
         {
-            UpdateFileInDB(iter.key());
-            ++m_coverartUpdated;
+            if (*iter == MusicFileScanner::kFileSystem)
+                AddFileToDB(iter.key());
+            else if (*iter == MusicFileScanner::kDatabase)
+                RemoveFileFromDB(iter.key());
+            else if (*iter == MusicFileScanner::kNeedUpdate)
+            {
+                UpdateFileInDB(iter.key());
+                ++m_coverartUpdated;
+            }
         }
     }
 
diff -Naur mythtv-0.27-20140204-g1b7404d-old/mythtv/libs/libmythmetadata/musicfilescanner.h mythtv-0.27-20140204-g1b7404d-new/mythtv/libs/libmythmetadata/musicfilescanner.h
--- mythtv-0.27-20140204-g1b7404d-old/mythtv/libs/libmythmetadata/musicfilescanner.h	2014-02-05 16:36:33.872568222 +0100
+++ mythtv-0.27-20140204-g1b7404d-new/mythtv/libs/libmythmetadata/musicfilescanner.h	2014-02-05 16:36:47.659172946 +0100
@@ -26,7 +26,7 @@
         MusicFileScanner(void);
         ~MusicFileScanner(void);
 
-        void SearchDir(QString &directory);
+        void SearchDirs(const QStringList &directory);
 
         static bool IsRunning(void);
 
diff -Naur mythtv-0.27-20140204-g1b7404d-old/mythtv/programs/mythutil/musicmetautils.cpp mythtv-0.27-20140204-g1b7404d-new/mythtv/programs/mythutil/musicmetautils.cpp
--- mythtv-0.27-20140204-g1b7404d-old/mythtv/programs/mythutil/musicmetautils.cpp	2014-02-05 16:36:36.789221717 +0100
+++ mythtv-0.27-20140204-g1b7404d-new/mythtv/programs/mythutil/musicmetautils.cpp	2014-02-05 16:36:47.659172946 +0100
@@ -1,6 +1,7 @@
 // libmyth* headers
 #include "exitcodes.h"
 #include "mythlogging.h"
+#include "storagegroup.h"
 #include "musicmetadata.h"
 #include "metaio.h"
 #include "mythcontext.h"
@@ -80,8 +81,19 @@
 static int ScanMusic(const MythUtilCommandLineParser &cmdline)
 {
     MusicFileScanner *fscan = new MusicFileScanner();
-    QString musicDir = getMusicDirectory();
-    fscan->SearchDir(musicDir);
+    QStringList dirList;
+
+#if 0
+    if (!StorageGroup::FindDirs("Music", gCoreContext->GetHostName(), &dirList))
+    {
+        LOG(VB_GENERAL, LOG_ERR, "Failed to find any directories in the 'Music' storage group");
+        return GENERIC_EXIT_NOT_OK;
+    }
+#else
+    dirList << getMusicDirectory();
+#endif
+
+    fscan->SearchDirs(dirList);
     delete fscan;
 
     return GENERIC_EXIT_OK;
