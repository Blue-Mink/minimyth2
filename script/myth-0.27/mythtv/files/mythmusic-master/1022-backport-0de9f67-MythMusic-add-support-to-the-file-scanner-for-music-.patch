diff -Naur mythtv-0.27-20140204-g1b7404d-old/mythtv/libs/libmythmetadata/musicfilescanner.cpp mythtv-0.27-20140204-g1b7404d-new/mythtv/libs/libmythmetadata/musicfilescanner.cpp
--- mythtv-0.27-20140204-g1b7404d-old/mythtv/libs/libmythmetadata/musicfilescanner.cpp	2014-02-05 16:37:40.192270247 +0100
+++ mythtv-0.27-20140204-g1b7404d-new/mythtv/libs/libmythmetadata/musicfilescanner.cpp	2014-02-05 16:37:53.395545681 +0100
@@ -101,7 +101,7 @@
         {
 
             QString dir(filename);
-            dir.remove(0, m_startdir.length());
+            dir.remove(0, m_startDirs.last().length());
 
             newparentid = m_directoryid[dir];
 
@@ -127,9 +127,19 @@
         else
         {
             if (IsArtFile(filename))
-                art_files[filename] = MusicFileScanner::kFileSystem;
+            {
+                MusicFileData fdata;
+                fdata.startDir = m_startDirs.last();
+                fdata.location = MusicFileScanner::kFileSystem;
+                art_files[filename] = fdata;
+            }
             else if (IsMusicFile(filename))
-                music_files[filename] = MusicFileScanner::kFileSystem;
+            {
+                MusicFileData fdata;
+                fdata.startDir = m_startDirs.last();
+                fdata.location = MusicFileScanner::kFileSystem;
+                music_files[filename] = fdata;
+            }
             else
                 LOG(VB_GENERAL, LOG_INFO,
                         QString("Found file with unsupported extension %1")
@@ -250,11 +260,11 @@
  *
  * \returns Nothing.
  */
-void MusicFileScanner::AddFileToDB(const QString &filename)
+void MusicFileScanner::AddFileToDB(const QString &filename, const QString &startDir)
 {
     QString extension = filename.section( '.', -1 ) ;
     QString directory = filename;
-    directory.remove(0, m_startdir.length());
+    directory.remove(0, startDir.length());
     directory = directory.section( '/', 0, -2);
 
     QString nameFilter = gCoreContext->GetSetting("AlbumArtFilter", "*.png;*.jpg;*.jpeg;*.gif;*.bmp");
@@ -265,11 +275,14 @@
         QString name = filename.section( '/', -1);
 
         MSqlQuery query(MSqlQuery::InitCon());
-        query.prepare("INSERT INTO music_albumart SET filename = :FILE, "
-                      "directory_id = :DIRID, imagetype = :TYPE;");
+        query.prepare("INSERT INTO music_albumart "
+                       "SET filename = :FILE, directory_id = :DIRID, "
+                       "imagetype = :TYPE, hostname = :HOSTNAME;");
+
         query.bindValue(":FILE", name);
         query.bindValue(":DIRID", m_directoryid[directory]);
         query.bindValue(":TYPE", AlbumArtImages::guessImageType(name));
+        query.bindValue(":HOSTNAME", gCoreContext->GetHostName());
 
         if (!query.exec() || query.numRowsAffected() <= 0)
         {
@@ -292,6 +305,7 @@
     if (data)
     {
         data->setFileSize((quint64)QFileInfo(filename).size());
+        data->setHostname(gCoreContext->GetHostName());
 
         QString album_cache_string;
 
@@ -434,10 +448,10 @@
  *
  * \returns Nothing.
  */
-void MusicFileScanner::RemoveFileFromDB (const QString &filename)
+void MusicFileScanner::RemoveFileFromDB(const QString &filename, const QString &startDir)
 {
     QString sqlfilename(filename);
-    sqlfilename.remove(0, m_startdir.length());
+    sqlfilename.remove(0, startDir.length());
     // We know that the filename will not contain :// as the SQL limits this
     QString directory = sqlfilename.section( '/', 0, -2 ) ;
     sqlfilename = sqlfilename.section( '/', -1 ) ;
@@ -482,10 +496,10 @@
  *
  * \returns Nothing.
  */
-void MusicFileScanner::UpdateFileInDB(const QString &filename)
+void MusicFileScanner::UpdateFileInDB(const QString &filename, const QString &startDir)
 {
     QString directory = filename;
-    directory.remove(0, m_startdir.length());
+    directory.remove(0, startDir.length());
     directory = directory.section( '/', 0, -2);
 
     MusicMetadata *db_meta   = MetaIO::getMetadata(filename);
@@ -534,6 +548,8 @@
 
         disk_meta->setFileSize((quint64)QFileInfo(filename).size());
 
+        disk_meta->setHostname(gCoreContext->GetHostName());
+
         // Commit track info to database
         disk_meta->dumpToDatabase();
 
@@ -613,57 +629,57 @@
 
     for (int x = 0; x < dirList.count(); x++)
     {
-        m_startdir = dirList[x];
-
-        LOG(VB_GENERAL, LOG_INFO, QString("Searching '%1' for music files").arg(m_startdir));
+        QString startDir = dirList[x];
+        m_startDirs.append(startDir + '/');
+        LOG(VB_GENERAL, LOG_INFO, QString("Searching '%1' for music files").arg(startDir));
 
-        BuildFileList(m_startdir, music_files, art_files, 0);
+        BuildFileList(startDir, music_files, art_files, 0);
+    }
 
-        m_tracksTotal = music_files.count();
-        m_coverartTotal = art_files.count();
+    m_tracksTotal = music_files.count();
+    m_coverartTotal = art_files.count();
 
-        ScanMusic(music_files);
-        ScanArtwork(art_files);
+    ScanMusic(music_files);
+    ScanArtwork(art_files);
 
-        LOG(VB_GENERAL, LOG_INFO, "Updating database");
+    LOG(VB_GENERAL, LOG_INFO, "Updating database");
 
-            /*
-            This can be optimised quite a bit by consolidating all commands
-            via a lot of refactoring.
+        /*
+        This can be optimised quite a bit by consolidating all commands
+        via a lot of refactoring.
 
-            1) group all files of the same decoder type, and don't
-            create/delete a Decoder pr. AddFileToDB. Or make Decoders be
-            singletons, it should be a fairly simple change.
+        1) group all files of the same decoder type, and don't
+        create/delete a Decoder pr. AddFileToDB. Or make Decoders be
+        singletons, it should be a fairly simple change.
 
-            2) RemoveFileFromDB should group the remove into one big SQL.
+        2) RemoveFileFromDB should group the remove into one big SQL.
 
-            3) UpdateFileInDB, same as 1.
-            */
+        3) UpdateFileInDB, same as 1.
+        */
 
-        for (iter = music_files.begin(); iter != music_files.end(); iter++)
+    for (iter = music_files.begin(); iter != music_files.end(); iter++)
+    {
+        if ((*iter).location == MusicFileScanner::kFileSystem)
+            AddFileToDB(iter.key(), (*iter).startDir);
+        else if ((*iter).location == MusicFileScanner::kDatabase)
+            RemoveFileFromDB(iter.key(), (*iter).startDir);
+        else if ((*iter).location == MusicFileScanner::kNeedUpdate)
         {
-            if (*iter == MusicFileScanner::kFileSystem)
-                AddFileToDB(iter.key());
-            else if (*iter == MusicFileScanner::kDatabase)
-                RemoveFileFromDB(iter.key());
-            else if (*iter == MusicFileScanner::kNeedUpdate)
-            {
-                UpdateFileInDB(iter.key());
-                ++m_tracksUpdated;
-            }
+            UpdateFileInDB(iter.key(), (*iter).startDir);
+            ++m_tracksUpdated;
         }
+    }
 
-        for (iter = art_files.begin(); iter != art_files.end(); iter++)
+    for (iter = art_files.begin(); iter != art_files.end(); iter++)
+    {
+        if ((*iter).location == MusicFileScanner::kFileSystem)
+            AddFileToDB(iter.key(), (*iter).startDir);
+        else if ((*iter).location == MusicFileScanner::kDatabase)
+            RemoveFileFromDB(iter.key(), (*iter).startDir);
+        else if ((*iter).location == MusicFileScanner::kNeedUpdate)
         {
-            if (*iter == MusicFileScanner::kFileSystem)
-                AddFileToDB(iter.key());
-            else if (*iter == MusicFileScanner::kDatabase)
-                RemoveFileFromDB(iter.key());
-            else if (*iter == MusicFileScanner::kNeedUpdate)
-            {
-                UpdateFileInDB(iter.key());
-                ++m_coverartUpdated;
-            }
+            UpdateFileInDB(iter.key(), (*iter).startDir);
+            ++m_coverartUpdated;
         }
     }
 
@@ -703,10 +719,15 @@
     MusicLoadedMap::Iterator iter;
 
     MSqlQuery query(MSqlQuery::InitCon());
-    if (!query.exec("SELECT CONCAT_WS('/', path, filename), date_modified "
-                    "FROM music_songs LEFT JOIN music_directories ON "
-                    "music_songs.directory_id=music_directories.directory_id "
-                    "WHERE filename NOT LIKE ('%://%')"))
+    query.prepare("SELECT CONCAT_WS('/', path, filename), date_modified "
+                  "FROM music_songs LEFT JOIN music_directories ON "
+                  "music_songs.directory_id=music_directories.directory_id "
+                  "WHERE filename NOT LIKE ('%://%') "
+                  "AND hostname = :HOSTNAME");
+
+    query.bindValue(":HOSTNAME", gCoreContext->GetHostName());
+
+    if (!query.exec())
         MythDB::DBError("MusicFileScanner::ScanMusic", query);
 
     LOG(VB_GENERAL, LOG_INFO, "Checking tracks");
@@ -717,25 +738,27 @@
     {
         while (query.next())
         {
-            name = m_startdir + query.value(0).toString();
-
-            if (name != QString::null)
+            for (int x = 0; x < m_startDirs.count(); x++)
             {
+                name = m_startDirs[x] + query.value(0).toString();
                 if ((iter = music_files.find(name)) != music_files.end())
+                    break;
+            }
+
+            if (iter != music_files.end())
+            {
+                if (music_files[name].location == MusicFileScanner::kDatabase)
+                    continue;
+                else if (HasFileChanged(name, query.value(1).toString()))
+                    music_files[name].location = MusicFileScanner::kNeedUpdate;
+                else
                 {
-                    if (music_files[name] == MusicFileScanner::kDatabase)
-                        continue;
-                    else if (HasFileChanged(name, query.value(1).toString()))
-                        music_files[name] = MusicFileScanner::kNeedUpdate;
-                    else
-                    {
-                        ++m_tracksUnchanged;
-                        music_files.erase(iter);
-                    }
+                    ++m_tracksUnchanged;
+                    music_files.erase(iter);
                 }
-                else
-                    music_files[name] = MusicFileScanner::kDatabase;
             }
+            else
+                music_files[name].location = MusicFileScanner::kDatabase;
         }
     }
 }
@@ -752,39 +775,46 @@
     MusicLoadedMap::Iterator iter;
 
     MSqlQuery query(MSqlQuery::InitCon());
-    if (!query.exec("SELECT CONCAT_WS('/', path, filename) "
-                    "FROM music_albumart LEFT JOIN music_directories ON "
-                    "music_albumart.directory_id=music_directories.directory_id"
-                    " WHERE music_albumart.embedded=0"))
+    query.prepare("SELECT CONCAT_WS('/', path, filename) "
+                  "FROM music_albumart "
+                  "LEFT JOIN music_directories ON music_albumart.directory_id=music_directories.directory_id "
+                  "WHERE music_albumart.embedded = 0 "
+                  "AND music_albumart.hostname = :HOSTNAME");
+
+    query.bindValue(":HOSTNAME", gCoreContext->GetHostName());
+
+    if (!query.exec())
         MythDB::DBError("MusicFileScanner::ScanArtwork", query);
 
     LOG(VB_GENERAL, LOG_INFO, "Checking artwork");
 
+    QString name;
+
     if (query.isActive() && query.size() > 0)
     {
         while (query.next())
         {
-            QString name;
-
-            name = m_startdir + query.value(0).toString();
-
-            if (name != QString::null)
+            for (int x = 0; x < m_startDirs.count(); x++)
             {
+                name = m_startDirs[x] + query.value(0).toString();
                 if ((iter = music_files.find(name)) != music_files.end())
-                {
-                    if (music_files[name] == MusicFileScanner::kDatabase)
-                        continue;
-                    else
-                    {
-                        ++m_coverartUnchanged;
-                        music_files.erase(iter);
-                    }
-                }
+                    break;
+            }
+
+            if (iter != music_files.end())
+            {
+                if (music_files[name].location == MusicFileScanner::kDatabase)
+                    continue;
                 else
                 {
-                    music_files[name] = MusicFileScanner::kDatabase;
+                    ++m_coverartUnchanged;
+                    music_files.erase(iter);
                 }
             }
+            else
+            {
+                music_files[name].location = MusicFileScanner::kDatabase;
+            }
         }
     }
 }
diff -Naur mythtv-0.27-20140204-g1b7404d-old/mythtv/libs/libmythmetadata/musicfilescanner.h mythtv-0.27-20140204-g1b7404d-new/mythtv/libs/libmythmetadata/musicfilescanner.h
--- mythtv-0.27-20140204-g1b7404d-old/mythtv/libs/libmythmetadata/musicfilescanner.h	2014-02-05 16:37:40.192270247 +0100
+++ mythtv-0.27-20140204-g1b7404d-new/mythtv/libs/libmythmetadata/musicfilescanner.h	2014-02-05 16:37:53.395545681 +0100
@@ -21,7 +21,13 @@
         kBoth
     };
 
-    typedef QMap <QString, MusicFileLocation> MusicLoadedMap;
+    struct MusicFileData
+    {
+        QString startDir;
+        MusicFileLocation location;
+    };
+
+    typedef QMap <QString, MusicFileData> MusicLoadedMap;
     public:
         MusicFileScanner(void);
         ~MusicFileScanner(void);
@@ -34,9 +40,9 @@
         void BuildFileList(QString &directory, MusicLoadedMap &music_files, MusicLoadedMap &art_files, int parentid);
         int  GetDirectoryId(const QString &directory, const int &parentid);
         bool HasFileChanged(const QString &filename, const QString &date_modified);
-        void AddFileToDB(const QString &filename);
-        void RemoveFileFromDB (const QString &filename);
-        void UpdateFileInDB(const QString &filename);
+        void AddFileToDB(const QString &filename, const QString &startDir);
+        void RemoveFileFromDB (const QString &filename, const QString &startDir);
+        void UpdateFileInDB(const QString &filename, const QString &startDir);
         void ScanMusic(MusicLoadedMap &music_files);
         void ScanArtwork(MusicLoadedMap &music_files);
         void cleanDB();
@@ -47,7 +53,7 @@
         void updateLastRunStart(void);
         void updateLastRunStatus(QString &status);
 
-        QString  m_startdir;
+        QStringList  m_startDirs;
         IdCache  m_directoryid;
         IdCache  m_artistid;
         IdCache  m_genreid;
