From d7e6e24aeb2bb6c1cb4c173402c42ddf67472580 Mon Sep 17 00:00:00 2001
From: Paul Harrison <pharrison@mythtv.org>
Date: Fri, 18 Apr 2014 16:42:19 +0100
Subject: [PATCH 1/4] MythMusic: allow some views to be nested so you can
 return to previous views

This allows you to for example switch to the full screen visualiser from the
playlist and playlist editor views and when you exit the visualiser you will
return to the previous view you was on rather than exit MythMusic.
---
 mythplugins/mythmusic/mythmusic/main.cpp           |    6 +-
 mythplugins/mythmusic/mythmusic/miniplayer.cpp     |    2 +-
 mythplugins/mythmusic/mythmusic/musiccommon.cpp    |  296 +++++++++++++-------
 mythplugins/mythmusic/mythmusic/musiccommon.h      |    8 +-
 .../mythmusic/mythmusic/playlisteditorview.cpp     |   12 +-
 .../mythmusic/mythmusic/playlisteditorview.h       |    3 +-
 mythplugins/mythmusic/mythmusic/playlistview.cpp   |   43 +--
 mythplugins/mythmusic/mythmusic/playlistview.h     |    5 +-
 mythplugins/mythmusic/mythmusic/searchview.cpp     |    6 +-
 mythplugins/mythmusic/mythmusic/searchview.h       |    2 +-
 mythplugins/mythmusic/mythmusic/streamview.cpp     |   14 +-
 mythplugins/mythmusic/mythmusic/streamview.h       |    2 +-
 mythplugins/mythmusic/mythmusic/visualizerview.cpp |    4 +-
 mythplugins/mythmusic/mythmusic/visualizerview.h   |    2 +-
 14 files changed, 237 insertions(+), 168 deletions(-)

diff --git a/mythplugins/mythmusic/mythmusic/main.cpp b/mythplugins/mythmusic/mythmusic/main.cpp
index 41a0540..a419f40 100644
--- a/mythplugins/mythmusic/mythmusic/main.cpp
+++ b/mythplugins/mythmusic/mythmusic/main.cpp
@@ -153,7 +153,7 @@ static void startPlayback(void)
 
     MythScreenStack *mainStack = GetMythMainWindow()->GetMainStack();
 
-    PlaylistView *view = new PlaylistView(mainStack);
+    PlaylistView *view = new PlaylistView(mainStack, NULL);
 
     if (view->Create())
         mainStack->AddScreen(view);
@@ -167,7 +167,7 @@ static void startStreamPlayback(void)
 
     MythScreenStack *mainStack = GetMythMainWindow()->GetMainStack();
 
-    StreamView *view = new StreamView(mainStack);
+    StreamView *view = new StreamView(mainStack, NULL);
 
     if (view->Create())
         mainStack->AddScreen(view);
@@ -185,7 +185,7 @@ static void startDatabaseTree(void)
     MythScreenStack *mainStack = GetMythMainWindow()->GetMainStack();
 
     QString lastView = gCoreContext->GetSetting("MusicPlaylistEditorView", "tree");
-    PlaylistEditorView *view = new PlaylistEditorView(mainStack, lastView);
+    PlaylistEditorView *view = new PlaylistEditorView(mainStack, NULL, lastView);
 
     if (view->Create())
         mainStack->AddScreen(view);
diff --git a/mythplugins/mythmusic/mythmusic/miniplayer.cpp b/mythplugins/mythmusic/mythmusic/miniplayer.cpp
index d318746..9c4a77c 100644
--- a/mythplugins/mythmusic/mythmusic/miniplayer.cpp
+++ b/mythplugins/mythmusic/mythmusic/miniplayer.cpp
@@ -8,7 +8,7 @@
 #include "decoder.h"
 
 MiniPlayer::MiniPlayer(MythScreenStack *parent)
-          : MusicCommon(parent, "music_miniplayer")
+          : MusicCommon(parent, NULL, "music_miniplayer")
 {
     m_currentView = MV_MINIPLAYER;
     m_displayTimer = new QTimer(this);
diff --git a/mythplugins/mythmusic/mythmusic/musiccommon.cpp b/mythplugins/mythmusic/mythmusic/musiccommon.cpp
index 0294555..2968dba 100644
--- a/mythplugins/mythmusic/mythmusic/musiccommon.cpp
+++ b/mythplugins/mythmusic/mythmusic/musiccommon.cpp
@@ -43,8 +43,10 @@ using namespace std;
 #include "visualizerview.h"
 #include "searchview.h"
 
-MusicCommon::MusicCommon(MythScreenStack *parent, const QString &name)
+MusicCommon::MusicCommon(MythScreenStack *parent, MythScreenType *parentScreen,
+                         const QString &name)
             : MythScreenType(parent, name),
+    m_parentScreen(parentScreen),
     m_currentView(),            m_mainvisual(NULL),
     m_fullscreenBlank(false),   m_randomVisualizer(false),
     m_currentVisual(0),         m_moveTrackMode(false),
@@ -165,43 +167,63 @@ bool MusicCommon::CreateCommon(void)
     if (m_nextButton)
         connect(m_nextButton, SIGNAL(Clicked()), this, SLOT(next()));
 
-    gPlayer->addListener(this);
-
-    if (!gPlayer->isPlaying())
+    if (m_currentPlaylist)
     {
-        if (m_currentView == MV_RADIO)
-            gPlayer->setPlayMode(MusicPlayer::PLAYMODE_RADIO);
-        else if (m_currentView == MV_PLAYLISTEDITORGALLERY || m_currentView == MV_PLAYLISTEDITORTREE)
-            gPlayer->setPlayMode(MusicPlayer::PLAYMODE_TRACKSEDITOR);
-        else
-            gPlayer->setPlayMode(MusicPlayer::PLAYMODE_TRACKSPLAYLIST);
+        connect(m_currentPlaylist, SIGNAL(itemClicked(MythUIButtonListItem*)),
+                this, SLOT(playlistItemClicked(MythUIButtonListItem*)));
+        connect(m_currentPlaylist, SIGNAL(itemVisible(MythUIButtonListItem*)),
+                this, SLOT(playlistItemVisible(MythUIButtonListItem*)));
 
-        gPlayer->restorePosition();
+        m_currentPlaylist->SetSearchFields("**search**");
     }
-    else
+
+    init();
+
+    return err;
+}
+
+void MusicCommon::init(bool startPlayback)
+{
+    gPlayer->addListener(this);
+
+    if (startPlayback)
     {
-        // if we are playing but we are switching to a view from a different playmode
-        // we need to restart playback in the new mode
-        if (m_currentView == MV_VISUALIZER || m_currentView == MV_MINIPLAYER)
-        {
-            // this view can be used in both play modes
-        }
-        else if (gPlayer->getPlayMode() == MusicPlayer::PLAYMODE_RADIO && m_currentView != MV_RADIO)
+        if (!gPlayer->isPlaying())
         {
-            gPlayer->stop(true);
-
-            if (m_currentView == MV_PLAYLISTEDITORGALLERY || m_currentView == MV_PLAYLISTEDITORTREE)
+            if (m_currentView == MV_RADIO)
+                gPlayer->setPlayMode(MusicPlayer::PLAYMODE_RADIO);
+            else if (m_currentView == MV_PLAYLISTEDITORGALLERY || m_currentView == MV_PLAYLISTEDITORTREE)
                 gPlayer->setPlayMode(MusicPlayer::PLAYMODE_TRACKSEDITOR);
             else
                 gPlayer->setPlayMode(MusicPlayer::PLAYMODE_TRACKSPLAYLIST);
 
             gPlayer->restorePosition();
         }
-        else if (gPlayer->getPlayMode() != MusicPlayer::PLAYMODE_RADIO && m_currentView == MV_RADIO)
+        else
         {
-            gPlayer->stop(true);
-            gPlayer->setPlayMode(MusicPlayer::PLAYMODE_RADIO);
-            gPlayer->restorePosition();
+            // if we are playing but we are switching to a view from a different playmode
+            // we need to restart playback in the new mode
+            if (m_currentView == MV_VISUALIZER || m_currentView == MV_MINIPLAYER)
+            {
+                // these views can be used in both play modes
+            }
+            else if (gPlayer->getPlayMode() == MusicPlayer::PLAYMODE_RADIO && m_currentView != MV_RADIO)
+            {
+                gPlayer->stop(true);
+
+                if (m_currentView == MV_PLAYLISTEDITORGALLERY || m_currentView == MV_PLAYLISTEDITORTREE)
+                    gPlayer->setPlayMode(MusicPlayer::PLAYMODE_TRACKSEDITOR);
+                else
+                    gPlayer->setPlayMode(MusicPlayer::PLAYMODE_TRACKSPLAYLIST);
+
+                gPlayer->restorePosition();
+            }
+            else if (gPlayer->getPlayMode() != MusicPlayer::PLAYMODE_RADIO && m_currentView == MV_RADIO)
+            {
+                gPlayer->stop(true);
+                gPlayer->setPlayMode(MusicPlayer::PLAYMODE_RADIO);
+                gPlayer->restorePosition();
+            }
         }
     }
 
@@ -214,21 +236,12 @@ bool MusicCommon::CreateCommon(void)
     updateProgressBar();
 
     if (m_currentPlaylist)
-    {
-        connect(m_currentPlaylist, SIGNAL(itemClicked(MythUIButtonListItem*)),
-                this, SLOT(playlistItemClicked(MythUIButtonListItem*)));
-        connect(m_currentPlaylist, SIGNAL(itemVisible(MythUIButtonListItem*)),
-                this, SLOT(playlistItemVisible(MythUIButtonListItem*)));
-
-        m_currentPlaylist->SetSearchFields("**search**");
-
         updateUIPlaylist();
-    }
 
     if (m_visualizerVideo)
     {
-        // Warm up the visualizer
         m_mainvisual = new MainVisual(m_visualizerVideo);
+
         m_visualModes = m_mainvisual->getVisualizations();
 
         m_fullscreenBlank = false;
@@ -288,7 +301,7 @@ bool MusicCommon::CreateCommon(void)
 
     updatePlaylistStats();
 
-    return err;
+    updateUIPlayedList();
 }
 
 void MusicCommon::updateRepeatMode(void)
@@ -383,6 +396,54 @@ void MusicCommon::updateShuffleMode(bool updateUIList)
 
 void MusicCommon::switchView(MusicView view)
 {
+    // can we switch to this view from the current view?
+    switch (m_currentView)
+    {
+        case MV_PLAYLIST:
+        {
+            if (view != MV_PLAYLISTEDITORTREE && view != MV_PLAYLISTEDITORGALLERY &&
+                    view != MV_SEARCH && view != MV_VISUALIZER)
+                return;
+            break;
+        }
+
+        case MV_PLAYLISTEDITORTREE:
+        {
+            if (view != MV_PLAYLISTEDITORGALLERY && view != MV_SEARCH && view != MV_VISUALIZER)
+                return;
+            break;
+        }
+
+        case MV_PLAYLISTEDITORGALLERY:
+        {
+            if (view != MV_PLAYLISTEDITORTREE && view != MV_SEARCH && view != MV_VISUALIZER)
+                return;
+            break;
+        }
+
+        case MV_SEARCH:
+        {
+            if (view != MV_VISUALIZER)
+                return;
+            break;
+        }
+
+        case MV_VISUALIZER:
+        {
+            return;
+        }
+
+        case MV_RADIO:
+        {
+            if (view != MV_VISUALIZER)
+                return;
+            break;
+        }
+
+        default:
+            return;
+    }
+
     MythScreenStack *mainStack = GetMythMainWindow()->GetMainStack();
 
     stopVisualizer();
@@ -400,13 +461,15 @@ void MusicCommon::switchView(MusicView view)
     {
         case MV_PLAYLIST:
         {
-            PlaylistView *view = new PlaylistView(mainStack);
+            PlaylistView *view = new PlaylistView(mainStack, this);
 
             if (view->Create())
                 mainStack->AddScreen(view);
             else
                 delete view;
 
+            connect(view, SIGNAL(Exiting()), this, SLOT(viewExited()));
+
             break;
         }
 
@@ -419,13 +482,23 @@ void MusicCommon::switchView(MusicView view)
             if (oldView)
                 oldView->saveTreePosition();
 
-            PlaylistEditorView *view = new PlaylistEditorView(mainStack, "tree", restorePos);
+            MythScreenType *parentScreen = (oldView != NULL ? m_parentScreen : this);
+
+            PlaylistEditorView *view = new PlaylistEditorView(mainStack, parentScreen, "tree", restorePos);
 
             if (view->Create())
                 mainStack->AddScreen(view);
             else
                 delete view;
 
+            connect(view, SIGNAL(Exiting()), this, SLOT(viewExited()));
+
+            if (oldView)
+            {
+                disconnect(this , SIGNAL(Exiting()));
+                Close();
+            }
+
             break;
         }
 
@@ -438,49 +511,65 @@ void MusicCommon::switchView(MusicView view)
             if (oldView)
                 oldView->saveTreePosition();
 
-            PlaylistEditorView *view = new PlaylistEditorView(mainStack, "gallery", restorePos);
+            MythScreenType *parentScreen = (oldView != NULL ? m_parentScreen : this);
+
+            PlaylistEditorView *view = new PlaylistEditorView(mainStack, parentScreen, "gallery", restorePos);
 
             if (view->Create())
                 mainStack->AddScreen(view);
             else
                 delete view;
 
+            connect(view, SIGNAL(Exiting()), this, SLOT(viewExited()));
+
+            if (oldView)
+            {
+                disconnect(this , SIGNAL(Exiting()));
+                Close();
+            }
+
             break;
         }
 
         case MV_SEARCH:
         {
-            SearchView *view = new SearchView(mainStack);
+            SearchView *view = new SearchView(mainStack, this);
 
             if (view->Create())
                 mainStack->AddScreen(view);
             else
                 delete view;
 
+            connect(view, SIGNAL(Exiting()), this, SLOT(viewExited()));
+
             break;
         }
 
         case MV_VISUALIZER:
         {
-            VisualizerView *view = new VisualizerView(mainStack);
+            VisualizerView *view = new VisualizerView(mainStack, this);
 
             if (view->Create())
                 mainStack->AddScreen(view);
             else
                 delete view;
 
+            connect(view, SIGNAL(Exiting()), this, SLOT(viewExited()));
+
             break;
         }
 
         case MV_RADIO:
         {
-            StreamView *view = new StreamView(mainStack);
+            StreamView *view = new StreamView(mainStack, this);
 
             if (view->Create())
                 mainStack->AddScreen(view);
             else
                 delete view;
 
+            connect(view, SIGNAL(Exiting()), this, SLOT(viewExited()));
+
             break;
         }
 
@@ -488,11 +577,14 @@ void MusicCommon::switchView(MusicView view)
             return;
     }
 
-    Close();
-
     gPlayer->setAllowRestorePos(true);
 }
 
+void MusicCommon::viewExited(void)
+{
+    init(false);
+}
+
 bool MusicCommon::keyPressEvent(QKeyEvent *e)
 {
     bool handled = false;
@@ -546,26 +638,35 @@ bool MusicCommon::keyPressEvent(QKeyEvent *e)
 
         if (action == "ESCAPE")
         {
-            QString exit_action = gCoreContext->GetSetting("MusicExitAction", "prompt");
-
-            if (!gPlayer->isPlaying() || GetMythMainWindow()->IsExitingToMain())
+            // if we was started from another music view screen return to it
+            if (m_parentScreen || GetMythMainWindow()->IsExitingToMain())
             {
-                gPlayer->savePosition();
-                stopAll();
-                Close();
+                handled = false;
             }
             else
             {
-                if (exit_action == "stop")
+                // this is the top music view screen so prompt to continue playing
+                QString exit_action = gCoreContext->GetSetting("MusicExitAction", "prompt");
+
+                if (!gPlayer->isPlaying())
                 {
                     gPlayer->savePosition();
                     stopAll();
                     Close();
                 }
-                else if (exit_action == "play")
-                    Close();
                 else
-                    showExitMenu();
+                {
+                    if (exit_action == "stop")
+                    {
+                        gPlayer->savePosition();
+                        stopAll();
+                        Close();
+                    }
+                    else if (exit_action == "play")
+                        Close();
+                    else
+                        showExitMenu();
+                }
             }
         }
         else if (action == "THMBUP")
@@ -1241,20 +1342,29 @@ void MusicCommon::customEvent(QEvent *event)
 
         QString resultid   = dce->GetId();
         QString resulttext = dce->GetResultText();
-        if (resultid == "viewmenu")
+
+        if (resultid == "mainmenu")
         {
-            if (dce->GetResult() >= 0)
+            if (resulttext == tr("Fullscreen Visualizer"))
+                switchView(MV_VISUALIZER);
+            else if (resulttext == tr("Playlist Editor"))
             {
-                MusicView view = (MusicView)dce->GetData().toInt();
-                switchView(view);
+                if (gCoreContext->GetSetting("MusicPlaylistEditorView", "tree") ==  "tree")
+                    switchView(MV_PLAYLISTEDITORTREE);
+                else
+                    switchView(MV_PLAYLISTEDITORGALLERY);
             }
+            else if (resulttext == tr("Search for Music"))
+                switchView(MV_SEARCH);
+            else if (resulttext == tr("Switch To Gallery View"))
+                switchView(MV_PLAYLISTEDITORGALLERY);
+            else if (resulttext == tr("Switch To Tree View"))
+                switchView(MV_PLAYLISTEDITORTREE);
         }
-        else if (resultid == "actionmenu")
+        else if (resultid == "submenu")
         {
             if (resulttext == tr("Search List..."))
-            {
                 searchButtonList();
-            }
         }
         else if (resultid == "playlistmenu")
         {
@@ -1869,7 +1979,7 @@ void MusicCommon::playlistItemVisible(MythUIButtonListItem *item)
         return;
 
     MusicMetadata *mdata = qVariantValue<MusicMetadata*> (item->GetData());
-    if (mdata)
+    if (mdata && item->GetText() == " ")
     {
         if (item->GetImageFilename().isEmpty())
         {
@@ -1886,14 +1996,11 @@ void MusicCommon::playlistItemVisible(MythUIButtonListItem *item)
             }
         }
 
-        if (item->GetText() == " ")
-        {
-            InfoMap metadataMap;
-            mdata->toMap(metadataMap);
-            item->SetText("");
-            item->SetTextFromMap(metadataMap);
-            item->DisplayState(QString("%1").arg(mdata->Rating()), "ratingstate");
-        }
+        InfoMap metadataMap;
+        mdata->toMap(metadataMap);
+        item->SetText("");
+        item->SetTextFromMap(metadataMap);
+        item->DisplayState(QString("%1").arg(mdata->Rating()), "ratingstate");
     }
 }
 
@@ -2081,16 +2188,35 @@ void MusicCommon::ShowMenu(void)
 
 MythMenu* MusicCommon::createMainMenu(void)
 {
+    QString label = tr("View Actions");
+
+    MythMenu *menu = new MythMenu(label, this, "mainmenu");
+
+    if (m_currentView == MV_PLAYLISTEDITORTREE)
+        menu->AddItem(tr("Switch To Gallery View"));
+    else if (m_currentView == MV_PLAYLISTEDITORGALLERY)
+        menu->AddItem(tr("Switch To Tree View"));
+    else if (m_currentView == MV_PLAYLIST)
+        menu->AddItem(MusicCommon::tr("Playlist Editor"));
+
+    menu->AddItem(tr("Search for Music"));
+    menu->AddItem(tr("Fullscreen Visualizer"));
+
+    menu->AddItem(tr("More Options"), NULL, createSubMenu());
+
+    return menu;
+}
+
+MythMenu* MusicCommon::createSubMenu(void)
+{
     QString label = tr("Actions");
 
-    MythMenu *menu = new MythMenu(label, this, "actionmenu");
+    MythMenu *menu = new MythMenu(label, this, "submenu");
 
     if (GetFocusWidget() && (GetFocusWidget()->inherits("MythUIButtonList") ||
                              GetFocusWidget()->inherits("MythUIButtonTree")))
         menu->AddItem(tr("Search List..."));
 
-    menu->AddItem(tr("Switch View"),      NULL, createViewMenu());
-
     if (gPlayer->getPlayMode() != MusicPlayer::PLAYMODE_RADIO)
     {
         menu->AddItem(tr("Playlist Options"), NULL, createPlaylistMenu());
@@ -2109,28 +2235,6 @@ MythMenu* MusicCommon::createMainMenu(void)
     return menu;
 }
 
-MythMenu* MusicCommon::createViewMenu(void)
-{
-    QString label = tr("Switch View");
-
-    MythMenu *menu = new MythMenu(label, this, "viewmenu");
-
-    if (m_currentView != MV_PLAYLIST)
-        menu->AddItem(tr("Current Playlist"), qVariantFromValue((int)MV_PLAYLIST));
-    if (m_currentView != MV_PLAYLISTEDITORTREE)
-        menu->AddItem(tr("Playlist Editor - Tree"), qVariantFromValue((int)MV_PLAYLISTEDITORTREE));
-    if (m_currentView != MV_PLAYLISTEDITORGALLERY)
-        menu->AddItem(tr("Playlist Editor - Gallery"), qVariantFromValue((int)MV_PLAYLISTEDITORGALLERY));
-    if (m_currentView != MV_SEARCH)
-        menu->AddItem(tr("Search for Music"), qVariantFromValue((int)MV_SEARCH));
-    if (m_currentView != MV_RADIO)
-        menu->AddItem(tr("Play Radio Stream"), qVariantFromValue((int)MV_RADIO));
-    if (m_currentView != MV_VISUALIZER)
-        menu->AddItem(tr("Fullscreen Visualizer"), qVariantFromValue((int)MV_VISUALIZER));
-
-    return menu;
-}
-
 MythMenu* MusicCommon::createPlaylistMenu(void)
 {
     QString label = tr("Playlist Options");
diff --git a/mythplugins/mythmusic/mythmusic/musiccommon.h b/mythplugins/mythmusic/mythmusic/musiccommon.h
index 4ecf08f..b9097d9 100644
--- a/mythplugins/mythmusic/mythmusic/musiccommon.h
+++ b/mythplugins/mythmusic/mythmusic/musiccommon.h
@@ -50,7 +50,8 @@ class MPUBLIC MusicCommon : public MythScreenType
 
   protected:
 
-    MusicCommon(MythScreenStack *parent, const QString &name);
+    MusicCommon(MythScreenStack *parent, MythScreenType *parentScreen,
+                const QString &name);
     ~MusicCommon(void);
 
     bool CreateCommon(void);
@@ -63,6 +64,7 @@ class MPUBLIC MusicCommon : public MythScreenType
     virtual void ShowMenu(void);
 
   protected slots:
+    void viewExited(void);
 
     void play(void);
     void stop(void);
@@ -77,7 +79,7 @@ class MPUBLIC MusicCommon : public MythScreenType
 
     void searchButtonList(void);
     MythMenu* createMainMenu(void);
-    MythMenu* createViewMenu(void);
+    MythMenu* createSubMenu(void);
     MythMenu* createPlaylistMenu(void);
     MythMenu* createPlayerMenu(void);
     MythMenu* createQuickPlaylistsMenu(void);
@@ -103,6 +105,7 @@ class MPUBLIC MusicCommon : public MythScreenType
     void showPlaylistOptionsMenu(bool addMainMenu = false);
 
   protected:
+    void init(bool startPlayback = true);
     QString getTimeString(int exTime, int maxTime);
     void updateProgressBar(void);
     void setTrackOnLCD(MusicMetadata *mdata);
@@ -132,6 +135,7 @@ class MPUBLIC MusicCommon : public MythScreenType
     void playFirstTrack();
     bool restorePosition(int trackID);
 
+    MythScreenType        *m_parentScreen;
     MusicView              m_currentView;
 
     // visualiser stuff
diff --git a/mythplugins/mythmusic/mythmusic/playlisteditorview.cpp b/mythplugins/mythmusic/mythmusic/playlisteditorview.cpp
index c1bf27c..2259e39 100644
--- a/mythplugins/mythmusic/mythmusic/playlisteditorview.cpp
+++ b/mythplugins/mythmusic/mythmusic/playlisteditorview.cpp
@@ -90,8 +90,9 @@ MythUIButtonListItem *MusicGenericTree::CreateListButton(MythUIButtonList *list)
 #define LOC_WARN QString("PlaylistEditorView, Warning: ")
 #define LOC_ERR  QString("PlaylistEditorView, Error: ")
 
-PlaylistEditorView::PlaylistEditorView(MythScreenStack *parent, const QString &layout, bool restorePosition)
-         :MusicCommon(parent, "playlisteditorview"),
+PlaylistEditorView::PlaylistEditorView(MythScreenStack *parent, MythScreenType *parentScreen,
+                                       const QString &layout, bool restorePosition)
+         :MusicCommon(parent, parentScreen, "playlisteditorview"),
             m_layout(layout), m_restorePosition(restorePosition),
             m_rootNode(NULL), m_playlistTree(NULL), m_breadcrumbsText(NULL),
             m_positionText(NULL)
@@ -629,12 +630,6 @@ void PlaylistEditorView::ShowMenu(void)
         MythMenu *menu = NULL;
         MusicGenericTree *mnode = dynamic_cast<MusicGenericTree*>(m_playlistTree->GetCurrentNode());
 
-        if (!mnode)
-        {
-            MusicCommon::ShowMenu();
-            return;
-        }
-
         if (mnode->getAction() == "smartplaylists" ||
             mnode->getAction() == "smartplaylistcategory" ||
             mnode->getAction() == "smartplaylist")
@@ -1001,7 +996,6 @@ void PlaylistEditorView::filterTracks(MusicGenericTree *node)
                     if (mdata->Track() < 10)
                         key.prepend("0");
                 }
-
                 map.insertMulti(key, mdata->ID());
             }
         }
diff --git a/mythplugins/mythmusic/mythmusic/playlisteditorview.h b/mythplugins/mythmusic/mythmusic/playlisteditorview.h
index 5a55985..5eab838 100644
--- a/mythplugins/mythmusic/mythmusic/playlisteditorview.h
+++ b/mythplugins/mythmusic/mythmusic/playlisteditorview.h
@@ -63,7 +63,8 @@ class PlaylistEditorView : public MusicCommon
 {
     Q_OBJECT
   public:
-    PlaylistEditorView(MythScreenStack *parent, const QString &layout, bool restorePosition = false);
+    PlaylistEditorView(MythScreenStack *parent, MythScreenType *parentScreen,
+                       const QString &layout, bool restorePosition = false);
     ~PlaylistEditorView(void);
 
     bool Create(void);
diff --git a/mythplugins/mythmusic/mythmusic/playlistview.cpp b/mythplugins/mythmusic/mythmusic/playlistview.cpp
index 22824d0..a72ab88 100644
--- a/mythplugins/mythmusic/mythmusic/playlistview.cpp
+++ b/mythplugins/mythmusic/mythmusic/playlistview.cpp
@@ -10,8 +10,8 @@
 #include "musiccommon.h"
 #include "playlistview.h"
 
-PlaylistView::PlaylistView(MythScreenStack *parent)
-         :MusicCommon(parent, "playlistview")
+PlaylistView::PlaylistView(MythScreenStack *parent, MythScreenType *parentScreen)
+         :MusicCommon(parent, parentScreen, "playlistview")
 {
     m_currentView = MV_PLAYLIST;
 }
@@ -46,52 +46,17 @@ bool PlaylistView::Create(void)
 
 void PlaylistView::customEvent(QEvent *event)
 {
-    bool handled = false;
-
-#if 0
-    if (event->type() == DialogCompletionEvent::kEventType)
-    {
-        DialogCompletionEvent *dce = (DialogCompletionEvent*)(event);
-
-        QString resultid   = dce->GetId();
-        QString resulttext = dce->GetResultText();
-        //TODO::
-        if (resultid == "menu")
-        {
-        }
-    }
-#endif
-
-    if (!handled)
-        MusicCommon::customEvent(event);
+    MusicCommon::customEvent(event);
 }
 
-
 bool PlaylistView::keyPressEvent(QKeyEvent *event)
 {
     if (!m_moveTrackMode && GetFocusWidget() && GetFocusWidget()->keyPressEvent(event))
         return true;
 
     bool handled = false;
-    QStringList actions;
-    handled = GetMythMainWindow()->TranslateKeyPress("Music", event, actions);
-
-#if 0
-    for (int i = 0; i < actions.size() && !handled; i++)
-    {
-        QString action = actions[i];
-        handled = true;
-
-        if (action == "MENU")
-        {
-            showMenu();
-        }
-        else
-            handled = false;
-    }
-#endif
 
-    if (!handled && MusicCommon::keyPressEvent(event))
+    if (MusicCommon::keyPressEvent(event))
         handled = true;
 
     if (!handled && MythScreenType::keyPressEvent(event))
diff --git a/mythplugins/mythmusic/mythmusic/playlistview.h b/mythplugins/mythmusic/mythmusic/playlistview.h
index b199ece..b5cead4 100644
--- a/mythplugins/mythmusic/mythmusic/playlistview.h
+++ b/mythplugins/mythmusic/mythmusic/playlistview.h
@@ -18,7 +18,7 @@ class PlaylistView : public MusicCommon
 {
     Q_OBJECT
   public:
-    PlaylistView(MythScreenStack *parent);
+    PlaylistView(MythScreenStack *parent, MythScreenType *parentScreen);
     ~PlaylistView(void);
 
     bool Create(void);
@@ -26,9 +26,6 @@ class PlaylistView : public MusicCommon
 
   protected:
     void customEvent(QEvent *event);
-
-  private:
-//    void showMenu(void);
 };
 
 #endif
diff --git a/mythplugins/mythmusic/mythmusic/searchview.cpp b/mythplugins/mythmusic/mythmusic/searchview.cpp
index 39f63f4..49d93dd 100644
--- a/mythplugins/mythmusic/mythmusic/searchview.cpp
+++ b/mythplugins/mythmusic/mythmusic/searchview.cpp
@@ -15,8 +15,8 @@
 #include "musiccommon.h"
 #include "searchview.h"
 
-SearchView::SearchView(MythScreenStack *parent)
-         :MusicCommon(parent, "searchview"),
+SearchView::SearchView(MythScreenStack *parent, MythScreenType *parentScreen)
+         :MusicCommon(parent, parentScreen,"searchview"),
             m_playTrack(false), m_fieldList(NULL), m_criteriaEdit(NULL),
             m_matchesText(NULL), m_tracksList(NULL)
 {
@@ -293,7 +293,7 @@ void SearchView::ShowMenu(void)
         if (GetFocusWidget() == m_tracksList || GetFocusWidget() == m_currentPlaylist)
             menu->AddItem(tr("Search List..."));
 
-        menu->AddItem(tr("More Options"), NULL, createMainMenu());
+        menu->AddItem(tr("More Options"), NULL, createSubMenu());
 
         MythScreenStack *popupStack = GetMythMainWindow()->GetStack("popup stack");
 
diff --git a/mythplugins/mythmusic/mythmusic/searchview.h b/mythplugins/mythmusic/mythmusic/searchview.h
index f5bb29e..7c3893b 100644
--- a/mythplugins/mythmusic/mythmusic/searchview.h
+++ b/mythplugins/mythmusic/mythmusic/searchview.h
@@ -19,7 +19,7 @@ class SearchView : public MusicCommon
 {
     Q_OBJECT
   public:
-    SearchView(MythScreenStack *parent);
+    SearchView(MythScreenStack *parent, MythScreenType *parentScreen);
     ~SearchView(void);
 
     bool Create(void);
diff --git a/mythplugins/mythmusic/mythmusic/streamview.cpp b/mythplugins/mythmusic/mythmusic/streamview.cpp
index 277b24e..c0ca8ac 100644
--- a/mythplugins/mythmusic/mythmusic/streamview.cpp
+++ b/mythplugins/mythmusic/mythmusic/streamview.cpp
@@ -29,8 +29,8 @@
 
 using namespace std;
 
-StreamView::StreamView(MythScreenStack *parent)
-           :MusicCommon(parent, "streamview"),
+StreamView::StreamView(MythScreenStack *parent, MythScreenType *parentScreen)
+           :MusicCommon(parent, parentScreen, "streamview"),
             m_streamList(NULL), m_noStreams(NULL), m_bufferStatus(NULL),
             m_bufferProgress(NULL)
 {
@@ -85,7 +85,7 @@ void StreamView::ShowMenu(void)
 {
     MythMenu *menu = NULL;
 
-    menu = new MythMenu(tr("Stream Actions"), this, "streammenu");
+    menu = new MythMenu(tr("Stream Actions"), this, "mainmenu");
     menu->AddItem(tr("Add Stream"));
 
     if (m_streamList->GetItemCurrent())
@@ -94,7 +94,9 @@ void StreamView::ShowMenu(void)
         menu->AddItem(tr("Remove Stream"));
     }
 
-    menu->AddItem(tr("More Options"), NULL, createMainMenu());
+    menu->AddItem(MusicCommon::tr("Fullscreen Visualizer"), qVariantFromValue((int)MV_VISUALIZER));
+
+    menu->AddItem(tr("More Options"), NULL, createSubMenu());
 
     MythScreenStack *popupStack = GetMythMainWindow()->GetStack("popup stack");
 
@@ -292,7 +294,7 @@ void StreamView::customEvent(QEvent *event)
         QString resultid   = dce->GetId();
         QString resulttext = dce->GetResultText();
 
-        if (resultid == "streammenu")
+        if (resultid == "mainmenu")
         {
             if (resulttext == tr("Add Stream"))
             {
@@ -312,6 +314,8 @@ void StreamView::customEvent(QEvent *event)
             {
                 editStream();
             }
+            else
+                handled = false;
         }
         else
             handled = false;
diff --git a/mythplugins/mythmusic/mythmusic/streamview.h b/mythplugins/mythmusic/mythmusic/streamview.h
index 47ecdb8..48df0f9 100644
--- a/mythplugins/mythmusic/mythmusic/streamview.h
+++ b/mythplugins/mythmusic/mythmusic/streamview.h
@@ -20,7 +20,7 @@ class StreamView : public MusicCommon
   Q_OBJECT
 
   public:
-    StreamView(MythScreenStack *parent);
+    StreamView(MythScreenStack *parent, MythScreenType *parentScreen);
     ~StreamView(void);
 
     bool Create(void);
diff --git a/mythplugins/mythmusic/mythmusic/visualizerview.cpp b/mythplugins/mythmusic/mythmusic/visualizerview.cpp
index ef76724..6998000 100644
--- a/mythplugins/mythmusic/mythmusic/visualizerview.cpp
+++ b/mythplugins/mythmusic/mythmusic/visualizerview.cpp
@@ -19,8 +19,8 @@
 #include "musiccommon.h"
 #include "visualizerview.h"
 
-VisualizerView::VisualizerView(MythScreenStack *parent)
-         :MusicCommon(parent, "visualizerview")
+VisualizerView::VisualizerView(MythScreenStack *parent, MythScreenType *parentScreen)
+         :MusicCommon(parent, parentScreen, "visualizerview")
 {
     m_currentView = MV_VISUALIZER;
 }
diff --git a/mythplugins/mythmusic/mythmusic/visualizerview.h b/mythplugins/mythmusic/mythmusic/visualizerview.h
index d2f881d..3a3d54e 100644
--- a/mythplugins/mythmusic/mythmusic/visualizerview.h
+++ b/mythplugins/mythmusic/mythmusic/visualizerview.h
@@ -17,7 +17,7 @@ class VisualizerView : public MusicCommon
 {
     Q_OBJECT
   public:
-    VisualizerView(MythScreenStack *parent);
+    VisualizerView(MythScreenStack *parent, MythScreenType *parentScreen);
     ~VisualizerView(void);
 
     bool Create(void);
-- 
1.7.10.2

