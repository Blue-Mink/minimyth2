From fe65b3a85d967e95ccb3c0fce934bd586c7739b6 Mon Sep 17 00:00:00 2001
From: Paul Harrison <pharrison@mythtv.org>
Date: Tue, 18 Feb 2014 15:27:38 +0000
Subject: [PATCH 5/7] MythMusic: remove the redundant calcTrackLength() from
 musicutils

---
 mythtv/libs/libmythmetadata/musicutils.cpp |   82 ----------------------------
 mythtv/libs/libmythmetadata/musicutils.h   |    3 -
 2 files changed, 85 deletions(-)

diff --git a/mythtv/libs/libmythmetadata/musicutils.cpp b/mythtv/libs/libmythmetadata/musicutils.cpp
index f8e8df6..3de948a 100644
--- a/mythtv/libs/libmythmetadata/musicutils.cpp
+++ b/mythtv/libs/libmythmetadata/musicutils.cpp
@@ -64,88 +64,6 @@ QString findIcon(const QString &type, const QString &name, bool ignoreCache)
     return QString();
 }
 
-//TODO this needs updating to also use storage groups
-uint calcTrackLength(const QString &musicFile)
-{
-//    const char *type = NULL;
-
-    AVFormatContext *inputFC = NULL;
-    AVInputFormat *fmt = NULL;
-
-//     if (type)
-//         fmt = av_find_input_format(type);
-
-    // Open recording
-    LOG(VB_GENERAL, LOG_DEBUG, QString("calcTrackLength: Opening '%1'")
-            .arg(musicFile));
-
-    QByteArray inFileBA = musicFile.toLocal8Bit();
-
-    int ret = avformat_open_input(&inputFC, inFileBA.constData(), fmt, NULL);
-
-    if (ret)
-    {
-        LOG(VB_GENERAL, LOG_ERR, "calcTrackLength: Couldn't open input file" +
-                                  ENO);
-        return 0;
-    }
-
-    // Getting stream information
-    ret = avformat_find_stream_info(inputFC, NULL);
-
-    if (ret < 0)
-    {
-        LOG(VB_GENERAL, LOG_ERR,
-            QString("calcTrackLength: Couldn't get stream info, error #%1").arg(ret));
-        avformat_close_input(&inputFC);
-        inputFC = NULL;
-        return 0;
-    }
-
-    uint duration = 0;
-    long long time = 0;
-
-    for (uint i = 0; i < inputFC->nb_streams; i++)
-    {
-        AVStream *st = inputFC->streams[i];
-        char buf[256];
-
-        avcodec_string(buf, sizeof(buf), st->codec, false);
-
-        switch (inputFC->streams[i]->codec->codec_type)
-        {
-            case AVMEDIA_TYPE_AUDIO:
-            {
-                AVPacket pkt;
-                av_init_packet(&pkt);
-
-                while (av_read_frame(inputFC, &pkt) >= 0)
-                {
-                    if (pkt.stream_index == (int)i)
-                        time = time + pkt.duration;
-
-                    av_free_packet(&pkt);
-                }
-
-                duration = time * av_q2d(inputFC->streams[i]->time_base);
-                break;
-            }
-
-            default:
-                LOG(VB_GENERAL, LOG_ERR,
-                    QString("Skipping unsupported codec %1 on stream %2")
-                        .arg(inputFC->streams[i]->codec->codec_type).arg(i));
-                break;
-        }
-    }
-
-    // Close input file
-    avformat_close_input(&inputFC);
-    inputFC = NULL;
-
-    return duration;
-}
-
 inline QString fixFileToken_sl(QString token)
 {
     // this version doesn't remove fwd-slashes so we can
diff --git a/mythtv/libs/libmythmetadata/musicutils.h b/mythtv/libs/libmythmetadata/musicutils.h
index fb2bb2f..620ed3c 100644
--- a/mythtv/libs/libmythmetadata/musicutils.h
+++ b/mythtv/libs/libmythmetadata/musicutils.h
@@ -18,9 +18,6 @@ META_PUBLIC QString fixFilename(const QString &filename);
 /// find an image for a artist or genre
 META_PUBLIC QString findIcon(const QString &type, const QString &name, bool ignoreCache = false);
 
-/// calculate a tracks length by parsing the frames
-META_PUBLIC uint calcTrackLength(const QString &musicFile);
-
 /// create a filename using the template in the settings and a MusicMetadata object
 META_PUBLIC QString filenameFromMetadata(MusicMetadata *track);
 
-- 
1.7.10

