From 399fc5c2e94d519864b782ba3951411fd31a011c Mon Sep 17 00:00:00 2001
From: Stuart Morgan <smorgan@mythtv.org>
Date: Mon, 24 Mar 2014 19:48:41 +0000
Subject: [PATCH 2/6] RemoteFile: Prevent FindFile causing the master backend
 connecting back to itself and therefore failing to find
 the file.

---
 mythtv/libs/libmythbase/remotefile.cpp |   29 +++++++++++++++++++++++++----
 1 file changed, 25 insertions(+), 4 deletions(-)

diff --git a/mythtv/libs/libmythbase/remotefile.cpp b/mythtv/libs/libmythbase/remotefile.cpp
index adfebfe..b5b2e46 100644
--- a/mythtv/libs/libmythbase/remotefile.cpp
+++ b/mythtv/libs/libmythbase/remotefile.cpp
@@ -32,6 +32,7 @@ using namespace std;
 #include "mythdate.h"
 #include "mythmiscutil.h"
 #include "threadedfilewriter.h"
+#include "storagegroup.h"
 
 #define MAX_FILE_CHECK 500  // in ms
 
@@ -1076,13 +1077,23 @@ QString RemoteFile::FindFile(const QString& filename, const QString& host, const
     if (hostName.isEmpty())
         hostName = gCoreContext->GetMasterHostName();
 
-    // first check the given host
-    strList << "QUERY_SG_FILEQUERY" << hostName << storageGroup << filename << 0;
-    if (gCoreContext->SendReceiveStringList(strList))
+    if (gCoreContext->IsMasterBackend() &&
+        hostName == gCoreContext->GetMasterHostName())
     {
-        if (strList.size() > 0 && strList[0] != "EMPTY LIST" && !strList[0].startsWith("SLAVE UNREACHABLE"))
+        StorageGroup sGroup(storageGroup, hostName);
+        if (!sGroup.FindFile(filename).isEmpty())
             return gCoreContext->GenMythURL(hostName, 0, filename, storageGroup);
     }
+    else
+    {
+        // first check the given host
+        strList << "QUERY_SG_FILEQUERY" << hostName << storageGroup << filename << 0;
+        if (gCoreContext->SendReceiveStringList(strList))
+        {
+            if (strList.size() > 0 && strList[0] != "EMPTY LIST" && !strList[0].startsWith("SLAVE UNREACHABLE"))
+                return gCoreContext->GenMythURL(hostName, 0, filename, storageGroup);
+        }
+    }
 
     // not found so search all hosts that has a directory defined for the give storage group
 
@@ -1107,6 +1118,16 @@ QString RemoteFile::FindFile(const QString& filename, const QString& host, const
     {
         hostName = query.value(0).toString();
 
+        if (gCoreContext->IsMasterBackend() &&
+            hostName == gCoreContext->GetMasterHostName())
+        {
+            StorageGroup sGroup(storageGroup, hostName);
+            if (!sGroup.FindFile(filename).isEmpty())
+                return gCoreContext->GenMythURL(hostName, 0, filename, storageGroup);
+            else
+                continue;
+        }
+
         strList.clear();
         strList << "QUERY_SG_FILEQUERY" << hostName << storageGroup << filename << 0;
 
-- 
1.7.10.2

