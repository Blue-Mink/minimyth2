diff -Naur mythtv-0.27-20140204-g1b7404d-old/mythtv/libs/libmythmetadata/musicutils.cpp mythtv-0.27-20140204-g1b7404d-new/mythtv/libs/libmythmetadata/musicutils.cpp
--- mythtv-0.27-20140204-g1b7404d-old/mythtv/libs/libmythmetadata/musicutils.cpp	2014-02-05 16:39:59.008313214 +0100
+++ mythtv-0.27-20140204-g1b7404d-new/mythtv/libs/libmythmetadata/musicutils.cpp	2014-02-05 16:40:08.294938154 +0100
@@ -30,42 +30,31 @@
     return ret;
 }
 
+static QMap<QString, QString> iconMap;
 QString findIcon(const QString &type, const QString &name)
 {
+    QMap<QString, QString>::iterator i = iconMap.find(type + name);
+    if (i != iconMap.end())
+        return i.value();
+
     QString cleanName = fixFilename(name);
     QString file = QString("Icons/%1/%2").arg(type).arg(cleanName);
+    QStringList imageExtensions = QStringList() << ".jpg" << ".jpeg" << ".png" << ".gif";
 
-    // first look in the 'MusicArt' storage group
-    QString filename = gCoreContext->GenMythURL(gCoreContext->GetSetting("MasterServerIP"),
-                                                gCoreContext->GetNumSetting("MasterServerPort"),
-                                                file, "MusicArt");
-
-    if (RemoteFile::Exists(filename + ".jpg"))
-        return filename + ".jpg";
-
-    if (RemoteFile::Exists(filename + ".jpeg"))
-        return filename + ".jpeg";
-
-    if (RemoteFile::Exists(filename + ".png"))
-        return filename + ".png";
-
-    if (RemoteFile::Exists(filename + ".gif"))
-        return filename + ".gif";
-
-    // not found so try the local config directory
-    file = GetConfDir() + "MythMusic/" + file;
-
-    if (QFile::exists(file + ".jpg"))
-        return file + ".jpg";
-
-    if (QFile::exists(file + ".jpeg"))
-        return file + ".jpeg";
-
-    if (QFile::exists(file + ".png"))
-        return file + ".png";
+    // TODO also look on any slave BEs?
+    QString filename = gCoreContext->GenMythURL(gCoreContext->GetMasterHostName(),
+                                                0, file, "MusicArt");
+
+    for (int x = 0; x < imageExtensions.count(); x++)
+    {
+        if (RemoteFile::Exists(filename + imageExtensions[x]))
+        {
+            iconMap.insert(type + name, filename + imageExtensions[x]);
+            return filename + imageExtensions[x];
+        }
+    }
 
-    if (QFile::exists(file + ".gif"))
-        return file + ".gif";
+    iconMap.insert(type + name, QString());
 
     LOG(VB_FILE, LOG_INFO, QString("findicon: not found for type: %1, name: %2").arg(type).arg(name));
 
