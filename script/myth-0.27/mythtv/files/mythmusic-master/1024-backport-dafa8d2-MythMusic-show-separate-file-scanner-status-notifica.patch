diff -Naur mythtv-0.27-20140204-g1b7404d-old/mythplugins/mythmusic/mythmusic/musicplayer.cpp mythtv-0.27-20140204-g1b7404d-new/mythplugins/mythmusic/mythmusic/musicplayer.cpp
--- mythtv-0.27-20140204-g1b7404d-old/mythplugins/mythmusic/mythmusic/musicplayer.cpp	2014-02-05 16:37:59.808848781 +0100
+++ mythtv-0.27-20140204-g1b7404d-new/mythplugins/mythmusic/mythmusic/musicplayer.cpp	2014-02-05 16:38:09.222139816 +0100
@@ -78,7 +78,6 @@
     m_playSpeed = 1.0;
 
     m_showScannerNotifications = true;
-    m_notificationID = GetNotificationCenter()->Register(this);
 
     m_errorCount = 0;
 
@@ -118,8 +117,11 @@
     gCoreContext->removeListener(this);
     gCoreContext->UnregisterForPlayback(this);
 
-    if (m_notificationID > 0)
-        GetNotificationCenter()->UnRegister(this, m_notificationID);
+    QMap<QString, int>::Iterator i;
+    for (i = m_notificationMap.begin(); i != m_notificationMap.end(); i++)
+        GetNotificationCenter()->UnRegister(this, (*i));
+
+    m_notificationMap.clear();
 
     stop(true);
 
@@ -727,9 +729,11 @@
             if (list.size() == 2)
             {
                 QString host = list[1];
-                sendNotification(tr("A music file scan has started on %1").arg(host),
+                int id = getNotificationID(host);
+                sendNotification(id,
+                                 tr("A music file scan has started on %1").arg(host),
                                  tr("Music File Scanner"),
-                                 "This may take a while I'll give a shout when finished");
+                                 tr("This may take a while I'll give a shout when finished"));
             }
         }
         else if (me->Message().startsWith("MUSIC_SCANNER_FINISHED"))
@@ -738,6 +742,7 @@
             if (list.size() == 6)
             {
                 QString host = list[1];
+                int id = getNotificationID(host);
                 int totalTracks = list[2].toInt();
                 int newTracks = list[3].toInt();
                 int totalCoverart = list[4].toInt();
@@ -745,7 +750,8 @@
 
                 QString summary = QString("Total Tracks: %2, new tracks: %3,\nTotal Coverart: %4, New CoverArt %5")
                                           .arg(totalTracks).arg(newTracks).arg(totalCoverart).arg(newCoverart);
-                sendNotification(tr("A music file scan has finished on %1").arg(host),
+                sendNotification(id,
+                                 tr("A music file scan has finished on %1").arg(host),
                                  tr("Music File Scanner"), summary);
 
                 gMusicData->reloadMusic();
@@ -758,13 +764,14 @@
             {
                 QString host = list[1];
                 QString error = list[2];
+                int id = getNotificationID(host);
 
                 if (error == "Already_Running")
-                    sendNotification(tr(""),
+                    sendNotification(id, tr(""),
                                      tr("Music File Scanner"),
                                      tr("Can't run the music file scanner because it is already running on %1").arg(host));
                 else if (error == "Stalled")
-                    sendNotification(tr(""),
+                    sendNotification(id, tr(""),
                                      tr("Music File Scanner"),
                                      tr("The music file scanner has been running for more than 60 minutes on %1.\nResetting and trying again")
                                          .arg(host));
@@ -1586,7 +1593,15 @@
     return gMusicData->all_streams->getStreams();
 }
 
-void MusicPlayer::sendNotification(const QString &title, const QString &author, const QString &desc)
+int MusicPlayer::getNotificationID (const QString& hostname)
+{
+    if (m_notificationMap.find(hostname) == m_notificationMap.end())
+        m_notificationMap.insert(hostname, GetNotificationCenter()->Register(this));
+
+    return m_notificationMap[hostname];
+}
+
+void MusicPlayer::sendNotification(int notificationID, const QString &title, const QString &author, const QString &desc)
 {
     QString image = "musicscanner.png";
     GetMythUI()->FindThemeFile(image);
@@ -1598,7 +1613,7 @@
 
     MythImageNotification *n = new MythImageNotification(MythNotification::Info, image, map);
 
-    n->SetId(m_notificationID);
+    n->SetId(notificationID);
     n->SetParent(this);
     n->SetDuration(5);
     n->SetFullScreen(false);
diff -Naur mythtv-0.27-20140204-g1b7404d-old/mythplugins/mythmusic/mythmusic/musicplayer.h mythtv-0.27-20140204-g1b7404d-new/mythplugins/mythmusic/mythmusic/musicplayer.h
--- mythtv-0.27-20140204-g1b7404d-old/mythplugins/mythmusic/mythmusic/musicplayer.h	2014-02-05 16:37:59.808848781 +0100
+++ mythtv-0.27-20140204-g1b7404d-new/mythplugins/mythmusic/mythmusic/musicplayer.h	2014-02-05 16:38:09.225473135 +0100
@@ -194,7 +194,8 @@
     void updateLastplay(void);
     void updateVolatileMetadata(void);
     void sendVolumeChangedEvent(void);
-    void sendNotification(const QString &title, const QString &author, const QString &desc);
+    int  getNotificationID(const QString &hostname);
+    void sendNotification(int notificationID, const QString &title, const QString &author, const QString &desc);
 
     void setupDecoderHandler(void);
     void decoderHandlerReady(void);
@@ -228,7 +229,7 @@
 
     // notification
     bool m_showScannerNotifications;
-    int  m_notificationID;
+    QMap<QString, int>  m_notificationMap;
 
     // radio stuff
     QList<MusicMetadata*>  m_playedList;
