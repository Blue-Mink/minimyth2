From 7e8ca1c3e74af4202cda42be4dd2cdf505df9d8f Mon Sep 17 00:00:00 2001
From: Jean-Yves Avenard <jyavenard@mythtv.org>
Date: Sat, 12 Jul 2014 05:06:37 +1000
Subject: [PATCH 15/15] metadata: do not use grabber cache if not initialised
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Thereâ€™s no guarantee that a non-static member will be initialised.
Make all global variable static, there is no reason to export them

Fix #12206 part 2

(cherry picked from commit 44775b1785110949ef5970cffb9acdb32fc72c92)
---
 mythtv/libs/libmythmetadata/metadatagrabber.cpp |   36 ++++++++++++-----------
 1 file changed, 19 insertions(+), 17 deletions(-)

diff --git a/mythtv/libs/libmythmetadata/metadatagrabber.cpp b/mythtv/libs/libmythmetadata/metadatagrabber.cpp
index f39d2ff..964e704 100644
--- a/mythtv/libs/libmythmetadata/metadatagrabber.cpp
+++ b/mythtv/libs/libmythmetadata/metadatagrabber.cpp
@@ -17,9 +17,9 @@
 #define LOC QString("Metadata Grabber: ")
 #define kGrabberRefresh 60
 
-GrabberList     grabberList;
-QMutex          grabberLock;
-QDateTime       grabberAge = MythDate::current().addSecs(-kGrabberRefresh);
+static GrabberList     grabberList;
+static QMutex          grabberLock;
+static QDateTime       grabberAge;
 
 typedef struct GrabberOpts {
     QString     path;
@@ -32,9 +32,9 @@ typedef struct GrabberOpts {
 // to compile.  apparently initializer lists are supported in QT5/CPP11 that
 // will make this work.  for now, use a lock and initialize on first access.
 // https://bugreports.qt-project.org/browse/QTBUG-25679
-QMap<GrabberType, GrabberOpts> grabberTypes;
-QMap<QString, GrabberType> grabberTypeStrings;
-bool initialized = false;
+static QMap<GrabberType, GrabberOpts> grabberTypes;
+static QMap<QString, GrabberType> grabberTypeStrings;
+static bool initialized = false;
 static QMutex typeLock;
 
 void InitializeStaticMaps(void)
@@ -106,7 +106,8 @@ GrabberList MetaGrabberScript::GetList(GrabberType type,
         // refresh grabber scripts every 60 seconds
         // this might have to be revised, or made more intelligent if
         // the delay during refreshes is too great
-        if (refresh || (grabberAge.secsTo(now) > kGrabberRefresh))
+        if (refresh || !grabberAge.isValid() ||
+            (grabberAge.secsTo(now) > kGrabberRefresh))
         {
             grabberList.clear();
             LOG(VB_GENERAL, LOG_DEBUG, LOC + "Clearing grabber cache");
@@ -204,16 +205,7 @@ MetaGrabberScript MetaGrabberScript::GetType(const GrabberType type)
         cmd = grabberTypes[type].def;
     }
 
-    if (grabberAge.secsTo(MythDate::current()) > kGrabberRefresh)
-    {
-        // polling the cache will cause a refresh, so lets just grab and
-        // process the script directly
-        QString fullcmd = QString("%1%2").arg(GetShareDir()).arg(cmd);
-        MetaGrabberScript script(fullcmd);
-        if (script.IsValid())
-            return script;
-    }
-    else
+    if (grabberAge.isValid() && grabberAge.secsTo(MythDate::current()) <= kGrabberRefresh)
     {
         // just pull it from the cache
         GrabberList list = GetList();
@@ -224,6 +216,16 @@ MetaGrabberScript MetaGrabberScript::GetType(const GrabberType type)
                 return *it;
     }
 
+    // polling the cache will cause a refresh, so lets just grab and
+    // process the script directly
+    QString fullcmd = QString("%1%2").arg(GetShareDir()).arg(cmd);
+    MetaGrabberScript script(fullcmd);
+
+    if (script.IsValid())
+    {
+        return script;
+    }
+
     return MetaGrabberScript();
 }
 
-- 
1.7.10.2

