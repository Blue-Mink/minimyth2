From 520b8bceb57235bba397fe7c15e12bc25f365ca5 Mon Sep 17 00:00:00 2001
From: Jean-Yves Avenard <jyavenard@mythtv.org>
Date: Tue, 10 Jun 2014 12:48:57 +1000
Subject: [PATCH 1/2] Implement copying one VideoFrame into another where
 strides are different

copy(VideoFrame*, VideoFrame*) is buggy in that it simply copy the content of one frame into another, ignoring resolution and stride size.

For now, only handle copying a frame into another where the resolution is the same but the strides are different.
This is required for VAAPI Null video output as typically, the frame extracted doesn't have a stride equal to the width of the video, and instead is 32 bytes aligned.

Code could be optimised and SSE accelerated, to come
---
 mythtv/libs/libmythtv/mythframe.h |   43 +++++++++++++++++++++++++++++++++++++
 1 file changed, 43 insertions(+)

diff --git a/mythtv/libs/libmythtv/mythframe.h b/mythtv/libs/libmythtv/mythframe.h
index 2a08d30..8ee72a6 100644
--- a/mythtv/libs/libmythtv/mythframe.h
+++ b/mythtv/libs/libmythtv/mythframe.h
@@ -165,6 +165,15 @@ static inline void clear(VideoFrame *vf)
 
 static inline bool compatible(const VideoFrame *a, const VideoFrame *b)
 {
+    if (a->codec == b->codec && a->codec == FMT_YV12)
+    {
+        return a && b &&
+            (a->codec      == b->codec)      &&
+            (a->width      == b->width)      &&
+            (a->height     == b->height)     &&
+            (a->size       == b->size);
+    }
+
     return a && b &&
         (a->codec      == b->codec)      &&
         (a->width      == b->width)      &&
@@ -178,6 +187,18 @@ static inline bool compatible(const VideoFrame *a, const VideoFrame *b)
         (a->pitches[2] == b->pitches[2]);
 }
 
+static inline void copyplane(unsigned char *dst, int dst_pitch,
+                             const unsigned char *src, int src_pitch,
+                             int width, int height)
+{
+    for (int y = 0; y < height; y++)
+    {
+        memcpy(dst, src, width);
+        src += src_pitch;
+        dst += dst_pitch;
+    }
+}
+
 static inline void copy(VideoFrame *dst, const VideoFrame *src)
 {
     VideoFrameType codec = dst->codec;
@@ -190,6 +211,28 @@ static inline void copy(VideoFrame *dst, const VideoFrame *src)
 
     if (FMT_YV12 == codec)
     {
+        int width   = src->width;
+        int height  = src->height;
+        int dwidth  = dst->width;
+        int dheight = dst->height;
+
+        if (height == dheight && width == dwidth &&
+            dst->pitches[0] != src->pitches[0])
+        {
+            // We have a different stride between the two frames
+            // drop the garbage data
+            copyplane(dst->buf + dst->offsets[0], dst->pitches[0],
+                      src->buf + src->offsets[0], src->pitches[0],
+                      width, height);
+            copyplane(dst->buf + dst->offsets[1], dst->pitches[1],
+                      src->buf + src->offsets[1], src->pitches[1],
+                      width / 2, height / 2);
+            copyplane(dst->buf + dst->offsets[2], dst->pitches[2],
+                      src->buf + src->offsets[2], src->pitches[2],
+                      width / 2, height / 2);
+            return;
+        }
+
         int height0 = (dst->height < src->height) ? dst->height : src->height;
         int height1 = height0 >> 1;
         int height2 = height0 >> 1;
-- 
1.7.10.2

