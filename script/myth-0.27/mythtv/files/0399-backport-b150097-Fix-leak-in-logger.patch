From b15009783583edc5c663d09ebb2a7baeeeab2c96 Mon Sep 17 00:00:00 2001
From: Jean-Yves Avenard <jyavenard@mythtv.org>
Date: Sat, 7 Jun 2014 16:30:43 +1000
Subject: [PATCH 12/13] Fix leak in logger

setThreadName can be called twice, obfuscating the previously allocated string

Fixes #12131
---
 mythtv/libs/libmythbase/logging.cpp |    1 -
 mythtv/libs/libmythbase/logging.h   |   26 +++++++++++++-------------
 2 files changed, 13 insertions(+), 14 deletions(-)

diff --git a/mythtv/libs/libmythbase/logging.cpp b/mythtv/libs/libmythbase/logging.cpp
index 273c0a0..8345a28 100644
--- a/mythtv/libs/libmythbase/logging.cpp
+++ b/mythtv/libs/libmythbase/logging.cpp
@@ -27,7 +27,6 @@ using namespace std;
 #include "exitcodes.h"
 #include "compat.h"
 
-#include <stdlib.h>
 #define SYSLOG_NAMES
 #ifndef _WIN32
 #include <syslog.h>
diff --git a/mythtv/libs/libmythbase/logging.h b/mythtv/libs/libmythbase/logging.h
index fd74a94..1a1479a 100644
--- a/mythtv/libs/libmythbase/logging.h
+++ b/mythtv/libs/libmythbase/logging.h
@@ -7,6 +7,7 @@
 #include <QTime>
 #include <QPointer>
 
+#include <stdlib.h>
 #include <stdint.h>
 #include <time.h>
 #include <unistd.h>
@@ -54,6 +55,11 @@ class LoggerThread;
 
 typedef struct tm tmType;
 
+#define SET_LOGGING_ARG(arg){ \
+                                if (arg) { free(const_cast<char*>(arg)); } \
+                                arg = strdup(val.toLocal8Bit().constData()); \
+                            }
+
 /// \brief The logging items that are generated by LOG() and are sent to the
 ///        console and to mythlogserver via ZeroMQ
 class LoggingItem: public QObject, public ReferenceCounter
@@ -116,19 +122,13 @@ class LoggingItem: public QObject, public ReferenceCounter
     void setLevel(const int val)            { m_level = (LogLevel_t)val; };
     void setFacility(const int val)         { m_facility = val; };
     void setEpoch(const qlonglong val)      { m_epoch = val; };
-    void setFile(const QString &val)
-            { m_file = strdup(val.toLocal8Bit().constData()); };
-    void setFunction(const QString &val)
-            { m_function = strdup(val.toLocal8Bit().constData()); };
-    void setThreadName(const QString &val)
-            { m_threadName = strdup(val.toLocal8Bit().constData()); };
-    void setAppName(const QString &val)
-            { m_appName = strdup(val.toLocal8Bit().constData()); };
-    void setTable(const QString &val)
-            { m_table = strdup(val.toLocal8Bit().constData()); };
-    void setLogFile(const QString &val)
-            { m_logFile = strdup(val.toLocal8Bit().constData()); };
-    void setMessage(const QString &val)        
+    void setFile(const QString &val)        SET_LOGGING_ARG(m_file)
+    void setFunction(const QString &val)    SET_LOGGING_ARG(m_function)
+    void setThreadName(const QString &val)  SET_LOGGING_ARG(m_threadName)
+    void setAppName(const QString &val)     SET_LOGGING_ARG(m_appName)
+    void setTable(const QString &val)       SET_LOGGING_ARG(m_table)
+    void setLogFile(const QString &val)     SET_LOGGING_ARG(m_logFile)
+    void setMessage(const QString &val)
     {
         strncpy(m_message, val.toLocal8Bit().constData(), LOGLINE_MAX);
         m_message[LOGLINE_MAX] = '\0';
-- 
1.7.10.2

