diff -Naur mythtv-0.27-20140519-gf4825ca-old/mythplugins/mythnetvision/mythnetvision/netbase.cpp mythtv-0.27-20140519-gf4825ca-new/mythplugins/mythnetvision/mythnetvision/netbase.cpp
--- mythtv-0.27-20140519-gf4825ca-old/mythplugins/mythnetvision/mythnetvision/netbase.cpp	2014-06-08 21:14:43.000000000 +0200
+++ mythtv-0.27-20140519-gf4825ca-new/mythplugins/mythnetvision/mythnetvision/netbase.cpp	2014-06-08 21:16:59.306747298 +0200
@@ -42,7 +42,7 @@
 
 void NetBase::Init()
 {
-    loadData();
+    LoadData();
 }
 
 void NetBase::DownloadVideo(const QString &url, const QString &dest)
@@ -104,7 +104,7 @@
     }
 }
 
-void NetBase::streamWebVideo()
+void NetBase::StreamWebVideo()
 {
     ResultItem *item = GetStreamItem();
 
@@ -113,7 +113,7 @@
 
     if (!item->GetDownloadable())
     {
-        showWebVideo();
+        ShowWebVideo();
         return;
     }
 
@@ -124,7 +124,7 @@
         item->GetTime().toInt(), item->GetDate().toString("yyyy"));
 }
 
-void NetBase::showWebVideo()
+void NetBase::ShowWebVideo()
 {
     ResultItem *item = GetStreamItem();
 
@@ -200,7 +200,7 @@
     GetMythUI()->RestoreScreensaver();
 }
 
-void NetBase::slotDeleteVideo()
+void NetBase::SlotDeleteVideo()
 {
     QString message = tr("Are you sure you want to delete this file?");
 
@@ -211,13 +211,13 @@
     {
         m_popupStack->AddScreen(confirmdialog);
         connect(confirmdialog, SIGNAL(haveResult(bool)),
-                SLOT(doDeleteVideo(bool)));
+                SLOT(DoDeleteVideo(bool)));
     }
     else
         delete confirmdialog;
 }
 
-void NetBase::doDeleteVideo(bool remove)
+void NetBase::DoDeleteVideo(bool remove)
 {
     if (!remove)
         return;
@@ -279,7 +279,7 @@
                     if ((errorCode == 0) &&
                         (fileSize > 0))
                     {
-                        doPlayVideo(m_downloadFile);
+                        DoPlayVideo(m_downloadFile);
                     }
                     else
                     {
@@ -291,7 +291,7 @@
     }
 }
 
-void NetBase::doDownloadAndPlay()
+void NetBase::DoDownloadAndPlay()
 {
     ResultItem *item = GetStreamItem();
     if (!item)
@@ -312,14 +312,14 @@
 
     if (exists)
     {
-        doPlayVideo(finalFilename);
+        DoPlayVideo(finalFilename);
         return;
     }
     else
         DownloadVideo(item->GetMediaURL(), baseFilename);
 }
 
-void NetBase::doPlayVideo(const QString &filename)
+void NetBase::DoPlayVideo(const QString &filename)
 {
     ResultItem *item = GetStreamItem();
     if (!item)
diff -Naur mythtv-0.27-20140519-gf4825ca-old/mythplugins/mythnetvision/mythnetvision/netbase.h mythtv-0.27-20140519-gf4825ca-new/mythplugins/mythnetvision/mythnetvision/netbase.h
--- mythtv-0.27-20140519-gf4825ca-old/mythplugins/mythnetvision/mythnetvision/netbase.h	2014-06-08 21:14:43.000000000 +0200
+++ mythtv-0.27-20140519-gf4825ca-new/mythplugins/mythnetvision/mythnetvision/netbase.h	2014-06-08 21:16:59.306747298 +0200
@@ -26,7 +26,7 @@
   protected:
     virtual void Init();
     virtual ResultItem *GetStreamItem() = 0;
-    virtual void loadData(void) = 0;
+    virtual void LoadData(void) = 0;
     void InitProgressDialog();
     void CreateBusyDialog(const QString &title);
     void CleanCacheDir();
@@ -34,12 +34,12 @@
     void RunCmdWithoutScreensaver(const QString &cmd);
 
   protected slots:
-    void streamWebVideo(void);
-    void showWebVideo(void);
-    void doDownloadAndPlay(void);
-    void doPlayVideo(const QString &filename);
-    void slotDeleteVideo(void);
-    void doDeleteVideo(bool remove);
+    void StreamWebVideo(void);
+    void ShowWebVideo(void);
+    void DoDownloadAndPlay(void);
+    void DoPlayVideo(const QString &filename);
+    void SlotDeleteVideo(void);
+    void DoDeleteVideo(bool remove);
     virtual void customEvent(QEvent *event);
 
   protected:
diff -Naur mythtv-0.27-20140519-gf4825ca-old/mythplugins/mythnetvision/mythnetvision/netsearch.cpp mythtv-0.27-20140519-gf4825ca-new/mythplugins/mythnetvision/mythnetvision/netsearch.cpp
--- mythtv-0.27-20140519-gf4825ca-old/mythplugins/mythnetvision/mythnetvision/netsearch.cpp	2014-06-08 21:17:50.783255111 +0200
+++ mythtv-0.27-20140519-gf4825ca-new/mythplugins/mythnetvision/mythnetvision/netsearch.cpp	2014-06-08 21:17:29.629996387 +0200
@@ -82,13 +82,13 @@
 
     // UI Hookups
     connect(m_siteList, SIGNAL(itemSelected(MythUIButtonListItem *)),
-                       SLOT(slotItemChanged()));
+                       SLOT(SlotItemChanged()));
     connect(m_siteList, SIGNAL(itemClicked(MythUIButtonListItem *)),
-                       SLOT(doSearch(void)));
+                       SLOT(DoSearch(void)));
     connect(m_searchResultList, SIGNAL(itemClicked(MythUIButtonListItem *)),
-                       SLOT(streamWebVideo(void)));
+                       SLOT(StreamWebVideo(void)));
     connect(m_searchResultList, SIGNAL(itemSelected(MythUIButtonListItem *)),
-                       SLOT(slotItemChanged()));
+                       SLOT(SlotItemChanged()));
 
     BuildFocusList();
 
@@ -112,9 +112,9 @@
     }
 }
 
-void NetSearch::loadData(void)
+void NetSearch::LoadData(void)
 {
-    fillGrabberButtonList();
+    FillGrabberButtonList();
 
     if (m_grabberList.count() == 0 && m_noSites)
         m_noSites->SetVisible(true);
@@ -122,7 +122,7 @@
         m_noSites->SetVisible(false);
 
     if (m_grabberList.isEmpty())
-        runSearchEditor();
+        RunSearchEditor();
 }
 
 bool NetSearch::keyPressEvent(QKeyEvent *event)
@@ -141,7 +141,7 @@
 
         if (action == "MENU")
         {
-            showMenu();
+            ShowMenu();
         }
         else
             handled = false;
@@ -171,7 +171,7 @@
     return handled;
 }
 
-void NetSearch::showMenu(void)
+void NetSearch::ShowMenu(void)
 {
     QString label = tr("Search Options");
 
@@ -190,8 +190,8 @@
             if (item)
             {
                 if (item->GetDownloadable())
-                    menuPopup->AddButton(tr("Stream Video"), SLOT(streamWebVideo()));
-                menuPopup->AddButton(tr("Open Web Link"), SLOT(showWebVideo()));
+                    menuPopup->AddButton(tr("Stream Video"), SLOT(StreamWebVideo()));
+                menuPopup->AddButton(tr("Open Web Link"), SLOT(ShowWebVideo()));
 
                 QString filename = GetDownloadFilename(item->GetTitle(),
                     item->GetMediaURL());
@@ -206,25 +206,25 @@
                     GetFocusWidget() == m_searchResultList)
                 {
                     if (exists)
-                        menuPopup->AddButton(tr("Play"), SLOT(doPlayVideo(filename)));
+                        menuPopup->AddButton(tr("Play"), SLOT(DoPlayVideo(filename)));
                     else
-                        menuPopup->AddButton(tr("Save This Video"), SLOT(doDownloadAndPlay()));
+                        menuPopup->AddButton(tr("Save This Video"), SLOT(DoDownloadAndPlay()));
                 }
 
                 if (item->GetDownloadable() &&
                     GetFocusWidget() == m_searchResultList &&
                     exists)
                 {
-                    menuPopup->AddButton(tr("Delete"), SLOT(slotDeleteVideo()));
+                    menuPopup->AddButton(tr("Delete"), SLOT(SlotDeleteVideo()));
                 }
             }
 
             if (m_pagenum > 1)
-                menuPopup->AddButton(tr("Previous Page"), SLOT(getLastResults()));
+                menuPopup->AddButton(tr("Previous Page"), SLOT(GetLastResults()));
             if (m_searchResultList->GetCount() > 0 && m_pagenum < m_maxpage)
-                menuPopup->AddButton(tr("Next Page"), SLOT(getMoreResults()));
+                menuPopup->AddButton(tr("Next Page"), SLOT(GetMoreResults()));
         }
-        menuPopup->AddButton(tr("Manage Search Scripts"), SLOT(runSearchEditor()));
+        menuPopup->AddButton(tr("Manage Search Scripts"), SLOT(RunSearchEditor()));
 
     }
     else
@@ -233,7 +233,7 @@
     }
 }
 
-void NetSearch::fillGrabberButtonList()
+void NetSearch::FillGrabberButtonList()
 {
     m_siteList->Reset();
 
@@ -250,7 +250,7 @@
     }
 }
 
-void NetSearch::doSearch()
+void NetSearch::DoSearch()
 {
     m_searchResultList->Reset();
 
@@ -283,7 +283,7 @@
     if (!m_netSearch)
         m_netSearch = new QNetworkAccessManager(this);
     connect(m_netSearch, SIGNAL(finished(QNetworkReply*)),
-                       SLOT(searchFinished(void)));
+                       SLOT(SearchFinished(void)));
 
     QUrl init = GetMythXMLSearch(m_mythXML, m_currentSearch,
                                 m_currentCmd, m_pagenum);
@@ -293,7 +293,7 @@
     m_reply = m_netSearch->get(QNetworkRequest(req));
 }
 
-void NetSearch::getLastResults()
+void NetSearch::GetLastResults()
 {
     m_searchResultList->Reset();
 
@@ -309,7 +309,7 @@
     m_reply = m_netSearch->get(QNetworkRequest(req));
 }
 
-void NetSearch::getMoreResults()
+void NetSearch::GetMoreResults()
 {
     m_searchResultList->Reset();
 
@@ -325,7 +325,7 @@
     m_reply = m_netSearch->get(QNetworkRequest(req));
 }
 
-void NetSearch::searchFinished(void)
+void NetSearch::SearchFinished(void)
 {
     if (m_busyPopup)
     {
@@ -367,10 +367,10 @@
                         .arg(QString::number(m_maxpage)));
 
     ResultItem::resultList list = item->GetVideoList();
-    populateResultList(list);
+    PopulateResultList(list);
 }
 
-void NetSearch::searchTimeout(Search *)
+void NetSearch::SearchTimeout(Search *)
 {
     if (m_busyPopup)
     {
@@ -396,7 +396,7 @@
     }
 }
 
-void NetSearch::populateResultList(ResultItem::resultList list)
+void NetSearch::PopulateResultList(ResultItem::resultList list)
 {
     for (ResultItem::resultList::iterator i = list.begin();
             i != list.end(); ++i)
@@ -436,7 +436,7 @@
     return qVariantValue<ResultItem *>(m_searchResultList->GetDataValue());
 }
 
-void NetSearch::runSearchEditor()
+void NetSearch::RunSearchEditor()
 {
     MythScreenStack *mainStack = GetMythMainWindow()->GetMainStack();
 
@@ -445,7 +445,7 @@
     if (searchedit->Create())
     {
         connect(searchedit, SIGNAL(ItemsChanged()), this,
-                       SLOT(doListRefresh()));
+                       SLOT(DoListRefresh()));
 
         mainStack->AddScreen(searchedit);
     }
@@ -455,16 +455,16 @@
     }
 }
 
-void NetSearch::doListRefresh()
+void NetSearch::DoListRefresh()
 {
     m_grabberList = findAllDBSearchGrabbers(VIDEO_FILE);
     if (m_grabberList.isEmpty())
-        runSearchEditor();
+        RunSearchEditor();
 
-    loadData();
+    LoadData();
 }
 
-void NetSearch::slotItemChanged()
+void NetSearch::SlotItemChanged()
 {
     ResultItem *item =
               qVariantValue<ResultItem *>(m_searchResultList->GetDataValue());
@@ -528,25 +528,6 @@
     }
 }
 
-void NetSearch::slotDoProgress(qint64 bytesReceived, qint64 bytesTotal)
-{
-    if (m_progress)
-    {
-        int total = bytesTotal/100;
-        int received = bytesReceived/100;
-        m_progress->SetTotal(total);
-        m_progress->SetUsed(received);
-        LOG(VB_GENERAL, LOG_DEBUG, QString("Progress event received: %1/%2")
-                               .arg(received).arg(total));
-    }
-}
-
-void NetSearch::slotDownloadFinished()
-{
-    if (m_progress)
-       m_progress->SetVisible(false);
-}
-
 void NetSearch::customEvent(QEvent *event)
 {
     if (event->type() == ThumbnailDLEvent::kEventType)
diff -Naur mythtv-0.27-20140519-gf4825ca-old/mythplugins/mythnetvision/mythnetvision/netsearch.h mythtv-0.27-20140519-gf4825ca-new/mythplugins/mythnetvision/mythnetvision/netsearch.h
--- mythtv-0.27-20140519-gf4825ca-old/mythplugins/mythnetvision/mythnetvision/netsearch.h	2014-06-08 21:14:43.000000000 +0200
+++ mythtv-0.27-20140519-gf4825ca-new/mythplugins/mythnetvision/mythnetvision/netsearch.h	2014-06-08 21:16:59.306747298 +0200
@@ -28,7 +28,7 @@
     bool Create(void);
     bool keyPressEvent(QKeyEvent *);
 
-    void populateResultList(ResultItem::resultList list);
+    void PopulateResultList(ResultItem::resultList list);
 
   protected:
     virtual ResultItem *GetStreamItem();
@@ -59,21 +59,18 @@
     RSSSite::rssList    m_rssList;
 
   private slots:
-    void showMenu(void);
-    void getMoreResults();
-    void getLastResults();
-    void runSearchEditor();
-    void doListRefresh();
-
-    void doSearch(void);
-    void searchFinished(void);
-    void searchTimeout(Search *item);
-    void loadData(void);
-    void fillGrabberButtonList(void);
-    void slotItemChanged(void);
-    void slotDoProgress(qint64 bytesReceived,
-                        qint64 bytesTotal);
-    void slotDownloadFinished(void);
+    void ShowMenu(void);
+    void GetMoreResults();
+    void GetLastResults();
+    void RunSearchEditor();
+    void DoListRefresh();
+
+    void DoSearch(void);
+    void SearchFinished(void);
+    void SearchTimeout(Search *item);
+    void LoadData(void);
+    void FillGrabberButtonList(void);
+    void SlotItemChanged(void);
     void customEvent(QEvent *levent);
 };
 
diff -Naur mythtv-0.27-20140519-gf4825ca-old/mythplugins/mythnetvision/mythnetvision/nettree.cpp mythtv-0.27-20140519-gf4825ca-new/mythplugins/mythnetvision/mythnetvision/nettree.cpp
--- mythtv-0.27-20140519-gf4825ca-old/mythplugins/mythnetvision/mythnetvision/nettree.cpp	2014-06-08 21:14:43.000000000 +0200
+++ mythtv-0.27-20140519-gf4825ca-new/mythplugins/mythnetvision/mythnetvision/nettree.cpp	2014-06-08 21:16:59.310080701 +0200
@@ -46,7 +46,7 @@
       m_currentNode(NULL),           m_noSites(NULL),
       m_gdt(new GrabberDownloadThread(this)), m_type(type)
 {
-    connect(m_gdt, SIGNAL(finished()), SLOT(doTreeRefresh()));
+    connect(m_gdt, SIGNAL(finished()), SLOT(DoTreeRefresh()));
     m_updateFreq = gCoreContext->GetNumSetting(
                        "mythNetTree.updateFreq", 6);
     m_rssAutoUpdate = gCoreContext->GetNumSetting(
@@ -108,20 +108,20 @@
         SetFocusWidget(m_siteMap);
 
         connect(m_siteMap, SIGNAL(itemClicked(MythUIButtonListItem *)),
-                SLOT(streamWebVideo(void)));
+                SLOT(StreamWebVideo(void)));
         connect(m_siteMap, SIGNAL(itemSelected(MythUIButtonListItem *)),
-                SLOT(slotItemChanged(void)));
+                SLOT(SlotItemChanged(void)));
         connect(m_siteMap, SIGNAL(nodeChanged(MythGenericTree *)),
-                SLOT(slotItemChanged(void)));
+                SLOT(SlotItemChanged(void)));
     }
     else
     {
         SetFocusWidget(m_siteButtonList);
 
         connect(m_siteButtonList, SIGNAL(itemClicked(MythUIButtonListItem *)),
-                SLOT(handleSelect(MythUIButtonListItem *)));
+                SLOT(HandleSelect(MythUIButtonListItem *)));
         connect(m_siteButtonList, SIGNAL(itemSelected(MythUIButtonListItem *)),
-                SLOT(slotItemChanged(void)));
+                SLOT(SlotItemChanged(void)));
     }
 
     return true;
@@ -132,7 +132,7 @@
     m_grabberList = findAllDBTreeGrabbersByHost(VIDEO_FILE);
     m_rssList = findAllDBRSS();
 
-    fillTree();
+    FillTree();
 }
 
 void NetTree::SetCurrentNode(MythGenericTree *node)
@@ -160,7 +160,7 @@
     m_videos.clear();
 }
 
-void NetTree::loadData(void)
+void NetTree::LoadData(void)
 {
     if (m_type == DLG_TREE)
         m_siteMap->AssignTree(m_siteGeneric);
@@ -197,7 +197,7 @@
             }
         }
 
-        slotItemChanged();
+        SlotItemChanged();
     }
 
     if (m_siteGeneric->childCount() == 0 && m_noSites)
@@ -206,7 +206,7 @@
         m_noSites->SetVisible(false);
 
     if (m_siteGeneric->childCount() == 0)
-        runTreeEditor();
+        RunTreeEditor();
 }
 
 void NetTree::UpdateItem(MythUIButtonListItem *item)
@@ -306,7 +306,7 @@
     }
 }
 
-void NetTree::handleSelect(MythUIButtonListItem *item)
+void NetTree::HandleSelect(MythUIButtonListItem *item)
 {
     MythGenericTree *node = GetNodePtrFromButton(item);
     if (!node)
@@ -317,29 +317,29 @@
     switch (nodeInt)
     {
         case kSubFolder:
-            handleDirSelect(node);
+            HandleDirSelect(node);
             break;
         case kUpFolder:
-            goBack();
+            GoBack();
             break;
         default:
         {
-            streamWebVideo();
+            StreamWebVideo();
         }
     }
-    slotItemChanged();
+    SlotItemChanged();
 }
 
-void NetTree::handleDirSelect(MythGenericTree *node)
+void NetTree::HandleDirSelect(MythGenericTree *node)
 {
     if (m_imageDownload && m_imageDownload->isRunning())
         m_imageDownload->cancel();
 
     SetCurrentNode(node);
-    loadData();
+    LoadData();
 }
 
-bool NetTree::goBack()
+bool NetTree::GoBack()
 {
     bool handled = false;
 
@@ -356,7 +356,7 @@
         }
     }
 
-    loadData();
+    LoadData();
 
     return handled;
 }
@@ -377,14 +377,14 @@
 
         if (action == "MENU")
         {
-            showMenu();
+            ShowMenu();
         }
         else if (action == "ESCAPE")
         {
             if (m_type != DLG_TREE
                     && !GetMythMainWindow()->IsExitingToMain()
                     && m_currentNode != m_siteGeneric)
-                handled = goBack();
+                handled = GoBack();
             else
                 handled = false;
         }
@@ -398,7 +398,7 @@
     return handled;
 }
 
-void NetTree::showMenu(void)
+void NetTree::ShowMenu(void)
 {
     QString label = tr("Playback/Download Options");
 
@@ -423,15 +423,15 @@
     if (item)
     {
         if (item->GetDownloadable())
-            menu->AddItem(tr("Stream Video"), SLOT(streamWebVideo()));
-        menu->AddItem(tr("Open Web Link"), SLOT(showWebVideo()));
+            menu->AddItem(tr("Stream Video"), SLOT(StreamWebVideo()));
+        menu->AddItem(tr("Open Web Link"), SLOT(ShowWebVideo()));
 
         if (item->GetDownloadable())
-            menu->AddItem(tr("Save This Video"), SLOT(doDownloadAndPlay()));
+            menu->AddItem(tr("Save This Video"), SLOT(DoDownloadAndPlay()));
     }
 
-    menu->AddItem(tr("Scan/Manage Subscriptions"), NULL, createShowManageMenu());
-    menu->AddItem(tr("Change View"), NULL, createShowViewMenu());
+    menu->AddItem(tr("Scan/Manage Subscriptions"), NULL, CreateShowManageMenu());
+    menu->AddItem(tr("Change View"), NULL, CreateShowViewMenu());
 
     MythDialogBox *menuPopup = new MythDialogBox(menu, m_popupStack, "mythnettreemenupopup");
 
@@ -441,64 +441,64 @@
         delete menuPopup;
 }
 
-MythMenu* NetTree::createShowViewMenu()
+MythMenu* NetTree::CreateShowViewMenu()
 {
     QString label = tr("View Options");
 
     MythMenu *menu = new MythMenu(label, this, "options");
 
     if (m_type != DLG_TREE)
-        menu->AddItem(tr("Switch to List View"), SLOT(switchTreeView()));
+        menu->AddItem(tr("Switch to List View"), SLOT(SwitchTreeView()));
     if (m_type != DLG_GALLERY)
-        menu->AddItem(tr("Switch to Gallery View"), SLOT(switchGalleryView()));
+        menu->AddItem(tr("Switch to Gallery View"), SLOT(SwitchGalleryView()));
     if (m_type != DLG_BROWSER)
-        menu->AddItem(tr("Switch to Browse View"), SLOT(switchBrowseView()));
+        menu->AddItem(tr("Switch to Browse View"), SLOT(SwitchBrowseView()));
 
     return menu;
 }
 
-MythMenu* NetTree::createShowManageMenu()
+MythMenu* NetTree::CreateShowManageMenu()
 {
     QString label = tr("Subscription Management");
 
     MythMenu *menu = new MythMenu(label, this, "options");
 
 
-    menu->AddItem(tr("Update Site Maps"), SLOT(updateTrees()));
-    menu->AddItem(tr("Update RSS"), SLOT(updateRSS()));
-    menu->AddItem(tr("Manage Site Subscriptions"), SLOT(runTreeEditor()));
-    menu->AddItem(tr("Manage RSS Subscriptions"), SLOT(runRSSEditor()));
+    menu->AddItem(tr("Update Site Maps"), SLOT(UpdateTrees()));
+    menu->AddItem(tr("Update RSS"), SLOT(UpdateRSS()));
+    menu->AddItem(tr("Manage Site Subscriptions"), SLOT(RunTreeEditor()));
+    menu->AddItem(tr("Manage RSS Subscriptions"), SLOT(RunRSSEditor()));
     if (!m_treeAutoUpdate)
-        menu->AddItem(tr("Enable Automatic Site Updates"), SLOT(toggleTreeUpdates()));
+        menu->AddItem(tr("Enable Automatic Site Updates"), SLOT(ToggleTreeUpdates()));
     else
-        menu->AddItem(tr("Disable Automatic Site Updates"), SLOT(toggleTreeUpdates()));
+        menu->AddItem(tr("Disable Automatic Site Updates"), SLOT(ToggleTreeUpdates()));
 //    if (!m_rssAutoUpdate)
-//        menu->AddItem(tr("Enable Automatic RSS Updates"), SLOT(toggleRSSUpdates()));
+//        menu->AddItem(tr("Enable Automatic RSS Updates"), SLOT(ToggleRSSUpdates()));
 //    else
-//        menu->AddItem(tr("Disable Automatic RSS Updates"), SLOT(toggleRSSUpdates()));
+//        menu->AddItem(tr("Disable Automatic RSS Updates"), SLOT(ToggleRSSUpdates()));
 
     return menu;
 }
 
-void NetTree::switchTreeView()
+void NetTree::SwitchTreeView()
 {
     m_type = DLG_TREE;
-    switchView();
+    SwitchView();
 }
 
-void NetTree::switchGalleryView()
+void NetTree::SwitchGalleryView()
 {
     m_type = DLG_GALLERY;
-    switchView();
+    SwitchView();
 }
 
-void NetTree::switchBrowseView()
+void NetTree::SwitchBrowseView()
 {
     m_type = DLG_BROWSER;
-    switchView();
+    SwitchView();
 }
 
-void NetTree::switchView()
+void NetTree::SwitchView()
 {
     NetTree *nettree =
             new NetTree(m_type, GetMythMainWindow()->GetMainStack(), "nettree");
@@ -515,7 +515,7 @@
         delete nettree;
 }
 
-void NetTree::fillTree()
+void NetTree::FillTree()
 {
     // First let's add all the RSS
 
@@ -591,13 +591,13 @@
             QStringList curPaths = (*i).first.split("/");
             QString dirthumb = (*i).second;
             QList<ResultItem*> videos = treePathsNodes.values(*i);
-            buildGenericTree(ret, curPaths, dirthumb, videos);
+            BuildGenericTree(ret, curPaths, dirthumb, videos);
         }
         m_siteGeneric->addNode(ret);
     }
 }
 
-void NetTree::buildGenericTree(MythGenericTree *dst, QStringList paths,
+void NetTree::BuildGenericTree(MythGenericTree *dst, QStringList paths,
                                QString dirthumb, QList<ResultItem*> videos)
 {
     MythGenericTree *folder = NULL;
@@ -630,7 +630,7 @@
     }
 
     if (paths.size())
-        buildGenericTree(folder, paths, dirthumb, videos);
+        BuildGenericTree(folder, paths, dirthumb, videos);
     else
     {
         // File Handling
@@ -668,7 +668,7 @@
     return item;
 }
 
-void NetTree::slotItemChanged()
+void NetTree::SlotItemChanged()
 {
     ResultItem *item;
     RSSSite *site;
@@ -827,7 +827,7 @@
     }
 }
 
-void NetTree::runTreeEditor()
+void NetTree::RunTreeEditor()
 {
     MythScreenStack *mainStack = GetMythMainWindow()->GetMainStack();
 
@@ -836,7 +836,7 @@
     if (treeedit->Create())
     {
         connect(treeedit, SIGNAL(ItemsChanged()), this,
-                       SLOT(doTreeRefresh()));
+                       SLOT(DoTreeRefresh()));
 
         mainStack->AddScreen(treeedit);
     }
@@ -846,7 +846,7 @@
     }
 }
 
-void NetTree::runRSSEditor()
+void NetTree::RunRSSEditor()
 {
     MythScreenStack *mainStack = GetMythMainWindow()->GetMainStack();
 
@@ -855,7 +855,7 @@
     if (rssedit->Create())
     {
         connect(rssedit, SIGNAL(ItemsChanged()), this,
-                       SLOT(updateRSS()));
+                       SLOT(UpdateRSS()));
 
         mainStack->AddScreen(rssedit);
     }
@@ -865,7 +865,7 @@
     }
 }
 
-void NetTree::doTreeRefresh()
+void NetTree::DoTreeRefresh()
 {
     if (m_busyPopup)
     {
@@ -884,12 +884,12 @@
     m_grabberList = findAllDBTreeGrabbers();
     m_rssList = findAllDBRSS();
 
-    fillTree();
-    loadData();
-    switchView();
+    FillTree();
+    LoadData();
+    SwitchView();
 }
 
-void NetTree::updateRSS()
+void NetTree::UpdateRSS()
 {
     if (findAllDBRSS().isEmpty())
         return;
@@ -899,12 +899,12 @@
 
     RSSManager *rssMan = new RSSManager();
     connect(rssMan, SIGNAL(finished()), this,
-                   SLOT(doTreeRefresh()));
+                   SLOT(DoTreeRefresh()));
     rssMan->startTimer();
     rssMan->doUpdate();
 }
 
-void NetTree::updateTrees()
+void NetTree::UpdateTrees()
 {
     if (m_grabberList.count() == 0)
         return;
@@ -914,14 +914,14 @@
     m_gdt->refreshAll();
 }
 
-void NetTree::toggleRSSUpdates()
+void NetTree::ToggleRSSUpdates()
 {
     m_rssAutoUpdate = !m_rssAutoUpdate;
     gCoreContext->SaveSetting("mythnetvision.rssBackgroundFetch",
                          m_rssAutoUpdate);
 }
 
-void NetTree::toggleTreeUpdates()
+void NetTree::ToggleTreeUpdates()
 {
     m_treeAutoUpdate = !m_treeAutoUpdate;
     gCoreContext->SaveSetting("mythnetvision.backgroundFetch",
diff -Naur mythtv-0.27-20140519-gf4825ca-old/mythplugins/mythnetvision/mythnetvision/nettree.h mythtv-0.27-20140519-gf4825ca-new/mythplugins/mythnetvision/mythnetvision/nettree.h
--- mythtv-0.27-20140519-gf4825ca-old/mythplugins/mythnetvision/mythnetvision/nettree.h	2014-06-08 21:14:43.000000000 +0200
+++ mythtv-0.27-20140519-gf4825ca-new/mythplugins/mythnetvision/mythnetvision/nettree.h	2014-06-08 21:16:59.310080701 +0200
@@ -49,23 +49,21 @@
     bool Create(void);
     bool keyPressEvent(QKeyEvent *);
 
-    void populateResultList(ResultItem::resultList list);
-
   protected:
     virtual ResultItem *GetStreamItem();
 
   private:
     virtual void Load();
 
-    void fillTree(void);
+    void FillTree(void);
     void SetCurrentNode(MythGenericTree *node);
-    void handleDirSelect(MythGenericTree *node);
-    bool goBack();
+    void HandleDirSelect(MythGenericTree *node);
+    bool GoBack();
     void UpdateItem(MythUIButtonListItem *item);
 
-    void buildGenericTree(MythGenericTree* dst,
+    void BuildGenericTree(MythGenericTree* dst,
                     QDomElement& domElem);
-    void buildGenericTree(MythGenericTree *dst,
+    void BuildGenericTree(MythGenericTree *dst,
                           QStringList paths,
                           QString dirthumb,
                           QList<ResultItem*> videos);
@@ -73,7 +71,7 @@
     int AddFileNode(MythGenericTree *where_to_add,
                     ResultItem *video);
 
-    void switchView(void);
+    void SwitchView(void);
 
     // Only to keep track of what to delete
     QList<ResultItem*> m_videos;
@@ -96,26 +94,26 @@
     bool                m_treeAutoUpdate;
 
   private slots:
-    void showMenu(void);
-    MythMenu* createShowViewMenu(void);
-    MythMenu* createShowManageMenu(void);
-    void runTreeEditor(void);
-    void runRSSEditor(void);
-    void loadData(void);
-    void handleSelect(MythUIButtonListItem *item);
-
-    void switchTreeView(void);
-    void switchGalleryView(void);
-    void switchBrowseView(void);
-
-    void updateRSS();
-    void updateTrees();
-    void toggleRSSUpdates();
-    void toggleTreeUpdates();
+    void ShowMenu(void);
+    MythMenu* CreateShowViewMenu(void);
+    MythMenu* CreateShowManageMenu(void);
+    void RunTreeEditor(void);
+    void RunRSSEditor(void);
+    void LoadData(void);
+    void HandleSelect(MythUIButtonListItem *item);
+
+    void SwitchTreeView(void);
+    void SwitchGalleryView(void);
+    void SwitchBrowseView(void);
+
+    void UpdateRSS();
+    void UpdateTrees();
+    void ToggleRSSUpdates();
+    void ToggleTreeUpdates();
 
-    void slotItemChanged();
+    void SlotItemChanged();
 
-    void doTreeRefresh();
+    void DoTreeRefresh();
     void TreeRefresh();
 
     void customEvent(QEvent *levent);
diff -Naur mythtv-0.27-20140519-gf4825ca-old/mythplugins/mythnetvision/mythnetvision/rsseditor.cpp mythtv-0.27-20140519-gf4825ca-new/mythplugins/mythnetvision/mythnetvision/rsseditor.cpp
--- mythtv-0.27-20140519-gf4825ca-old/mythplugins/mythnetvision/mythnetvision/rsseditor.cpp	2014-06-08 21:17:50.783255111 +0200
+++ mythtv-0.27-20140519-gf4825ca-new/mythplugins/mythnetvision/mythnetvision/rsseditor.cpp	2014-06-08 21:16:59.310080701 +0200
@@ -97,9 +97,9 @@
         return false;
     }
 
-    connect(m_okButton, SIGNAL(Clicked()), this, SLOT(parseAndSave()));
+    connect(m_okButton, SIGNAL(Clicked()), this, SLOT(ParseAndSave()));
     connect(m_cancelButton, SIGNAL(Clicked()), this, SLOT(Close()));
-    connect(m_thumbButton, SIGNAL(Clicked()), this, SLOT(doFileBrowser()));
+    connect(m_thumbButton, SIGNAL(Clicked()), this, SLOT(DoFileBrowser()));
 
     m_urlEdit->SetMaxLength(0);
     m_titleEdit->SetMaxLength(255);
@@ -146,7 +146,7 @@
     return handled;
 }
 
-void RSSEditPopup::parseAndSave(void)
+void RSSEditPopup::ParseAndSave(void)
 {
     if (m_editing)
     {
@@ -166,7 +166,7 @@
 
         if (insertInDB(new RSSSite(title, filename, VIDEO_PODCAST,
                 desc, link, author, download, MythDate::current())))
-            emit saving();
+            emit Saving();
         Close();
     }
     else
@@ -177,7 +177,7 @@
         m_reply = m_manager->get(QNetworkRequest(qurl));
 
         connect(m_manager, SIGNAL(finished(QNetworkReply*)), this,
-                           SLOT(slotCheckRedirect(QNetworkReply*)));
+                           SLOT(SlotCheckRedirect(QNetworkReply*)));
     }
 }
 
@@ -190,7 +190,7 @@
     return redirectUrl;
 }
 
-void RSSEditPopup::slotCheckRedirect(QNetworkReply* reply)
+void RSSEditPopup::SlotCheckRedirect(QNetworkReply* reply)
 {
     QVariant possibleRedirectUrl =
          reply->attribute(QNetworkRequest::RedirectionTargetAttribute);
@@ -207,12 +207,12 @@
     else
     {
 //        urlRedirectedTo.clear();
-        slotSave(reply);
+        SlotSave(reply);
     }
     reply->deleteLater();
 }
 
-void RSSEditPopup::slotSave(QNetworkReply* reply)
+void RSSEditPopup::SlotSave(QNetworkReply* reply)
 {
     QDomDocument document;
     document.setContent(reply->read(reply->bytesAvailable()), true);
@@ -314,13 +314,13 @@
 
         if (insertInDB(new RSSSite(title, filename, VIDEO_PODCAST, description, link,
                 author, download, MythDate::current())))
-            emit saving();
+            emit Saving();
     }
 
     Close();
 }
 
-void RSSEditPopup::doFileBrowser()
+void RSSEditPopup::DoFileBrowser()
 {
     SelectImagePopup(GetConfDir() + "/MythNetvision" + "/sitecovers", *this, CEID_NEWIMAGE);
 }
@@ -368,7 +368,7 @@
     QMutexLocker locker(&m_lock);
 
     if (m_changed)
-        emit itemsChanged();
+        emit ItemsChanged();
 }
 
 bool RSSEditor::Create(void)
@@ -400,31 +400,31 @@
     }
 
     connect(m_sites, SIGNAL(itemClicked(MythUIButtonListItem*)),
-            this, SLOT(slotEditSite(void)));
+            this, SLOT(SlotEditSite(void)));
 
     connect(m_delete, SIGNAL(Clicked(void)),
-            SLOT(slotDeleteSite(void)));
+            SLOT(SlotDeleteSite(void)));
     connect(m_edit, SIGNAL(Clicked(void)),
-            SLOT(slotEditSite(void)));
+            SLOT(SlotEditSite(void)));
     connect(m_new, SIGNAL(Clicked(void)),
-            SLOT(slotNewSite(void)));
+            SLOT(SlotNewSite(void)));
 
     connect(m_sites, SIGNAL(itemSelected(MythUIButtonListItem *)),
-            SLOT(slotItemChanged(void)));
+            SLOT(SlotItemChanged(void)));
 
     BuildFocusList();
 
-    loadData();
+    LoadData();
 
     if (m_sites->GetCount() == 0)
         SetFocusWidget(m_new);
     else
-        slotItemChanged();
+        SlotItemChanged();
 
     return true;
 }
 
-void RSSEditor::loadData()
+void RSSEditor::LoadData()
 {
     qDeleteAll(m_siteList);
     m_siteList = findAllDBRSS();
@@ -458,11 +458,11 @@
 
         if (action == "DELETE" && GetFocusWidget() == m_sites)
         {
-            slotDeleteSite();
+            SlotDeleteSite();
         }
         else if (action == "EDIT" && GetFocusWidget() == m_sites)
         {
-            slotEditSite();
+            SlotEditSite();
         }
         else
             handled = false;
@@ -495,7 +495,7 @@
     }
 }
 
-void RSSEditor::slotItemChanged()
+void RSSEditor::SlotItemChanged()
 {
     RSSSite *site = qVariantValue<RSSSite *>(m_sites->GetItemCurrent()->GetData());
 
@@ -524,7 +524,7 @@
     }
 }
 
-void RSSEditor::slotDeleteSite()
+void RSSEditor::SlotDeleteSite()
 {
     QMutexLocker locker(&m_lock);
 
@@ -540,13 +540,13 @@
         m_popupStack->AddScreen(confirmdialog);
 
         connect(confirmdialog, SIGNAL(haveResult(bool)),
-                SLOT(doDeleteSite(bool)));
+                SLOT(DoDeleteSite(bool)));
     }
     else
         delete confirmdialog;
 }
 
-void RSSEditor::slotEditSite()
+void RSSEditor::SlotEditSite()
 {
     QMutexLocker locker(&m_lock);
 
@@ -560,8 +560,8 @@
 
         if (rsseditpopup->Create())
         {
-            connect(rsseditpopup, SIGNAL(saving()), this,
-                           SLOT(listChanged()));
+            connect(rsseditpopup, SIGNAL(Saving()), this,
+                           SLOT(ListChanged()));
 
             mainStack->AddScreen(rsseditpopup);
         }
@@ -572,7 +572,7 @@
     }
 }
 
-void RSSEditor::slotNewSite()
+void RSSEditor::SlotNewSite()
 {
     QMutexLocker locker(&m_lock);
 
@@ -582,8 +582,8 @@
 
     if (rsseditpopup->Create())
     {
-        connect(rsseditpopup, SIGNAL(saving()), this,
-                       SLOT(listChanged()));
+        connect(rsseditpopup, SIGNAL(Saving()), this,
+                       SLOT(ListChanged()));
 
         mainStack->AddScreen(rsseditpopup);
     }
@@ -593,7 +593,7 @@
     }
 }
 
-void RSSEditor::doDeleteSite(bool remove)
+void RSSEditor::DoDeleteSite(bool remove)
 {
     QMutexLocker locker(&m_lock);
 
@@ -603,11 +603,11 @@
     RSSSite *site = qVariantValue<RSSSite *>(m_sites->GetItemCurrent()->GetData());
 
     if (removeFromDB(site))
-        listChanged();
+        ListChanged();
 }
 
-void RSSEditor::listChanged()
+void RSSEditor::ListChanged()
 {
     m_changed = true;
-    loadData();
+    LoadData();
 }
diff -Naur mythtv-0.27-20140519-gf4825ca-old/mythplugins/mythnetvision/mythnetvision/rsseditor.h mythtv-0.27-20140519-gf4825ca-new/mythplugins/mythnetvision/mythnetvision/rsseditor.h
--- mythtv-0.27-20140519-gf4825ca-old/mythplugins/mythnetvision/mythnetvision/rsseditor.h	2014-05-19 15:29:48.000000000 +0200
+++ mythtv-0.27-20140519-gf4825ca-new/mythplugins/mythnetvision/mythnetvision/rsseditor.h	2014-06-08 21:16:59.310080701 +0200
@@ -58,13 +58,13 @@
     QNetworkReply          *m_reply;
 
   signals:
-    void saving(void);
+    void Saving(void);
 
   private slots:
-    void slotCheckRedirect(QNetworkReply* reply);
-    void parseAndSave(void);
-    void slotSave(QNetworkReply *reply);
-    void doFileBrowser(void);
+    void SlotCheckRedirect(QNetworkReply* reply);
+    void ParseAndSave(void);
+    void SlotSave(QNetworkReply *reply);
+    void DoFileBrowser(void);
     void SelectImagePopup(const QString &prefix,
                         QObject &inst,
                         const QString &returnEvent);
@@ -101,17 +101,17 @@
     MythUIText       *m_author;
 
   signals:
-    void itemsChanged(void);
+    void ItemsChanged(void);
 
   public slots:
-    void slotItemChanged();
-    void loadData(void);
+    void SlotItemChanged();
+    void LoadData(void);
 
-    void slotDeleteSite(void);
-    void doDeleteSite(bool remove);
-    void slotEditSite(void);
-    void slotNewSite(void);
-    void listChanged(void);
+    void SlotDeleteSite(void);
+    void DoDeleteSite(bool remove);
+    void SlotEditSite(void);
+    void SlotNewSite(void);
+    void ListChanged(void);
 };
 
 #endif /* RSSEDITOR_H */
