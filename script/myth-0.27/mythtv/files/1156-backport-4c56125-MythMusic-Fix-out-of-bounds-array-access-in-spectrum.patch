From 4c56125292378ed78ea6210bbc88a3a528af7704 Mon Sep 17 00:00:00 2001
From: Lawrence Rust <lvr@softsystem.co.uk>
Date: Sun, 31 Aug 2014 11:40:17 +0100
Subject: [PATCH 6/9] MythMusic: Fix out of bounds array access in spectrum
 visualizer

NB This was the cause of the 'sticky bars' often seen with this visualiser.

Signed-off-by: Paul Harrison <pharrison@mythtv.org>
---
 mythplugins/mythmusic/mythmusic/visualize.cpp |    7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

diff --git a/mythplugins/mythmusic/mythmusic/visualize.cpp b/mythplugins/mythmusic/mythmusic/visualize.cpp
index 79be5a1..6ad3097 100644
--- a/mythplugins/mythmusic/mythmusic/visualize.cpp
+++ b/mythplugins/mythmusic/mythmusic/visualize.cpp
@@ -697,10 +697,13 @@ bool Spectrum::process(VisualNode *node)
 
     for (i = 0; (int)i < rects.size(); i++, w += analyzerBarWidth)
     {
-        tmp = sq(real(lout[index])) + sq(real(lout[FFTW_N - index]));
+        // The 1D output is Hermitian symmetric (Yk = Yn-k) so Yn = Y0 etc.
+        // The dft_r2c_1d plan doesn't output these redundant values
+        // and furthermore they're not allocated in the ctor
+        tmp = 2 * sq(real(lout[index])); // + sq(real(lout[FFTW_N - index]));
         magL = (tmp > 1.) ? (log(tmp) - 22.0) * scaleFactor : 0.;
 
-        tmp = sq(real(rout[index])) + sq(real(rout[FFTW_N - index]));
+        tmp = 2 * sq(real(rout[index])); // + sq(real(rout[FFTW_N - index]));
         magR = (tmp > 1.) ? (log(tmp) - 22.0) * scaleFactor : 0.;
 
         if (magL > size.height() / 2)
-- 
1.7.10.2

