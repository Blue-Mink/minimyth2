From bd0b51f1676f8e8b62e4b552bd48ccecb5378d9f Mon Sep 17 00:00:00 2001
From: Paul Harrison <pharrison@mythtv.org>
Date: Sun, 12 Oct 2014 17:09:31 +0100
Subject: [PATCH] ImageLoadThread: don't treat all gifs as being animated

If a gif only has one image then fall back to loading it as a normal image.
This fixes the bad flicker of some gif images especially remote ones in button
lists.

Fixes #11883.
---
 mythtv/libs/libmythui/mythuiimage.cpp |   37 ++++++++++++++++++---------------
 1 file changed, 20 insertions(+), 17 deletions(-)

diff --git a/mythtv/libs/libmythui/mythuiimage.cpp b/mythtv/libs/libmythui/mythuiimage.cpp
index a54e873..0ec2bec 100644
--- a/mythtv/libs/libmythui/mythuiimage.cpp
+++ b/mythtv/libs/libmythui/mythuiimage.cpp
@@ -506,24 +506,27 @@ class ImageLoadThread : public QRunnable
                                                      m_cacheMode, m_parent,
                                                      aborted);
 
-             ImageLoadEvent *le = new ImageLoadEvent(m_parent, frames,
-                                                     m_basefile,
-                                                     m_imageProperties.filename,
-                                                     aborted);
-             QCoreApplication::postEvent(const_cast<MythUIImage*>(m_parent), le);
-        }
-        else
-        {
-            MythImage *image = ImageLoader::LoadImage(m_painter,
-                                                      m_imageProperties,
-                                                      m_cacheMode, m_parent,
-                                                      aborted);
-
-            ImageLoadEvent *le = new ImageLoadEvent(m_parent, image, m_basefile,
-                                                    m_imageProperties.filename,
-                                                    m_number, aborted);
-            QCoreApplication::postEvent(const_cast<MythUIImage*>(m_parent), le);
+             if (frames && frames->count() > 1)
+             {
+                ImageLoadEvent *le = new ImageLoadEvent(m_parent, frames,
+                                                        m_basefile,
+                                                        m_imageProperties.filename,
+                                                        aborted);
+                QCoreApplication::postEvent(const_cast<MythUIImage*>(m_parent), le);
+
+                return;
+             }
         }
+
+        MythImage *image = ImageLoader::LoadImage(m_painter,
+                                                    m_imageProperties,
+                                                    m_cacheMode, m_parent,
+                                                    aborted);
+
+        ImageLoadEvent *le = new ImageLoadEvent(m_parent, image, m_basefile,
+                                                m_imageProperties.filename,
+                                                m_number, aborted);
+        QCoreApplication::postEvent(const_cast<MythUIImage*>(m_parent), le);
     }
 
 private:
-- 
1.7.10.2

