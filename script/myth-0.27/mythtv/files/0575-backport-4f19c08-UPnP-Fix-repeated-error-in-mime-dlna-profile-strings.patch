From 4f19c08e97250a07f5c2e7cc2c7b4b572f8e8ffc Mon Sep 17 00:00:00 2001
From: Stuart Morgan <smorgan@mythtv.org>
Date: Tue, 22 Jul 2014 16:07:48 +0100
Subject: [PATCH 5/5] UPnP: Fix repeated error in mime/dlna profile strings,
 JPG should be JPEG. Refs #12202

---
 mythtv/libs/libmythupnp/upnpdevice.cpp       |    4 ++--
 mythtv/programs/mythbackend/upnpcdsmusic.cpp |    8 ++++----
 mythtv/programs/mythbackend/upnpcdstv.cpp    |   10 +++++-----
 mythtv/programs/mythbackend/upnpcdsvideo.cpp |    8 ++++----
 4 files changed, 15 insertions(+), 15 deletions(-)

diff --git a/mythtv/libs/libmythupnp/upnpdevice.cpp b/mythtv/libs/libmythupnp/upnpdevice.cpp
index 9595b21..4536aa3 100644
--- a/mythtv/libs/libmythupnp/upnpdevice.cpp
+++ b/mythtv/libs/libmythupnp/upnpdevice.cpp
@@ -738,7 +738,7 @@ UPnpDevice::UPnpDevice() :
     jpgIconLrg->m_nDepth = 24;
     jpgIconLrg->m_nHeight = 120;
     jpgIconLrg->m_nWidth = 120;
-    jpgIconLrg->m_sMimeType = "image/jpg";
+    jpgIconLrg->m_sMimeType = "image/jpeg";
     jpgIconLrg->m_sURL = "/images/icons/upnp_large_icon.jpg";
     m_listIcons.append(jpgIconLrg);
 
@@ -756,7 +756,7 @@ UPnpDevice::UPnpDevice() :
     jpgIconSm->m_nDepth = 24;
     jpgIconSm->m_nHeight = 48;
     jpgIconSm->m_nWidth = 48;
-    jpgIconSm->m_sMimeType = "image/jpg";
+    jpgIconSm->m_sMimeType = "image/jpeg";
     jpgIconSm->m_sURL = "/images/icons/upnp_small_icon.jpg";
     m_listIcons.append(jpgIconSm);
 }
diff --git a/mythtv/programs/mythbackend/upnpcdsmusic.cpp b/mythtv/programs/mythbackend/upnpcdsmusic.cpp
index 85ceb44..ff0b36f 100644
--- a/mythtv/programs/mythbackend/upnpcdsmusic.cpp
+++ b/mythtv/programs/mythbackend/upnpcdsmusic.cpp
@@ -479,7 +479,7 @@ void UPnpCDSMusic::PopulateArtworkURIS(CDSObject* pItem, int nAlbumID)
             mediumURI.addQueryItem("Width", "1024");
             mediumURI.addQueryItem("Height", "768");
             pProp->SetValue(mediumURI.toEncoded());
-            pProp->AddAttribute("dlna:profileID", "JPG_MED");
+            pProp->AddAttribute("dlna:profileID", "JPEG_MED");
             pProp->AddAttribute("xmlns:dlna", "urn:schemas-dlna-org:metadata-1-0");
         }
 
@@ -493,7 +493,7 @@ void UPnpCDSMusic::PopulateArtworkURIS(CDSObject* pItem, int nAlbumID)
             thumbURI.addQueryItem("Width", "160");
             thumbURI.addQueryItem("Height", "160");
             pProp->SetValue(thumbURI.toEncoded());
-            pProp->AddAttribute("dlna:profileID", "JPG_TN");
+            pProp->AddAttribute("dlna:profileID", "JPEG_TN");
             pProp->AddAttribute("xmlns:dlna", "urn:schemas-dlna-org:metadata-1-0");
         }
 
@@ -506,7 +506,7 @@ void UPnpCDSMusic::PopulateArtworkURIS(CDSObject* pItem, int nAlbumID)
             smallURI.addQueryItem("Width", "640");
             smallURI.addQueryItem("Height", "480");
             pProp->SetValue(smallURI.toEncoded());
-            pProp->AddAttribute("dlna:profileID", "JPG_SM");
+            pProp->AddAttribute("dlna:profileID", "JPEG_SM");
             pProp->AddAttribute("xmlns:dlna", "urn:schemas-dlna-org:metadata-1-0");
         }
 
@@ -517,7 +517,7 @@ void UPnpCDSMusic::PopulateArtworkURIS(CDSObject* pItem, int nAlbumID)
             // Must be no more than 4096x4096 - for our purposes, just return
             // a fullsize image
             pProp->SetValue(artURI.toEncoded());
-            pProp->AddAttribute("dlna:profileID", "JPG_LRG");
+            pProp->AddAttribute("dlna:profileID", "JPEG_LRG");
             pProp->AddAttribute("xmlns:dlna", "urn:schemas-dlna-org:metadata-1-0");
         }
     }
diff --git a/mythtv/programs/mythbackend/upnpcdstv.cpp b/mythtv/programs/mythbackend/upnpcdstv.cpp
index b41ce28..e9fa047 100644
--- a/mythtv/programs/mythbackend/upnpcdstv.cpp
+++ b/mythtv/programs/mythbackend/upnpcdstv.cpp
@@ -544,7 +544,7 @@ void UPnpCDSTv::AddItem( const UPnpCDSRequest    *pRequest,
     previewURI.addQueryItem("StartTime", dtStartTime.toString(Qt::ISODate));
     previewURI.addQueryItem("Width", "160");
     previewURI.addQueryItem("Format", "JPG");
-    sProtocol = QString( "http-get:*:image/png:DLNA.ORG_PN=JPG_TN");
+    sProtocol = QString( "http-get:*:image/jpeg:DLNA.ORG_PN=JPEG_TN");
     pItem->AddResource( sProtocol, previewURI.toEncoded());
 
     // ----------------------------------------------------------------------
@@ -579,7 +579,7 @@ void UPnpCDSTv::AddItem( const UPnpCDSRequest    *pRequest,
                 mediumURI.addQueryItem("Width", "1024");
                 mediumURI.addQueryItem("Height", "768");
                 pProp->SetValue(mediumURI.toEncoded());
-                pProp->AddAttribute("dlna:profileID", "JPG_MED");
+                pProp->AddAttribute("dlna:profileID", "JPEG_MED");
                 pProp->AddAttribute("xmlns:dlna", "urn:schemas-dlna-org:metadata-1-0");
             }
 
@@ -593,7 +593,7 @@ void UPnpCDSTv::AddItem( const UPnpCDSRequest    *pRequest,
                 thumbURI.addQueryItem("Width", "160");
                 thumbURI.addQueryItem("Height", "160");
                 pProp->SetValue(thumbURI.toEncoded());
-                pProp->AddAttribute("dlna:profileID", "JPG_TN");
+                pProp->AddAttribute("dlna:profileID", "JPEG_TN");
                 pProp->AddAttribute("xmlns:dlna", "urn:schemas-dlna-org:metadata-1-0");
             }
 
@@ -606,7 +606,7 @@ void UPnpCDSTv::AddItem( const UPnpCDSRequest    *pRequest,
                 smallURI.addQueryItem("Width", "640");
                 smallURI.addQueryItem("Height", "480");
                 pProp->SetValue(smallURI.toEncoded());
-                pProp->AddAttribute("dlna:profileID", "JPG_SM");
+                pProp->AddAttribute("dlna:profileID", "JPEG_SM");
                 pProp->AddAttribute("xmlns:dlna", "urn:schemas-dlna-org:metadata-1-0");
             }
 
@@ -617,7 +617,7 @@ void UPnpCDSTv::AddItem( const UPnpCDSRequest    *pRequest,
                 // Must be no more than 4096x4096 - for our purposes, just return
                 // a fullsize image
                 pProp->SetValue(artURI.toEncoded());
-                pProp->AddAttribute("dlna:profileID", "JPG_LRG");
+                pProp->AddAttribute("dlna:profileID", "JPEG_LRG");
                 pProp->AddAttribute("xmlns:dlna", "urn:schemas-dlna-org:metadata-1-0");
             }
         }
diff --git a/mythtv/programs/mythbackend/upnpcdsvideo.cpp b/mythtv/programs/mythbackend/upnpcdsvideo.cpp
index 6fe7466..6e2574d 100644
--- a/mythtv/programs/mythbackend/upnpcdsvideo.cpp
+++ b/mythtv/programs/mythbackend/upnpcdsvideo.cpp
@@ -532,7 +532,7 @@ void UPnpCDSVideo::AddItem( const UPnpCDSRequest    *pRequest,
             mediumURI.addQueryItem("Width", "1024");
             mediumURI.addQueryItem("Height", "768");
             pProp->SetValue(mediumURI.toEncoded());
-            pProp->AddAttribute("dlna:profileID", "JPG_MED");
+            pProp->AddAttribute("dlna:profileID", "JPEG_MED");
             pProp->AddAttribute("xmlns:dlna", "urn:schemas-dlna-org:metadata-1-0");
         }
 
@@ -546,7 +546,7 @@ void UPnpCDSVideo::AddItem( const UPnpCDSRequest    *pRequest,
             thumbURI.addQueryItem("Width", "160");
             thumbURI.addQueryItem("Height", "160");
             pProp->SetValue(thumbURI.toEncoded());
-            pProp->AddAttribute("dlna:profileID", "JPG_TN");
+            pProp->AddAttribute("dlna:profileID", "JPEG_TN");
             pProp->AddAttribute("xmlns:dlna", "urn:schemas-dlna-org:metadata-1-0");
         }
 
@@ -559,7 +559,7 @@ void UPnpCDSVideo::AddItem( const UPnpCDSRequest    *pRequest,
             smallURI.addQueryItem("Width", "640");
             smallURI.addQueryItem("Height", "480");
             pProp->SetValue(smallURI.toEncoded());
-            pProp->AddAttribute("dlna:profileID", "JPG_SM");
+            pProp->AddAttribute("dlna:profileID", "JPEG_SM");
             pProp->AddAttribute("xmlns:dlna", "urn:schemas-dlna-org:metadata-1-0");
         }
 
@@ -570,7 +570,7 @@ void UPnpCDSVideo::AddItem( const UPnpCDSRequest    *pRequest,
             // Must be no more than 4096x4096 - for our purposes, just return
             // a fullsize image
             pProp->SetValue(artURI.toEncoded());
-            pProp->AddAttribute("dlna:profileID", "JPG_LRG");
+            pProp->AddAttribute("dlna:profileID", "JPEG_LRG");
             pProp->AddAttribute("xmlns:dlna", "urn:schemas-dlna-org:metadata-1-0");
         }
     }
-- 
1.7.10.2

