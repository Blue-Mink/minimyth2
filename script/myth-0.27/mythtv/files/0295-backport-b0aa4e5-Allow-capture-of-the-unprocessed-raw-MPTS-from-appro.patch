diff -Naur mythtv-0.27-20140504-ge2acf0d-old/mythtv/libs/libmythtv/recorders/asirecorder.cpp mythtv-0.27-20140504-ge2acf0d-new/mythtv/libs/libmythtv/recorders/asirecorder.cpp
--- mythtv-0.27-20140504-ge2acf0d-old/mythtv/libs/libmythtv/recorders/asirecorder.cpp	2014-05-05 11:58:11.045516448 +0200
+++ mythtv-0.27-20140504-ge2acf0d-new/mythtv/libs/libmythtv/recorders/asirecorder.cpp	2014-05-05 11:58:26.868759297 +0200
@@ -33,8 +33,7 @@
             .arg(m_channel->GetDevice())
 
 ASIRecorder::ASIRecorder(TVRec *rec, ASIChannel *channel) :
-    DTVRecorder(rec), m_channel(channel), m_stream_handler(NULL),
-    m_record_mpts(false)
+    DTVRecorder(rec), m_channel(channel), m_stream_handler(NULL)
 {
     SetStreamData(new MPEGStreamData(-1, rec ? rec->GetCaptureCardNum() : -1,
                                      false));
@@ -51,18 +50,6 @@
     // we do not have a "recordingtype" in our profile.
     DTVRecorder::SetOption("videodevice", videodev);
     DTVRecorder::SetOption("tvformat", gCoreContext->GetSetting("TVFormat"));
-    SetIntOption(profile, "recordmpts");
-}
-
-/** \fn ASIRecorder::SetOption(const QString&,int)
- *  \brief handles the "recordmpts" option.
- */
-void ASIRecorder::SetOption(const QString &name, int value)
-{
-    if (name == "recordmpts")
-        m_record_mpts = (value == 1);
-    else
-        DTVRecorder::SetOption(name, value);
 }
 
 void ASIRecorder::StartNewFile(void)
@@ -116,7 +103,7 @@
     _stream_data->AddWritingListener(this);
     m_stream_handler->AddListener(
         _stream_data, false, true,
-        (m_record_mpts) ? ringBuffer->GetFilename() : QString());
+        (_record_mpts) ? ringBuffer->GetFilename() : QString());
 
     while (IsRecordingRequested() && !IsErrored())
     {
diff -Naur mythtv-0.27-20140504-ge2acf0d-old/mythtv/libs/libmythtv/recorders/asirecorder.h mythtv-0.27-20140504-ge2acf0d-new/mythtv/libs/libmythtv/recorders/asirecorder.h
--- mythtv-0.27-20140504-ge2acf0d-old/mythtv/libs/libmythtv/recorders/asirecorder.h	2014-05-05 11:58:11.048849762 +0200
+++ mythtv-0.27-20140504-ge2acf0d-new/mythtv/libs/libmythtv/recorders/asirecorder.h	2014-05-05 11:58:26.868759297 +0200
@@ -61,8 +61,6 @@
                                const QString &videodev,
                                const QString &audiodev,
                                const QString &vbidev);
-    using DTVRecorder::SetOption;
-    void SetOption(const QString &name, int value);
 
     void run(void);
 
@@ -74,7 +72,6 @@
   private:
     ASIChannel       *m_channel;
     ASIStreamHandler *m_stream_handler;
-    bool              m_record_mpts;
 };
 
 #endif // _ASI_RECORDER_H_
diff -Naur mythtv-0.27-20140504-ge2acf0d-old/mythtv/libs/libmythtv/recorders/asistreamhandler.cpp mythtv-0.27-20140504-ge2acf0d-new/mythtv/libs/libmythtv/recorders/asistreamhandler.cpp
--- mythtv-0.27-20140504-ge2acf0d-old/mythtv/libs/libmythtv/recorders/asistreamhandler.cpp	2014-05-05 11:58:11.048849762 +0200
+++ mythtv-0.27-20140504-ge2acf0d-new/mythtv/libs/libmythtv/recorders/asistreamhandler.cpp	2014-05-05 11:58:26.868759297 +0200
@@ -15,7 +15,6 @@
 // MythTV headers
 #include "asistreamhandler.h"
 #include "asichannel.h"
-#include "threadedfilewriter.h"
 #include "dtvsignalmonitor.h"
 #include "streamlisteners.h"
 #include "mpegstreamdata.h"
@@ -104,7 +103,7 @@
     StreamHandler(device),
     _device_num(-1), _buf_size(-1), _fd(-1),
     _packet_size(TSPacket::kSize), _clock_source(kASIInternalClock),
-    _rx_mode(kASIRXSyncOnActualConvertTo188), _drb(NULL), _mpts(NULL)
+    _rx_mode(kASIRXSyncOnActualConvertTo188), _drb(NULL)
 {
     setObjectName("ASISH");
 }
@@ -231,8 +230,7 @@
         for (; sit != _stream_data_list.end(); ++sit)
             remainder = sit.key()->ProcessData(buffer, len);
 
-        if (_mpts != NULL)
-            _mpts->Write(buffer, len - remainder);
+        WriteMPTS(buffer, len - remainder);
 
         _listener_lock.unlock();
 
@@ -345,67 +343,6 @@
     }
 }
 
-typedef ThreadedFileWriter* ThreadedFileWriterP;
-static bool named_output_file_common(
-    const QString &_device, ThreadedFileWriterP &tfw, QMap<QString,int> &files)
-{
-    if (tfw)
-    {
-        delete tfw;
-        tfw = NULL;
-    }
-
-    QMap<QString,int>::iterator it = files.begin();
-    if (it == files.end())
-        return true;
-
-    for (it = files.begin(); it != files.end(); ++it)
-        (*it)++;
-
-    QString fn = QString("%1.%2.raw")
-        .arg(files.begin().key()).arg(*files.begin());
-
-    tfw = new ThreadedFileWriter(
-        fn, O_WRONLY|O_TRUNC|O_CREAT|O_LARGEFILE, 0644);
-    if (!tfw->Open())
-    {
-        delete tfw;
-        tfw = NULL;
-        return false;
-    }
-
-    bool ok = true;
-    const QByteArray ba = fn.toLocal8Bit();
-    for (; ok && it != files.end(); ++it)
-    {
-        int ret = link(ba.constData(), it.key().toLocal8Bit().constData());
-        if (ret < 0)
-        {
-            LOG(VB_GENERAL, LOG_ERR, LOC +
-                QString("Failed to link '%1' to '%2'").arg(it.key()).arg(fn) +
-                ENO);
-        }
-        ok &= ret >= 0;
-    }
-
-    return ok;
-}
-void ASIStreamHandler::AddNamedOutputFile(const QString &file)
-{
-    _mpts_files[file] = -1;
-    named_output_file_common(_device, _mpts, _mpts_files);
-}
-
-void ASIStreamHandler::RemoveNamedOutputFile(const QString &file)
-{
-    QMap<QString,int>::iterator it = _mpts_files.find(file);
-    if (it != _mpts_files.end())
-    {
-        _mpts_files.erase(it);
-        named_output_file_common(_device, _mpts, _mpts_files);
-    }
-}
-
 void ASIStreamHandler::PriorityEvent(int fd)
 {
     // TODO report on buffer overruns, etc.
diff -Naur mythtv-0.27-20140504-ge2acf0d-old/mythtv/libs/libmythtv/recorders/asistreamhandler.h mythtv-0.27-20140504-ge2acf0d-new/mythtv/libs/libmythtv/recorders/asistreamhandler.h
--- mythtv-0.27-20140504-ge2acf0d-old/mythtv/libs/libmythtv/recorders/asistreamhandler.h	2014-05-05 11:58:11.048849762 +0200
+++ mythtv-0.27-20140504-ge2acf0d-new/mythtv/libs/libmythtv/recorders/asistreamhandler.h	2014-05-05 11:58:26.868759297 +0200
@@ -17,7 +17,6 @@
 class DTVSignalMonitor;
 class ASIChannel;
 class DeviceReadBuffer;
-class ThreadedFileWriter;
 
 typedef enum ASIClockSource
 {
@@ -69,9 +68,6 @@
 
     virtual void PriorityEvent(int fd); // DeviceReaderCB
 
-    virtual void AddNamedOutputFile(const QString &file); // StreamHandler
-    virtual void RemoveNamedOutputFile(const QString &file); // StreamHandler
-
     virtual void SetRunningDesired(bool desired); // StreamHandler
 
   private:
@@ -84,9 +80,6 @@
     ASIRXMode                               _rx_mode;
     DeviceReadBuffer                       *_drb;
 
-    ThreadedFileWriter                     *_mpts;
-    QMap<QString,int>                       _mpts_files;
-
     // for implementing Get & Return
     static QMutex                           _handlers_lock;
     static QMap<QString, ASIStreamHandler*> _handlers;
diff -Naur mythtv-0.27-20140504-ge2acf0d-old/mythtv/libs/libmythtv/recorders/dtvrecorder.cpp mythtv-0.27-20140504-ge2acf0d-new/mythtv/libs/libmythtv/recorders/dtvrecorder.cpp
--- mythtv-0.27-20140504-ge2acf0d-old/mythtv/libs/libmythtv/recorders/dtvrecorder.cpp	2014-05-05 11:58:11.045516448 +0200
+++ mythtv-0.27-20140504-ge2acf0d-new/mythtv/libs/libmythtv/recorders/dtvrecorder.cpp	2014-05-05 11:58:26.868759297 +0200
@@ -78,6 +78,8 @@
     _input_pat(NULL),
     _input_pmt(NULL),
     _has_no_av(false),
+    // record 'raw' mpts?
+    _record_mpts(false),
     // statistics
     _use_pts(false),
     _packet_count(0),
@@ -98,7 +100,7 @@
     memset(_continuity_counter, 0xff, sizeof(_continuity_counter));
 }
 
-DTVRecorder::~DTVRecorder()
+DTVRecorder::~DTVRecorder(void)
 {
     StopRecording();
 
@@ -135,6 +137,8 @@
 {
     if (name == "wait_for_seqstart")
         _wait_for_keyframe_option = (value == 1);
+    else if (name == "recordmpts")
+        _record_mpts = (value == 1);
     else
         RecorderBase::SetOption(name, value);
 }
@@ -146,6 +150,7 @@
     SetOption("videodevice", videodev);
     DTVRecorder::SetOption("tvformat", gCoreContext->GetSetting("TVFormat"));
     SetStrOption(profile, "recordingtype");
+    SetIntOption(profile, "recordmpts");
 }
 
 /** \fn DTVRecorder::FinishRecording(void)
diff -Naur mythtv-0.27-20140504-ge2acf0d-old/mythtv/libs/libmythtv/recorders/dtvrecorder.h mythtv-0.27-20140504-ge2acf0d-new/mythtv/libs/libmythtv/recorders/dtvrecorder.h
--- mythtv-0.27-20140504-ge2acf0d-old/mythtv/libs/libmythtv/recorders/dtvrecorder.h	2014-05-05 11:58:11.045516448 +0200
+++ mythtv-0.27-20140504-ge2acf0d-new/mythtv/libs/libmythtv/recorders/dtvrecorder.h	2014-05-05 11:58:26.868759297 +0200
@@ -168,6 +168,7 @@
     bool                     _has_no_av;
 
     // TS recorder stuff
+    bool          _record_mpts;
     unsigned char _stream_id[0x1fff + 1];
     unsigned char _pid_status[0x1fff + 1];
     unsigned char _continuity_counter[0x1fff + 1];
diff -Naur mythtv-0.27-20140504-ge2acf0d-old/mythtv/libs/libmythtv/recorders/dvbrecorder.cpp mythtv-0.27-20140504-ge2acf0d-new/mythtv/libs/libmythtv/recorders/dvbrecorder.cpp
--- mythtv-0.27-20140504-ge2acf0d-old/mythtv/libs/libmythtv/recorders/dvbrecorder.cpp	2014-05-05 11:58:11.048849762 +0200
+++ mythtv-0.27-20140504-ge2acf0d-new/mythtv/libs/libmythtv/recorders/dvbrecorder.cpp	2014-05-05 11:58:26.868759297 +0200
@@ -26,6 +26,7 @@
 #include "mpegstreamdata.h"
 #include "dvbrecorder.h"
 #include "dvbchannel.h"
+#include "ringbuffer.h"
 #include "tv_rec.h"
 #include "mythlogging.h"
 
@@ -103,7 +104,8 @@
 
     _stream_data->AddAVListener(this);
     _stream_data->AddWritingListener(this);
-    _stream_handler->AddListener(_stream_data, false, true);
+    _stream_handler->AddListener(_stream_data, false, true,
+                         (_record_mpts) ? ringBuffer->GetFilename() : QString());
 
     while (IsRecordingRequested() && !IsErrored())
     {
diff -Naur mythtv-0.27-20140504-ge2acf0d-old/mythtv/libs/libmythtv/recorders/dvbstreamhandler.cpp mythtv-0.27-20140504-ge2acf0d-new/mythtv/libs/libmythtv/recorders/dvbstreamhandler.cpp
--- mythtv-0.27-20140504-ge2acf0d-old/mythtv/libs/libmythtv/recorders/dvbstreamhandler.cpp	2014-05-05 11:58:11.048849762 +0200
+++ mythtv-0.27-20140504-ge2acf0d-new/mythtv/libs/libmythtv/recorders/dvbstreamhandler.cpp	2014-05-05 11:58:26.868759297 +0200
@@ -265,6 +265,8 @@
         for (; sit != _stream_data_list.end(); ++sit)
             remainder = sit.key()->ProcessData(buffer, len);
 
+        WriteMPTS(buffer, len - remainder);
+
         _listener_lock.unlock();
 
         if (remainder > 0 && (len > remainder)) // leftover bytes
@@ -794,4 +796,3 @@
     return fd_tmp;
 }
 #endif
-
diff -Naur mythtv-0.27-20140504-ge2acf0d-old/mythtv/libs/libmythtv/recorders/hdhrrecorder.cpp mythtv-0.27-20140504-ge2acf0d-new/mythtv/libs/libmythtv/recorders/hdhrrecorder.cpp
--- mythtv-0.27-20140504-ge2acf0d-old/mythtv/libs/libmythtv/recorders/hdhrrecorder.cpp	2014-05-05 11:58:11.048849762 +0200
+++ mythtv-0.27-20140504-ge2acf0d-new/mythtv/libs/libmythtv/recorders/hdhrrecorder.cpp	2014-05-05 11:58:26.872092612 +0200
@@ -10,6 +10,7 @@
 #include "atscstreamdata.h"
 #include "hdhrrecorder.h"
 #include "hdhrchannel.h"
+#include "ringbuffer.h"
 #include "tv_rec.h"
 #include "mythlogging.h"
 
@@ -78,7 +79,8 @@
 
     _stream_data->AddAVListener(this);
     _stream_data->AddWritingListener(this);
-    _stream_handler->AddListener(_stream_data);
+    _stream_handler->AddListener(_stream_data, false, false,
+                         (_record_mpts) ? ringBuffer->GetFilename() : QString());
 
     while (IsRecordingRequested() && !IsErrored())
     {
diff -Naur mythtv-0.27-20140504-ge2acf0d-old/mythtv/libs/libmythtv/recorders/hdhrstreamhandler.cpp mythtv-0.27-20140504-ge2acf0d-new/mythtv/libs/libmythtv/recorders/hdhrstreamhandler.cpp
--- mythtv-0.27-20140504-ge2acf0d-old/mythtv/libs/libmythtv/recorders/hdhrstreamhandler.cpp	2014-05-05 11:58:11.048849762 +0200
+++ mythtv-0.27-20140504-ge2acf0d-new/mythtv/libs/libmythtv/recorders/hdhrstreamhandler.cpp	2014-05-05 11:58:26.872092612 +0200
@@ -165,6 +165,8 @@
         for (; sit != _stream_data_list.end(); ++sit)
             remainder = sit.key()->ProcessData(data_buffer, data_length);
 
+        WriteMPTS(data_buffer, data_length - remainder);
+
         _listener_lock.unlock();
         if (remainder != 0)
         {
diff -Naur mythtv-0.27-20140504-ge2acf0d-old/mythtv/libs/libmythtv/recorders/streamhandler.cpp mythtv-0.27-20140504-ge2acf0d-new/mythtv/libs/libmythtv/recorders/streamhandler.cpp
--- mythtv-0.27-20140504-ge2acf0d-old/mythtv/libs/libmythtv/recorders/streamhandler.cpp	2014-05-05 11:58:11.048849762 +0200
+++ mythtv-0.27-20140504-ge2acf0d-new/mythtv/libs/libmythtv/recorders/streamhandler.cpp	2014-05-05 11:58:26.872092612 +0200
@@ -2,6 +2,7 @@
 
 // MythTV headers
 #include "streamhandler.h"
+#include "threadedfilewriter.h"
 
 #define LOC      QString("SH(%1): ").arg(_device)
 
@@ -19,6 +20,7 @@
 
     _pid_lock(QMutex::Recursive),
     _open_pid_filters(0),
+    _mpts(NULL),
 
     _listener_lock(QMutex::Recursive)
 {
@@ -376,3 +378,72 @@
 
     return tmp;
 }
+
+void StreamHandler::WriteMPTS(unsigned char * buffer, uint len)
+{
+    if (_mpts == NULL)
+        return;
+    _mpts->Write(buffer, len);
+}
+
+typedef ThreadedFileWriter* ThreadedFileWriterP;
+static bool named_output_file_common(
+    const QString &_device, ThreadedFileWriterP &tfw, QMap<QString,int> &files)
+{
+    if (tfw)
+    {
+        delete tfw;
+        tfw = NULL;
+    }
+
+    QMap<QString,int>::iterator it = files.begin();
+    if (it == files.end())
+        return true;
+
+    for (it = files.begin(); it != files.end(); ++it)
+        (*it)++;
+
+    QString fn = QString("%1.%2.raw")
+        .arg(files.begin().key()).arg(*files.begin());
+
+    tfw = new ThreadedFileWriter(
+        fn, O_WRONLY|O_TRUNC|O_CREAT|O_LARGEFILE, 0644);
+    if (!tfw->Open())
+    {
+        delete tfw;
+        tfw = NULL;
+        return false;
+    }
+
+    bool ok = true;
+    const QByteArray ba = fn.toLocal8Bit();
+    for (; ok && it != files.end(); ++it)
+    {
+        int ret = link(ba.constData(), it.key().toLocal8Bit().constData());
+        if (ret < 0)
+        {
+            LOG(VB_GENERAL, LOG_ERR, LOC +
+                QString("Failed to link '%1' to '%2'").arg(it.key()).arg(fn) +
+                ENO);
+        }
+        ok &= ret >= 0;
+    }
+
+    return ok;
+}
+
+void StreamHandler::AddNamedOutputFile(const QString &file)
+{
+    _mpts_files[file] = -1;
+    named_output_file_common(_device, _mpts, _mpts_files);
+}
+
+void StreamHandler::RemoveNamedOutputFile(const QString &file)
+{
+    QMap<QString,int>::iterator it = _mpts_files.find(file);
+    if (it != _mpts_files.end())
+    {
+        _mpts_files.erase(it);
+        named_output_file_common(_device, _mpts, _mpts_files);
+    }
+}
diff -Naur mythtv-0.27-20140504-ge2acf0d-old/mythtv/libs/libmythtv/recorders/streamhandler.h mythtv-0.27-20140504-ge2acf0d-new/mythtv/libs/libmythtv/recorders/streamhandler.h
--- mythtv-0.27-20140504-ge2acf0d-old/mythtv/libs/libmythtv/recorders/streamhandler.h	2014-05-05 11:58:11.048849762 +0200
+++ mythtv-0.27-20140504-ge2acf0d-new/mythtv/libs/libmythtv/recorders/streamhandler.h	2014-05-05 11:58:26.872092612 +0200
@@ -16,6 +16,8 @@
 #include "mthread.h"
 #include "mythdate.h"
 
+class ThreadedFileWriter;
+
 //#define DEBUG_PID_FILTERS
 
 class PIDInfo
@@ -91,10 +93,12 @@
         { return new PIDInfo(pid, stream_type, pes_type); }
 
   protected:
+    /// Write out a copy of the raw MPTS
+    void WriteMPTS(unsigned char * buffer, uint len);
     /// Called with _listener_lock locked just after adding new output file.
-    virtual void AddNamedOutputFile(const QString &filename) {}
+    virtual void AddNamedOutputFile(const QString &filename);
     /// Called with _listener_lock locked just before removing old output file.
-    virtual void RemoveNamedOutputFile(const QString &filename) {}
+    virtual void RemoveNamedOutputFile(const QString &filename);
     /// At minimum this sets _running_desired, this may also send
     /// signals to anything that might be blocking the run() loop.
     /// \note: The _start_stop_lock must be held when this is called.
@@ -121,6 +125,9 @@
     uint              _open_pid_filters;
     MythTimer         _cycle_timer;
 
+    ThreadedFileWriter                     *_mpts;
+    QMap<QString,int>                       _mpts_files;
+
     typedef QMap<MPEGStreamData*,QString> StreamDataList;
     mutable QMutex    _listener_lock;
     StreamDataList    _stream_data_list;
diff -Naur mythtv-0.27-20140504-ge2acf0d-old/mythtv/libs/libmythtv/recordingprofile.cpp mythtv-0.27-20140504-ge2acf0d-new/mythtv/libs/libmythtv/recordingprofile.cpp
--- mythtv-0.27-20140504-ge2acf0d-old/mythtv/libs/libmythtv/recordingprofile.cpp	2014-05-05 11:58:11.055516388 +0200
+++ mythtv-0.27-20140504-ge2acf0d-new/mythtv/libs/libmythtv/recordingprofile.cpp	2014-05-05 11:58:26.872092612 +0200
@@ -1415,7 +1415,8 @@
     {
         addChild(new RecordingType(*this));
     }
-    else if (type.toUpper() == "ASI")
+
+    if (CardUtil::IsTunerSharingCapable(type))
     {
         addChild(new RecordFullTSStream(*this));
     }
