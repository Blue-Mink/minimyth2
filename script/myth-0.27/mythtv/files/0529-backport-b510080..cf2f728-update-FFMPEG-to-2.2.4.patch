diff -Naur mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/README.sync mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/README.sync
--- mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/README.sync	2014-07-14 17:45:18.000000000 +0200
+++ mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/README.sync	2014-07-14 18:29:51.981386925 +0200
@@ -17,6 +17,7 @@
 git://source.ffmpeg.org/ffmpeg.git at SHA1 3d79041f on May 4th, 2014 (jya) (release/1.2 branch, release 1.2.6))
 git://source.ffmpeg.org/ffmpeg.git at n2.2.2-30-gacafd18 on May 30th, 2014 (jya) (release/2.2 branch, release 2.2.2))
 git://source.ffmpeg.org/ffmpeg.git at n2.2.3 on May 6th, 2014 (jya) (release/2.2 branch, release 2.2.3))
+git://source.ffmpeg.org/ffmpeg.git at n2.2.3 on July 14th, 2014 (jya) (release/2.2 branch, release 2.2.4))
 
 List of files modified from original FFmpeg:
 Makefile
diff -Naur mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/RELEASE mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/RELEASE
--- mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/RELEASE	2014-07-14 17:45:18.000000000 +0200
+++ mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/RELEASE	2014-07-14 18:29:48.031398655 +0200
@@ -1 +1 @@
-2.2.3
+2.2.4
diff -Naur mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/VERSION mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/VERSION
--- mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/VERSION	2014-07-14 17:45:18.000000000 +0200
+++ mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/VERSION	2014-07-14 18:29:48.031398655 +0200
@@ -1 +1 @@
-2.2.3
+2.2.4
diff -Naur mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/doc/Doxyfile mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/doc/Doxyfile
--- mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/doc/Doxyfile	2014-07-14 17:45:18.000000000 +0200
+++ mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/doc/Doxyfile	2014-07-14 18:29:48.031398655 +0200
@@ -31,7 +31,7 @@
 # This could be handy for archiving the generated documentation or
 # if some version control system is used.
 
-PROJECT_NUMBER         = 2.2.3
+PROJECT_NUMBER         = 2.2.4
 
 # With the PROJECT_LOGO tag one can specify a logo or icon that is included
 # in the documentation. The maximum height of the logo should not exceed 55
diff -Naur mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/ffmpeg.c mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/ffmpeg.c
--- mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/ffmpeg.c	2014-07-14 17:45:16.000000000 +0200
+++ mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/ffmpeg.c	2014-07-14 18:28:21.321675557 +0200
@@ -621,7 +621,8 @@
         bsfc = bsfc->next;
     }
 
-    if (!(s->oformat->flags & AVFMT_NOTIMESTAMPS) &&
+    if (!(s->oformat->flags & AVFMT_NOTIMESTAMPS)) {
+     if(
         (avctx->codec_type == AVMEDIA_TYPE_AUDIO || avctx->codec_type == AVMEDIA_TYPE_VIDEO) &&
         pkt->dts != AV_NOPTS_VALUE &&
         ost->last_mux_dts != AV_NOPTS_VALUE) {
@@ -642,6 +643,16 @@
             pkt->pts = FFMAX(pkt->pts, max);
         pkt->dts = max;
       }
+     }
+        if (pkt->dts != AV_NOPTS_VALUE &&
+            pkt->pts != AV_NOPTS_VALUE &&
+            pkt->dts > pkt->pts) {
+            av_log(s, AV_LOG_WARNING, "Invalid DTS: %"PRId64" PTS: %"PRId64" in output stream %d:%d\n",
+                   pkt->dts, pkt->pts,
+                   ost->file_index, ost->st->index);
+            pkt->pts = AV_NOPTS_VALUE;
+            pkt->dts = AV_NOPTS_VALUE;
+        }
     }
     ost->last_mux_dts = pkt->dts;
 
@@ -1091,6 +1102,19 @@
     }
 }
 
+static void finish_output_stream(OutputStream *ost)
+{
+    OutputFile *of = output_files[ost->file_index];
+    int i;
+
+    ost->finished = ENCODER_FINISHED | MUXER_FINISHED;
+
+    if (of->shortest) {
+        for (i = 0; i < of->ctx->nb_streams; i++)
+            output_streams[of->ost_index + i]->finished = ENCODER_FINISHED | MUXER_FINISHED;
+    }
+}
+
 /**
  * Get and encode new output from any of the filtergraphs, without causing
  * activity.
@@ -3147,7 +3171,7 @@
 
                 if (ost->source_index == ifile->ist_index + i &&
                     (ost->stream_copy || ost->enc->type == AVMEDIA_TYPE_SUBTITLE))
-                    close_output_stream(ost);
+                    finish_output_stream(ost);
             }
         }
 
diff -Naur mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/libavcodec/adpcmenc.c mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/libavcodec/adpcmenc.c
--- mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/libavcodec/adpcmenc.c	2014-07-14 17:45:16.000000000 +0200
+++ mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/libavcodec/adpcmenc.c	2014-07-14 18:28:15.785030495 +0200
@@ -549,10 +549,11 @@
             put_bits(&pb, 7,  status->step_index);
             if (avctx->trellis > 0) {
                 uint8_t buf[64];
-                adpcm_compress_trellis(avctx, &samples_p[ch][1], buf, status,
+                adpcm_compress_trellis(avctx, &samples_p[ch][0], buf, status,
                                        64, 1);
                 for (i = 0; i < 64; i++)
                     put_bits(&pb, 4, buf[i ^ 1]);
+                status->prev_sample = status->predictor;
             } else {
                 for (i = 0; i < 64; i += 2) {
                     int t1, t2;
diff -Naur mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/libavcodec/aic.c mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/libavcodec/aic.c
--- mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/libavcodec/aic.c	2014-07-14 17:45:16.000000000 +0200
+++ mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/libavcodec/aic.c	2014-07-14 18:29:11.588188064 +0200
@@ -150,6 +150,7 @@
     int16_t        *data_ptr[NUM_BANDS];
 
     DECLARE_ALIGNED(16, int16_t, block)[64];
+    DECLARE_ALIGNED(16, uint8_t, quant_matrix)[64];
 } AICContext;
 
 static int aic_decode_header(AICContext *ctx, const uint8_t *src, int size)
@@ -285,7 +286,7 @@
     }
 }
 
-static void unquant_block(int16_t *block, int q)
+static void unquant_block(int16_t *block, int q, uint8_t *quant_matrix)
 {
     int i;
 
@@ -293,7 +294,7 @@
         int val  = (uint16_t)block[i];
         int sign = val & 1;
 
-        block[i] = (((val >> 1) ^ -sign) * q * aic_quant_matrix[i] >> 4)
+        block[i] = (((val >> 1) ^ -sign) * q * quant_matrix[i] >> 4)
                    + sign;
     }
 }
@@ -334,7 +335,7 @@
             else
                 recombine_block_il(ctx->block, ctx->scantable.permutated,
                                    &base_y, &ext_y, blk);
-            unquant_block(ctx->block, ctx->quant);
+            unquant_block(ctx->block, ctx->quant, ctx->quant_matrix);
             ctx->dsp.idct(ctx->block);
 
             if (!ctx->interlaced) {
@@ -352,7 +353,7 @@
         for (blk = 0; blk < 2; blk++) {
             recombine_block(ctx->block, ctx->scantable.permutated,
                             &base_c, &ext_c);
-            unquant_block(ctx->block, ctx->quant);
+            unquant_block(ctx->block, ctx->quant, ctx->quant_matrix);
             ctx->dsp.idct(ctx->block);
             ctx->dsp.put_signed_pixels_clamped(ctx->block, C[blk],
                                                ctx->frame->linesize[blk + 1]);
@@ -430,6 +431,8 @@
     for (i = 0; i < 64; i++)
         scan[i] = i;
     ff_init_scantable(ctx->dsp.idct_permutation, &ctx->scantable, scan);
+    for (i = 0; i < 64; i++)
+        ctx->quant_matrix[ctx->dsp.idct_permutation[i]] = aic_quant_matrix[i];
 
     ctx->mb_width  = FFALIGN(avctx->width,  16) >> 4;
     ctx->mb_height = FFALIGN(avctx->height, 16) >> 4;
diff -Naur mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/libavcodec/alsdec.c mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/libavcodec/alsdec.c
--- mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/libavcodec/alsdec.c	2014-07-14 17:45:16.000000000 +0200
+++ mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/libavcodec/alsdec.c	2014-07-14 18:29:22.014816301 +0200
@@ -280,7 +280,7 @@
     GetBitContext gb;
     uint64_t ht_size;
     int i, config_offset;
-    MPEG4AudioConfig m4ac;
+    MPEG4AudioConfig m4ac = {0};
     ALSSpecificConfig *sconf = &ctx->sconf;
     AVCodecContext *avctx    = ctx->avctx;
     uint32_t als_id, header_size, trailer_size;
diff -Naur mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/libavcodec/cavs.h mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/libavcodec/cavs.h
--- mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/libavcodec/cavs.h	2014-07-14 17:45:16.000000000 +0200
+++ mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/libavcodec/cavs.h	2014-07-14 18:29:28.661456222 +0200
@@ -214,6 +214,7 @@
     int luma_scan[4];
     int qp;
     int qp_fixed;
+    int pic_qp_fixed;
     int cbp;
     ScanTable scantable;
 
diff -Naur mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/libavcodec/cavsdec.c mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/libavcodec/cavsdec.c
--- mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/libavcodec/cavsdec.c	2014-07-14 17:45:16.000000000 +0200
+++ mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/libavcodec/cavsdec.c	2014-07-14 18:29:28.664789861 +0200
@@ -904,7 +904,7 @@
 
     /* mark top macroblocks as unavailable */
     h->flags &= ~(B_AVAIL | C_AVAIL);
-    if ((h->mby == 0) && (!h->qp_fixed)) {
+    if (!h->pic_qp_fixed) {
         h->qp_fixed = get_bits1(gb);
         h->qp       = get_bits(gb, 6);
     }
@@ -1027,6 +1027,7 @@
         skip_bits1(&h->gb);     //advanced_pred_mode_disable
     skip_bits1(&h->gb);        //top_field_first
     skip_bits1(&h->gb);        //repeat_first_field
+    h->pic_qp_fixed =
     h->qp_fixed = get_bits1(&h->gb);
     h->qp       = get_bits(&h->gb, 6);
     if (h->cur.f->pict_type == AV_PICTURE_TYPE_I) {
diff -Naur mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/libavcodec/h264.c mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/libavcodec/h264.c
--- mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/libavcodec/h264.c	2014-07-14 17:45:16.000000000 +0200
+++ mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/libavcodec/h264.c	2014-07-14 18:27:54.221768802 +0200
@@ -4950,6 +4950,7 @@
                 if(!idr_cleared)
                     idr(h); // FIXME ensure we don't lose some frames if there is reordering
                 idr_cleared = 1;
+                h->has_recovery_point = 1;
             case NAL_SLICE:
                 init_get_bits(&hx->gb, ptr, bit_length);
                 hx->intra_gb_ptr      =
diff -Naur mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/libavcodec/h264.h mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/libavcodec/h264.h
--- mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/libavcodec/h264.h	2014-07-14 17:45:19.000000000 +0200
+++ mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/libavcodec/h264.h	2014-07-14 18:27:54.225102082 +0200
@@ -677,6 +677,8 @@
 
     int frame_recovered;    ///< Initial frame has been completely recovered
 
+    int has_recovery_point;
+
     int luma_weight_flag[2];    ///< 7.4.3.2 luma_weight_lX_flag
     int chroma_weight_flag[2];  ///< 7.4.3.2 chroma_weight_lX_flag
 
diff -Naur mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/libavcodec/h264_refs.c mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/libavcodec/h264_refs.c
--- mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/libavcodec/h264_refs.c	2014-07-14 17:45:16.000000000 +0200
+++ mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/libavcodec/h264_refs.c	2014-07-14 18:27:54.225102082 +0200
@@ -779,7 +779,7 @@
     if (   err >= 0
         && h->long_ref_count==0
         && (h->short_ref_count<=2 || h->pps.ref_count[0] <= 1 && h->pps.ref_count[1] <= 1 && pps_count == 1)
-        && h->pps.ref_count[0]<=2 + (h->picture_structure != PICT_FRAME)
+        && h->pps.ref_count[0]<=2 + (h->picture_structure != PICT_FRAME) + (2*!h->has_recovery_point)
         && h->cur_pic_ptr->f.pict_type == AV_PICTURE_TYPE_I){
         h->cur_pic_ptr->recovered |= 1;
         if(!h->avctx->has_b_frames)
diff -Naur mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/libavcodec/h264_sei.c mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/libavcodec/h264_sei.c
--- mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/libavcodec/h264_sei.c	2014-07-14 17:45:16.000000000 +0200
+++ mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/libavcodec/h264_sei.c	2014-07-14 18:27:54.225102082 +0200
@@ -183,6 +183,8 @@
     if (h->avctx->debug & FF_DEBUG_PICT_INFO)
         av_log(h->avctx, AV_LOG_DEBUG, "sei_recovery_frame_cnt: %d\n", h->sei_recovery_frame_cnt);
 
+    h->has_recovery_point = 1;
+
     return 0;
 }
 
diff -Naur mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/libavcodec/mjpegdec.c mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/libavcodec/mjpegdec.c
--- mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/libavcodec/mjpegdec.c	2014-07-14 17:45:16.000000000 +0200
+++ mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/libavcodec/mjpegdec.c	2014-07-14 18:28:03.045070264 +0200
@@ -1718,7 +1718,7 @@
                 parse_avid(s, cbuf, len);
             } else if (!strcmp(cbuf, "CS=ITU601"))
                 s->cs_itu601 = 1;
-            else if ((!strncmp(cbuf, "Intel(R) JPEG Library, version 1", 32)) ||
+            else if ((!strncmp(cbuf, "Intel(R) JPEG Library, version 1", 32) && s->avctx->codec_tag) ||
                      (!strncmp(cbuf, "Metasoft MJPEG Codec", 20)))
                 s->flipped = 1;
 
diff -Naur mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/libavcodec/utvideodec.c mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/libavcodec/utvideodec.c
--- mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/libavcodec/utvideodec.c	2014-07-14 17:45:16.000000000 +0200
+++ mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/libavcodec/utvideodec.c	2014-07-14 18:27:48.225115209 +0200
@@ -70,7 +70,7 @@
         code += 0x80000000u >> (he[i].len - 1);
     }
 
-    return ff_init_vlc_sparse(vlc, FFMIN(he[last].len, 10), last + 1,
+    return ff_init_vlc_sparse(vlc, FFMIN(he[last].len, 11), last + 1,
                               bits,  sizeof(*bits),  sizeof(*bits),
                               codes, sizeof(*codes), sizeof(*codes),
                               syms,  sizeof(*syms),  sizeof(*syms), 0);
diff -Naur mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/libavcodec/x86/vp9intrapred.asm mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/libavcodec/x86/vp9intrapred.asm
--- mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/libavcodec/x86/vp9intrapred.asm	2014-07-14 17:45:16.000000000 +0200
+++ mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/libavcodec/x86/vp9intrapred.asm	2014-07-14 18:28:26.724996218 +0200
@@ -817,13 +817,13 @@
     psrlq                   m2, m1, 8
     LOWPASS                  2,  1, 0, 3
     pavgb                   m1, m0
-    movq      [dstq+strideq*0], m1
-    movq      [dstq+strideq*1], m2
+    movd      [dstq+strideq*0], m1
+    movd      [dstq+strideq*1], m2
     lea                   dstq, [dstq+strideq*2]
     psrlq                   m1, 8
     psrlq                   m2, 8
-    movq      [dstq+strideq*0], m1
-    movq      [dstq+strideq*1], m2
+    movd      [dstq+strideq*0], m1
+    movd      [dstq+strideq*1], m2
     RET
 
 %macro VL_XMM_FUNCS 1
diff -Naur mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/libavformat/aiffdec.c mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/libavformat/aiffdec.c
--- mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/libavformat/aiffdec.c	2014-07-14 17:45:16.000000000 +0200
+++ mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/libavformat/aiffdec.c	2014-07-14 18:27:42.445141052 +0200
@@ -344,10 +344,16 @@
         return AVERROR_EOF;
 
     /* Now for that packet */
-    if (st->codec->block_align >= 17) // GSM, QCLP, IMA4
+    switch (st->codec->codec_id) {
+    case AV_CODEC_ID_ADPCM_IMA_QT:
+    case AV_CODEC_ID_GSM:
+    case AV_CODEC_ID_QDM2:
+    case AV_CODEC_ID_QCELP:
         size = st->codec->block_align;
-    else
+        break;
+    default:
         size = (MAX_SIZE / st->codec->block_align) * st->codec->block_align;
+    }
     size = FFMIN(max_size, size);
     res = av_get_packet(s->pb, pkt, size);
     if (res < 0)
diff -Naur mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/libavformat/asfdec.c mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/libavformat/asfdec.c
--- mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/libavformat/asfdec.c	2014-07-14 17:45:16.000000000 +0200
+++ mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/libavformat/asfdec.c	2014-07-14 18:28:36.998290570 +0200
@@ -370,7 +370,8 @@
 
     if (!(asf->hdr.flags & 0x01)) { // if we aren't streaming...
         int64_t fsize = avio_size(pb);
-        if (fsize <= 0 || (int64_t)asf->hdr.file_size <= 0 || FFABS(fsize - (int64_t)asf->hdr.file_size) < 10000)
+        if (fsize <= 0 || (int64_t)asf->hdr.file_size <= 0 ||
+            FFABS(fsize - (int64_t)asf->hdr.file_size) / (float)FFMIN(fsize, asf->hdr.file_size) < 0.05)
             st->duration = asf->hdr.play_time /
                        (10000000 / 1000) - start_time;
     }
diff -Naur mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/libavformat/avidec.c mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/libavformat/avidec.c
--- mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/libavformat/avidec.c	2014-07-14 17:45:16.000000000 +0200
+++ mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/libavformat/avidec.c	2014-07-14 18:27:36.415157278 +0200
@@ -1685,8 +1685,7 @@
             continue;
 
 //        av_assert1(st2->codec->block_align);
-        av_assert0((int64_t)st2->time_base.num * ast2->rate ==
-                   (int64_t)st2->time_base.den * ast2->scale);
+        av_assert0(fabs(av_q2d(st2->time_base) - ast2->scale / (double)ast2->rate) < av_q2d(st2->time_base) * 0.00000001);
         index = av_index_search_timestamp(st2,
                                           av_rescale_q(timestamp,
                                                        st->time_base,
diff -Naur mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/libavformat/cavsvideodec.c mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/libavformat/cavsvideodec.c
--- mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/libavformat/cavsvideodec.c	2014-07-14 17:45:16.000000000 +0200
+++ mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/libavformat/cavsvideodec.c	2014-07-14 18:29:35.521439088 +0200
@@ -61,7 +61,7 @@
         }
     }
     if(seq && seq*9<=pic*10)
-        return AVPROBE_SCORE_EXTENSION;
+        return AVPROBE_SCORE_EXTENSION+1;
     return 0;
 }
 
diff -Naur mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/libavformat/flvenc.c mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/libavformat/flvenc.c
--- mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/libavformat/flvenc.c	2014-07-14 17:45:19.000000000 +0200
+++ mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/libavformat/flvenc.c	2014-07-14 18:29:16.858165209 +0200
@@ -223,6 +223,18 @@
                        avcodec_get_name(enc->codec_id), i);
                 return AVERROR(EINVAL);
             }
+            if (enc->codec_id == AV_CODEC_ID_MPEG4 ||
+                enc->codec_id == AV_CODEC_ID_H263) {
+                int error = enc->strict_std_compliance > FF_COMPLIANCE_UNOFFICIAL;
+                av_log(s, error ? AV_LOG_ERROR : AV_LOG_WARNING,
+                       "Codec %s is not supported in the official FLV specification,\n", avcodec_get_name(enc->codec_id));
+
+                if (error) {
+                    av_log(s, AV_LOG_ERROR,
+                           "use vstrict=-1 / -strict -1 to use it anyway.\n");
+                    return AVERROR(EINVAL);
+                }
+            }
             break;
         case AVMEDIA_TYPE_AUDIO:
             if (audio_enc) {
diff -Naur mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/libavformat/mp3enc.c mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/libavformat/mp3enc.c
--- mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/libavformat/mp3enc.c	2014-07-14 17:45:16.000000000 +0200
+++ mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/libavformat/mp3enc.c	2014-07-14 18:28:31.764979355 +0200
@@ -124,7 +124,7 @@
     int best_bitrate_error = INT_MAX;
     int xing_offset;
     int ver = 0;
-    int bytes_needed, lsf;
+    int bytes_needed;
     const char *vendor = (codec->flags & CODEC_FLAG_BITEXACT) ? "Lavf" : LIBAVFORMAT_IDENT;
 
     if (!s->pb->seekable || !mp3->write_xing)
@@ -161,7 +161,7 @@
     header |= channels << 6;
 
     for (bitrate_idx = 1; bitrate_idx < 15; bitrate_idx++) {
-        int bit_rate = 1000 * avpriv_mpa_bitrate_tab[lsf][3 - 1][bitrate_idx];
+        int bit_rate = 1000 * avpriv_mpa_bitrate_tab[ver != 3][3 - 1][bitrate_idx];
         int error    = FFABS(bit_rate - codec->bit_rate);
 
         if (error < best_bitrate_error) {
diff -Naur mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/libavformat/mpc.c mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/libavformat/mpc.c
--- mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/libavformat/mpc.c	2014-07-14 17:45:16.000000000 +0200
+++ mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/libavformat/mpc.c	2014-07-14 18:29:43.278080285 +0200
@@ -152,7 +152,7 @@
     }
     c->curbits = (curbits + size2) & 0x1F;
 
-    if ((ret = av_new_packet(pkt, size)) < 0)
+    if ((ret = av_new_packet(pkt, size + 4)) < 0)
         return ret;
 
     pkt->data[0] = curbits;
diff -Naur mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/libavutil/lzo.c mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/libavutil/lzo.c
--- mythtv-0.27-20140708-gf4825ca-old/mythtv/external/FFmpeg/libavutil/lzo.c	2014-07-14 17:45:16.000000000 +0200
+++ mythtv-0.27-20140708-gf4825ca-new/mythtv/external/FFmpeg/libavutil/lzo.c	2014-07-14 18:29:03.218211118 +0200
@@ -22,6 +22,7 @@
 #include <string.h>
 
 #include "avutil.h"
+#include "avassert.h"
 #include "common.h"
 #include "intreadwrite.h"
 #include "lzo.h"
@@ -65,8 +66,13 @@
 {
     int cnt = x & mask;
     if (!cnt) {
-        while (!(x = get_byte(c)))
+        while (!(x = get_byte(c))) {
+            if (cnt >= INT_MAX - 1000) {
+                c->error |= AV_LZO_ERROR;
+                break;
+            }
             cnt += 255;
+        }
         cnt += mask + x;
     }
     return cnt;
@@ -80,6 +86,7 @@
 {
     register const uint8_t *src = c->in;
     register uint8_t *dst       = c->out;
+    av_assert0(cnt >= 0);
     if (cnt > c->in_end - src) {
         cnt       = FFMAX(c->in_end - src, 0);
         c->error |= AV_LZO_INPUT_DEPLETED;
@@ -111,6 +118,7 @@
 static inline void copy_backptr(LZOContext *c, int back, int cnt)
 {
     register uint8_t *dst       = c->out;
+    av_assert0(cnt > 0);
     if (dst - c->out_start < back) {
         c->error |= AV_LZO_INVALID_BACKPTR;
         return;
