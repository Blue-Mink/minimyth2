From 72bb6829a0b8ce747b75fe12f508387ab4beb1f1 Mon Sep 17 00:00:00 2001
From: Jonatan Lindblad <jlindblad@mythtv.org>
Date: Sun, 8 Jun 2014 01:10:42 +0200
Subject: [PATCH 10/23] MythNetvision: Move common stuff to base classes

---
 .../mythnetvision/mythnetvision/mythnetvision.pro  |    4 +-
 .../mythnetvision/mythnetvision/netbase.cpp        |  329 +++++++++++++++++
 mythplugins/mythnetvision/mythnetvision/netbase.h  |   57 +++
 .../mythnetvision/mythnetvision/netcommon.cpp      |    6 +-
 .../mythnetvision/mythnetvision/netcommon.h        |    1 +
 .../mythnetvision/mythnetvision/neteditorbase.cpp  |  247 +++++++++++++
 .../mythnetvision/mythnetvision/neteditorbase.h    |   63 ++++
 .../mythnetvision/mythnetvision/netsearch.cpp      |  350 ++----------------
 .../mythnetvision/mythnetvision/netsearch.h        |   35 +-
 .../mythnetvision/mythnetvision/nettree.cpp        |  387 +-------------------
 mythplugins/mythnetvision/mythnetvision/nettree.h  |   37 +-
 .../mythnetvision/mythnetvision/searcheditor.cpp   |  240 +-----------
 .../mythnetvision/mythnetvision/searcheditor.h     |   45 +--
 .../mythnetvision/mythnetvision/treeeditor.cpp     |  257 +------------
 .../mythnetvision/mythnetvision/treeeditor.h       |   49 +--
 15 files changed, 784 insertions(+), 1323 deletions(-)
 create mode 100644 mythplugins/mythnetvision/mythnetvision/netbase.cpp
 create mode 100644 mythplugins/mythnetvision/mythnetvision/netbase.h
 create mode 100644 mythplugins/mythnetvision/mythnetvision/neteditorbase.cpp
 create mode 100644 mythplugins/mythnetvision/mythnetvision/neteditorbase.h

diff --git a/mythplugins/mythnetvision/mythnetvision/mythnetvision.pro b/mythplugins/mythnetvision/mythnetvision/mythnetvision.pro
index e5526a1..2bf47ec 100644
--- a/mythplugins/mythnetvision/mythnetvision/mythnetvision.pro
+++ b/mythplugins/mythnetvision/mythnetvision/mythnetvision.pro
@@ -32,10 +32,10 @@ INSTALLS += installdiricons installtopicicons installfilmicons installmusicicons
 
 # Input
 HEADERS += rsseditor.h searcheditor.h netcommon.h
-HEADERS += netsearch.h treeeditor.h nettree.h
+HEADERS += neteditorbase.h netsearch.h treeeditor.h nettree.h netbase.h
 
 SOURCES += rsseditor.cpp netsearch.cpp searcheditor.cpp netcommon.cpp
-SOURCES += treeeditor.cpp nettree.cpp main.cpp
+SOURCES += neteditorbase.cpp treeeditor.cpp nettree.cpp main.cpp netbase.cpp
 
 DEFINES += MPLUGIN_API
 
diff --git a/mythplugins/mythnetvision/mythnetvision/netbase.cpp b/mythplugins/mythnetvision/mythnetvision/netbase.cpp
new file mode 100644
index 0000000..195cde2
--- /dev/null
+++ b/mythplugins/mythnetvision/mythnetvision/netbase.cpp
@@ -0,0 +1,329 @@
+#include <QDir>
+
+#include <mythdate.h>
+#include <mythdirs.h>
+#include <mythdate.h>
+#include <mythdialogbox.h>
+#include <mythcontext.h>
+#include <remotefile.h>
+#include <mythcoreutil.h>
+#include <mythprogressdialog.h>
+#include <metadata/metadataimagedownload.h>
+#include <metadata/videoutils.h>
+
+#include "netbase.h"
+
+NetBase::NetBase(MythScreenStack *parent, const char *name)
+    : MythScreenType(parent, name),
+    m_thumbImage(NULL),
+    m_downloadable(NULL),
+    m_busyPopup(NULL),
+    m_popupStack(GetMythMainWindow()->GetStack("popup stack")),
+    m_progressDialog(NULL),
+    m_imageDownload(new MetadataImageDownload(this))
+{
+    gCoreContext->addListener(this);
+}
+
+NetBase::~NetBase()
+{
+    CleanCacheDir();
+
+    qDeleteAll(m_grabberList);
+    m_grabberList.clear();
+
+    cleanThumbnailCacheDir();
+
+    delete m_imageDownload;
+    m_imageDownload = NULL;
+
+    gCoreContext->removeListener(this);
+}
+
+void NetBase::Init()
+{
+    loadData();
+}
+
+void NetBase::DownloadVideo(const QString &url, const QString &dest)
+{
+    InitProgressDialog();
+    m_downloadFile = RemoteDownloadFile(url, "Default", dest);
+}
+
+void NetBase::InitProgressDialog()
+{
+    QString message = tr("Downloading Video...");
+    m_progressDialog = new MythUIProgressDialog(message,
+        m_popupStack, "videodownloadprogressdialog");
+
+    if (m_progressDialog->Create())
+    {
+        m_popupStack->AddScreen(m_progressDialog, false);
+    }
+    else
+    {
+        delete m_progressDialog;
+        m_progressDialog = NULL;
+    }
+}
+
+void NetBase::CreateBusyDialog(const QString &title)
+{
+    if (m_busyPopup)
+        return;
+
+    m_busyPopup = new MythUIBusyDialog(title, m_popupStack,
+        "netvisionbusydialog");
+
+    if (m_busyPopup->Create())
+        m_popupStack->AddScreen(m_busyPopup);
+    else
+    {
+        delete m_busyPopup;
+        m_busyPopup = NULL;
+    }
+}
+
+void NetBase::CleanCacheDir()
+{
+    QString cache = QString("%1/cache/netvision-thumbcache")
+                       .arg(GetConfDir());
+    QDir cacheDir(cache);
+    QStringList thumbs = cacheDir.entryList(QDir::Files);
+
+    for (QStringList::const_iterator i = thumbs.end() - 1;
+            i != thumbs.begin() - 1; --i)
+    {
+        QString filename = QString("%1/%2").arg(cache).arg(*i);
+        LOG(VB_GENERAL, LOG_DEBUG, QString("Deleting file %1").arg(filename));
+        QFileInfo fi(filename);
+        QDateTime lastmod = fi.lastModified();
+        if (lastmod.addDays(7) < MythDate::current())
+            QFile::remove(filename);
+    }
+}
+
+void NetBase::streamWebVideo()
+{
+    ResultItem *item = GetStreamItem();
+
+    if (!item)
+        return;
+
+    if (!item->GetDownloadable())
+    {
+        showWebVideo();
+        return;
+    }
+
+    GetMythMainWindow()->HandleMedia(
+        "Internal", item->GetMediaURL(),
+        item->GetDescription(), item->GetTitle(), item->GetSubtitle(),
+        QString(), item->GetSeason(), item->GetEpisode(), QString(),
+        item->GetTime().toInt(), item->GetDate().toString("yyyy"));
+}
+
+void NetBase::showWebVideo()
+{
+    ResultItem *item = GetStreamItem();
+
+    if (!item)
+        return;
+
+    if (!item->GetPlayer().isEmpty())
+    {
+        QString cmd = item->GetPlayer();
+        QStringList args = item->GetPlayerArguments();
+        if (!args.size())
+        {
+            args += item->GetMediaURL();
+            if (!args.size())
+                args += item->GetURL();
+        }
+        else
+        {
+            args.replaceInStrings("%DIR%", QString(GetConfDir() + "/MythNetvision"));
+            args.replaceInStrings("%MEDIAURL%", item->GetMediaURL());
+            args.replaceInStrings("%URL%", item->GetURL());
+            args.replaceInStrings("%TITLE%", item->GetTitle());
+        }
+        QString playerCommand = cmd + " " + args.join(" ");
+        RunCmdWithoutScreensaver(playerCommand);
+    }
+    else
+    {
+        QString url = item->GetURL();
+
+        LOG(VB_GENERAL, LOG_DEBUG, QString("Web URL = %1").arg(url));
+
+        if (url.isEmpty())
+            return;
+
+        QString browser = gCoreContext->GetSetting("WebBrowserCommand", "");
+        QString zoom = gCoreContext->GetSetting("WebBrowserZoomLevel", "1.0");
+
+        if (browser.isEmpty())
+        {
+            ShowOkPopup(tr("No browser command set! MythNetTree needs MythBrowser "
+                           "installed to display the video."));
+            return;
+        }
+
+        if (browser.toLower() == "internal")
+        {
+            GetMythMainWindow()->HandleMedia("WebBrowser", url);
+        }
+        else
+        {
+            url.replace("mythflash://", "http://");
+            QString cmd = browser;
+            cmd.replace("%ZOOM%", zoom);
+            cmd.replace("%URL%", url);
+            cmd.replace('\'', "%27");
+            cmd.replace("&","\\&");
+            cmd.replace(";","\\;");
+
+            RunCmdWithoutScreensaver(cmd);
+        }
+    }
+}
+
+void NetBase::RunCmdWithoutScreensaver(const QString &cmd)
+{
+    GetMythMainWindow()->PauseIdleTimer(true);
+    GetMythUI()->DisableScreensaver();
+    GetMythMainWindow()->AllowInput(false);
+    myth_system(cmd, kMSDontDisableDrawing);
+    GetMythMainWindow()->AllowInput(true);
+    GetMythMainWindow()->PauseIdleTimer(false);
+    GetMythUI()->RestoreScreensaver();
+}
+
+void NetBase::slotDeleteVideo()
+{
+    QString message = tr("Are you sure you want to delete this file?");
+
+    MythConfirmationDialog *confirmdialog =
+        new MythConfirmationDialog(m_popupStack, message);
+
+    if (confirmdialog->Create())
+    {
+        m_popupStack->AddScreen(confirmdialog);
+        connect(confirmdialog, SIGNAL(haveResult(bool)),
+                SLOT(doDeleteVideo(bool)));
+    }
+    else
+        delete confirmdialog;
+}
+
+void NetBase::doDeleteVideo(bool remove)
+{
+    if (!remove)
+        return;
+
+    ResultItem *item = GetStreamItem();
+
+    if (!item)
+        return;
+
+    QString filename = GetDownloadFilename(item->GetTitle(),
+                                           item->GetMediaURL());
+
+    if (filename.startsWith("myth://"))
+        RemoteFile::DeleteFile(filename);
+    else
+    {
+        QFile file(filename);
+        file.remove();
+    }
+}
+
+void NetBase::customEvent(QEvent *event)
+{
+    if ((MythEvent::Type)(event->type()) == MythEvent::MythEventMessage)
+    {
+        MythEvent *me = (MythEvent *)event;
+        QStringList tokens = me->Message().split(" ", QString::SkipEmptyParts);
+
+        if (tokens.isEmpty())
+            return;
+
+        if (tokens[0] == "DOWNLOAD_FILE")
+        {
+            QStringList args = me->ExtraDataList();
+            if ((tokens.size() != 2) ||
+                (args[1] != m_downloadFile))
+                return;
+
+            if (tokens[1] == "UPDATE")
+            {
+                QString message = tr("Downloading Video...\n"
+                                     "(%1 of %2 MB)")
+                    .arg(QString::number(args[2].toInt() / 1024.0 / 1024.0, 'f', 2))
+                    .arg(QString::number(args[3].toInt() / 1024.0 / 1024.0, 'f', 2));
+                m_progressDialog->SetMessage(message);
+                m_progressDialog->SetTotal(args[3].toInt());
+                m_progressDialog->SetProgress(args[2].toInt());
+            }
+            else if (tokens[1] == "FINISHED")
+            {
+                int fileSize  = args[2].toInt();
+                int errorCode = args[4].toInt();
+
+                if (m_progressDialog)
+                    m_progressDialog->Close();
+
+                if ((m_downloadFile.startsWith("myth://")))
+                {
+                    if ((errorCode == 0) &&
+                        (fileSize > 0))
+                    {
+                        doPlayVideo(m_downloadFile);
+                    }
+                    else
+                    {
+                        ShowOkPopup(tr("Error downloading video to backend."));
+                    }
+                }
+            }
+        }
+    }
+}
+
+void NetBase::doDownloadAndPlay()
+{
+    ResultItem *item = GetStreamItem();
+    if (!item)
+        return;
+
+    QString baseFilename = GetDownloadFilename(item->GetTitle(),
+                                          item->GetMediaURL());
+
+    QString finalFilename = generate_file_url("Default",
+                              gCoreContext->GetMasterHostName(),
+                              baseFilename);
+
+    LOG(VB_GENERAL, LOG_INFO, QString("Downloading %1 to %2")
+        .arg(item->GetMediaURL()) .arg(finalFilename));
+
+    // Does the file already exist?
+    bool exists = RemoteFile::Exists(finalFilename);
+
+    if (exists)
+    {
+        doPlayVideo(finalFilename);
+        return;
+    }
+    else
+        DownloadVideo(item->GetMediaURL(), baseFilename);
+}
+
+void NetBase::doPlayVideo(const QString &filename)
+{
+    ResultItem *item = GetStreamItem();
+    if (!item)
+        return;
+
+    GetMythMainWindow()->HandleMedia("Internal", filename);
+}
diff --git a/mythplugins/mythnetvision/mythnetvision/netbase.h b/mythplugins/mythnetvision/mythnetvision/netbase.h
new file mode 100644
index 0000000..8d4354f
--- /dev/null
+++ b/mythplugins/mythnetvision/mythnetvision/netbase.h
@@ -0,0 +1,57 @@
+#ifndef NETBASE_H_
+#define NETBASE_H_
+
+#include <QString>
+#include <QDomDocument>
+#include <QUrl>
+
+#include <netutils.h>
+#include <mythscreentype.h>
+
+class MythUIImage;
+class MythUIStateType;
+class MythUIBusyDialog;
+class MythUIProgressDialog;
+class MetadataImageDownload;
+class ResultItem;
+
+class NetBase : public MythScreenType
+{
+  Q_OBJECT
+
+  public:
+    NetBase(MythScreenStack *parent, const char *name = 0);
+    virtual ~NetBase();
+
+  protected:
+    virtual void Init();
+    virtual ResultItem *GetStreamItem() = 0;
+    virtual void loadData(void) = 0;
+    void InitProgressDialog();
+    void CreateBusyDialog(const QString &title);
+    void CleanCacheDir();
+    void DownloadVideo(const QString &url, const QString &dest);
+    void RunCmdWithoutScreensaver(const QString &cmd);
+
+  protected slots:
+    void streamWebVideo(void);
+    void showWebVideo(void);
+    void doDownloadAndPlay(void);
+    void doPlayVideo(const QString &filename);
+    void slotDeleteVideo(void);
+    void doDeleteVideo(bool remove);
+    virtual void customEvent(QEvent *event);
+
+  protected:
+    MythUIImage           *m_thumbImage;
+    MythUIStateType       *m_downloadable;
+    MythUIBusyDialog      *m_busyPopup;
+    MythScreenStack       *m_popupStack;
+    MythUIProgressDialog  *m_progressDialog;
+    MetadataImageDownload *m_imageDownload;
+
+    QString m_downloadFile;
+    GrabberScript::scriptList m_grabberList;
+};
+
+#endif // NETBASE_H_
diff --git a/mythplugins/mythnetvision/mythnetvision/netcommon.cpp b/mythplugins/mythnetvision/mythnetvision/netcommon.cpp
index 84332d0..89a62d7 100644
--- a/mythplugins/mythnetvision/mythnetvision/netcommon.cpp
+++ b/mythplugins/mythnetvision/mythnetvision/netcommon.cpp
@@ -1,12 +1,8 @@
 #include <QDir>
-#include <QNetworkAccessManager>
-#include <QNetworkReply>
-#include <QEventLoop>
 
 #include <mythdirs.h>
-#include <mythdb.h>
 #include <mythcontext.h>
-#include <netgrabbermanager.h>
+#include <remotefile.h>
 
 #include "netcommon.h"
 
diff --git a/mythplugins/mythnetvision/mythnetvision/netcommon.h b/mythplugins/mythnetvision/mythnetvision/netcommon.h
index 42feaaa..d1028f2 100644
--- a/mythplugins/mythnetvision/mythnetvision/netcommon.h
+++ b/mythplugins/mythnetvision/mythnetvision/netcommon.h
@@ -6,6 +6,7 @@
 #include <QUrl>
 
 #include <netutils.h>
+#include <mythscreentype.h>
 
 // Generic Data Formatting
 QString GetThumbnailFilename(QString url, QString title);
diff --git a/mythplugins/mythnetvision/mythnetvision/neteditorbase.cpp b/mythplugins/mythnetvision/mythnetvision/neteditorbase.cpp
new file mode 100644
index 0000000..49bd4f7
--- /dev/null
+++ b/mythplugins/mythnetvision/mythnetvision/neteditorbase.cpp
@@ -0,0 +1,247 @@
+#include <QDomDocument>
+
+// MythTV headers
+#include <mythuibuttonlist.h>
+#include <mythmainwindow.h>
+#include <mythdialogbox.h>
+#include <mythcontext.h>
+#include <mythdbcon.h>
+#include <mythdirs.h>
+#include <netutils.h>
+
+// Tree headers
+#include "neteditorbase.h"
+#include "netcommon.h"
+
+#define LOC      QString("NetEditorBase: ")
+#define LOC_WARN QString("NetEditorBase, Warning: ")
+#define LOC_ERR  QString("NetEditorBase, Error: ")
+
+/** \brief Creates a new NetEditorBase Screen
+ *  \param parent Pointer to the screen stack
+ *  \param name The name of the window
+ */
+NetEditorBase::NetEditorBase(MythScreenStack *parent,
+                             const QString &name) :
+    MythScreenType(parent, name),
+    m_grabbers(NULL),
+    m_busyPopup(NULL),
+    m_popupStack(),
+    m_manager(NULL),
+    m_reply(NULL),
+    m_changed(false)
+{
+    m_popupStack = GetMythMainWindow()->GetStack("popup stack");
+}
+
+NetEditorBase::~NetEditorBase()
+{
+    if (m_manager)
+    {
+        m_manager->disconnect();
+        m_manager->deleteLater();
+        m_manager = NULL;
+    }
+
+    qDeleteAll(m_grabberList);
+    m_grabberList.clear();
+
+    if (m_changed)
+        emit ItemsChanged();
+}
+
+bool NetEditorBase::Create(void)
+{
+    // Load the theme for this screen
+    bool foundtheme = LoadWindowFromXML("netvision-ui.xml", "treeeditor", this);
+
+    if (!foundtheme)
+        return false;
+
+    bool err = false;
+    UIUtilE::Assign(this, m_grabbers, "grabbers", &err);
+
+    if (err)
+    {
+        LOG(VB_GENERAL, LOG_ERR, "Cannot load screen 'treeeditor'");
+        return false;
+    }
+
+    connect(m_grabbers, SIGNAL(itemClicked(MythUIButtonListItem*)),
+            this, SLOT(ToggleItem(MythUIButtonListItem*)));
+
+    BuildFocusList();
+
+    LoadData();
+
+    return true;
+}
+
+void NetEditorBase::LoadData()
+{
+    QString msg = tr("Querying Backend for Internet Content Sources...");
+    CreateBusyDialog(msg);
+
+    m_manager = new QNetworkAccessManager();
+
+    connect(m_manager, SIGNAL(finished(QNetworkReply*)),
+                       SLOT(SlotLoadedData(void)));
+
+    QUrl url(GetMythXMLURL() + "GetInternetSources");
+    m_reply = m_manager->get(QNetworkRequest(url));
+}
+
+bool NetEditorBase::keyPressEvent(QKeyEvent *event)
+{
+    if (GetFocusWidget()->keyPressEvent(event))
+        return true;
+
+    QStringList actions;
+    bool handled = GetMythMainWindow()->TranslateKeyPress("Internet Video",
+                                                          event, actions);
+
+    if (!handled && MythScreenType::keyPressEvent(event))
+        handled = true;
+
+    return handled;
+}
+
+void NetEditorBase::SlotLoadedData()
+{
+    QDomDocument doc;
+    doc.setContent(m_reply->readAll());
+    QDomElement root = doc.documentElement();
+    QDomElement content = root.firstChildElement("InternetContent");
+    QDomElement grabber = content.firstChildElement("grabber");
+
+    while (!grabber.isNull())
+    {
+        QString title, author, image, description, type, commandline;
+        double version;
+        bool search = false;
+        bool tree = false;
+
+        title = grabber.firstChildElement("name").text();
+        commandline = grabber.firstChildElement("command").text();
+        author = grabber.firstChildElement("author").text();
+        image = grabber.firstChildElement("thumbnail").text();
+        type = grabber.firstChildElement("type").text();
+        description = grabber.firstChildElement("description").text();
+        version = grabber.firstChildElement("version").text().toDouble();
+
+        QString searchstring = grabber.firstChildElement("search").text();
+
+        if (!searchstring.isEmpty() &&
+            (searchstring.toLower() == "true" ||
+             searchstring.toLower() == "yes" ||
+             searchstring == "1"))
+            search = true;
+
+        QString treestring = grabber.firstChildElement("tree").text();
+
+        if (!treestring.isEmpty() &&
+            (treestring.toLower() == "true" ||
+             treestring.toLower() == "yes" ||
+             treestring == "1"))
+            tree = true;
+
+        if (type.toLower() == "video" && Matches(search, tree))
+        {
+            LOG(VB_GENERAL, LOG_INFO,
+                QString("Found Source %1...").arg(title));
+            m_grabberList.append(new GrabberScript(title, image, VIDEO_FILE,
+                                                   author, search, tree,
+                                                   description, commandline,
+                                                   version));
+        }
+
+        grabber = grabber.nextSiblingElement("grabber");
+    }
+
+    ParsedData();
+ }
+
+void NetEditorBase::ParsedData()
+{
+    if (m_busyPopup)
+    {
+        m_busyPopup->Close();
+        m_busyPopup = NULL;
+    }
+
+    FillGrabberButtonList();
+}
+
+void NetEditorBase::CreateBusyDialog(QString title)
+{
+    if (m_busyPopup)
+        return;
+
+    QString message = title;
+
+    m_busyPopup = new MythUIBusyDialog(message, m_popupStack,
+            "mythvideobusydialog");
+
+    if (m_busyPopup->Create())
+        m_popupStack->AddScreen(m_busyPopup);
+    else
+    {
+        delete m_busyPopup;
+        m_busyPopup = NULL;
+    }
+}
+
+void NetEditorBase::FillGrabberButtonList()
+{
+    for (GrabberScript::scriptList::iterator i = m_grabberList.begin();
+            i != m_grabberList.end(); ++i)
+    {
+        MythUIButtonListItem *item =
+            new MythUIButtonListItem(m_grabbers, (*i)->GetTitle());
+        item->SetText((*i)->GetTitle(), "title");
+        item->SetData(qVariantFromValue(*i));
+        QString img = (*i)->GetImage();
+        QString thumb;
+
+        if (!img.startsWith("/") && !img.isEmpty())
+            thumb = QString("%1mythnetvision/icons/%2").arg(GetShareDir())
+                .arg((*i)->GetImage());
+        else
+            thumb = img;
+
+        item->SetImage(thumb);
+        item->setCheckable(true);
+        item->setChecked(MythUIButtonListItem::NotChecked);
+        QFileInfo fi((*i)->GetCommandline());
+
+        if (FindGrabberInDB(fi.fileName()))
+            item->setChecked(MythUIButtonListItem::FullChecked);
+    }
+}
+
+void NetEditorBase::ToggleItem(MythUIButtonListItem *item)
+{
+    if (!item)
+        return;
+
+    GrabberScript *script = qVariantValue<GrabberScript *>(item->GetData());
+
+    if (!script)
+        return;
+
+    bool checked = (item->state() == MythUIButtonListItem::FullChecked);
+
+    if (!checked)
+    {
+        if (InsertInDB(script))
+        {
+            m_changed = true;
+            item->setChecked(MythUIButtonListItem::FullChecked);
+        }
+    }
+    else if (RemoveFromDB(script))
+    {
+        m_changed = true;
+        item->setChecked(MythUIButtonListItem::NotChecked);
+    }
+}
diff --git a/mythplugins/mythnetvision/mythnetvision/neteditorbase.h b/mythplugins/mythnetvision/mythnetvision/neteditorbase.h
new file mode 100644
index 0000000..cecb9fd
--- /dev/null
+++ b/mythplugins/mythnetvision/mythnetvision/neteditorbase.h
@@ -0,0 +1,63 @@
+#ifndef NETEDITORBASE_H
+#define NETEDITORBASE_H
+
+// Qt headers
+#include <QString>
+#include <QDomDocument>
+#include <QNetworkRequest>
+#include <QNetworkReply>
+#include <QNetworkAccessManager>
+
+// MythTV headers
+#include <mythscreentype.h>
+#include <netgrabbermanager.h>
+#include <mythscreentype.h>
+#include <mythprogressdialog.h>
+
+class MythUIButtonList;
+
+/** \class TreeEdit
+ *  \brief Modify subscribed trees.
+ */
+class NetEditorBase : public MythScreenType
+{
+    Q_OBJECT
+
+  public:
+    NetEditorBase(MythScreenStack *parent, const QString &name);
+    virtual ~NetEditorBase();
+
+    bool Create(void);
+    bool keyPressEvent(QKeyEvent*);
+
+  private:
+    void LoadData(void);
+    void FillGrabberButtonList();
+    void ParsedData();
+
+    GrabberScript::scriptList m_grabberList;
+    MythUIButtonList *m_grabbers;
+    MythUIBusyDialog *m_busyPopup;
+    MythScreenStack  *m_popupStack;
+
+    QNetworkAccessManager *m_manager;
+    QNetworkReply         *m_reply;
+    bool m_changed;
+
+  protected:
+    void CreateBusyDialog(QString title);
+
+    virtual bool InsertInDB(GrabberScript *script) = 0;
+    virtual bool RemoveFromDB(GrabberScript *script) = 0;
+    virtual bool FindGrabberInDB(const QString &filename) = 0;
+    virtual bool Matches(bool search, bool tree) = 0;
+
+  signals:
+    void ItemsChanged(void);
+
+  public slots:
+    void SlotLoadedData(void);
+    void ToggleItem(MythUIButtonListItem *item);
+};
+
+#endif /* NETEDITORBASE_H */
diff --git a/mythplugins/mythnetvision/mythnetvision/netsearch.cpp b/mythplugins/mythnetvision/mythnetvision/netsearch.cpp
index 0d89e9d..b7739a6 100644
--- a/mythplugins/mythnetvision/mythnetvision/netsearch.cpp
+++ b/mythplugins/mythnetvision/mythnetvision/netsearch.cpp
@@ -16,10 +16,10 @@
 #include <remotefile.h>
 #include <netgrabbermanager.h>
 #include <netutils.h>
+#include <metadata/metadataimagedownload.h>
 #include <metadata/videoutils.h>
 #include <rssparse.h>
 #include <mythcoreutil.h>
-#include <mythdate.h>
 
 #include "netsearch.h"
 #include "netcommon.h"
@@ -31,24 +31,18 @@ using namespace std;
 // ---------------------------------------------------
 
 NetSearch::NetSearch(MythScreenStack *parent, const char *name)
-    : MythScreenType(parent, name),
+    : NetBase(parent, name),
       m_searchResultList(NULL),      m_siteList(NULL),
       m_search(NULL),                m_pageText(NULL),
-      m_noSites(NULL),               m_thumbImage(NULL),
-      m_downloadable(NULL),          m_progress(NULL),
-      m_busyPopup(NULL),             m_okPopup(NULL),
-      m_menuPopup(NULL),
-      m_popupStack(GetMythMainWindow()->GetStack("popup stack")),
-      m_progressDialog(NULL),        m_netSearch(NULL),
+      m_noSites(NULL),               m_progress(NULL),
+      m_okPopup(NULL),               m_netSearch(NULL),
+
       m_reply(NULL),                 m_download(new MythDownloadManager()),
-      m_imageDownload(new MetadataImageDownload(this)),
-      m_file(NULL),                  m_currentSearch(QString()),
-      m_currentGrabber(0),           m_currentCmd(QString()),
-      m_downloadFile(QString()),     m_pagenum(0),
+      m_currentSearch(QString()),    m_currentGrabber(0),
+      m_currentCmd(QString()),       m_pagenum(0),
       m_maxpage(0),                  m_playing(false),
       m_redirects(0),                m_mythXML(GetMythXMLURL())
 {
-    gCoreContext->addListener(this);
 }
 
 bool NetSearch::Create()
@@ -111,18 +105,8 @@ void NetSearch::Load()
     m_grabberList = findAllDBSearchGrabbers(VIDEO_FILE);
 }
 
-void NetSearch::Init()
-{
-    loadData();
-}
-
 NetSearch::~NetSearch()
 {
-    cleanCacheDir();
-
-    qDeleteAll(m_grabberList);
-    m_grabberList.clear();
-
     if (m_netSearch)
     {
         m_netSearch->disconnect();
@@ -130,21 +114,8 @@ NetSearch::~NetSearch()
         m_netSearch = NULL;
     }
 
-    if (m_download)
-    {
-        delete m_download;
-        m_download = NULL;
-    }
-
-    cleanThumbnailCacheDir();
-
-    if (m_imageDownload)
-    {
-        delete m_imageDownload;
-        m_imageDownload = NULL;
-    }
-
-    gCoreContext->removeListener(this);
+    delete m_download;
+    m_download = NULL;
 }
 
 void NetSearch::loadData(void)
@@ -188,25 +159,6 @@ bool NetSearch::keyPressEvent(QKeyEvent *event)
     return handled;
 }
 
-void NetSearch::createBusyDialog(QString title)
-{
-    if (m_busyPopup)
-        return;
-
-    QString message = title;
-
-    m_busyPopup = new MythUIBusyDialog(message, m_popupStack,
-            "mythvideobusydialog");
-
-    if (m_busyPopup->Create())
-        m_popupStack->AddScreen(m_busyPopup);
-    else
-    {
-        delete m_busyPopup;
-        m_busyPopup = NULL;
-    }
-}
-
 void NetSearch::showMenu(void)
 {
     QString label = tr("Search Options");
@@ -222,20 +174,16 @@ void NetSearch::showMenu(void)
 
         if (m_searchResultList->GetCount() > 0)
         {
-            ResultItem *item =
-                  qVariantValue<ResultItem *>(m_searchResultList->GetDataValue());
-
-            QString filename;
-            bool exists = false;
-
+            ResultItem *item = GetStreamItem();
             if (item)
             {
                 if (item->GetDownloadable())
                     menuPopup->AddButton(tr("Stream Video"), SLOT(streamWebVideo()));
                 menuPopup->AddButton(tr("Open Web Link"), SLOT(showWebVideo()));
 
-                filename = GetDownloadFilename(item->GetTitle(),
-                                          item->GetMediaURL());
+                QString filename = GetDownloadFilename(item->GetTitle(),
+                    item->GetMediaURL());
+                bool exists = false;
 
                 if (filename.startsWith("myth://"))
                     exists = RemoteFile::Exists(filename);
@@ -293,25 +241,6 @@ void NetSearch::fillGrabberButtonList()
     }
 }
 
-void NetSearch::cleanCacheDir()
-{
-    QString cache = QString("%1/cache/netvision-thumbcache")
-                       .arg(GetConfDir());
-    QDir cacheDir(cache);
-    QStringList thumbs = cacheDir.entryList(QDir::Files);
-
-    for (QStringList::const_iterator i = thumbs.end() - 1;
-            i != thumbs.begin() - 1; --i)
-    {
-        QString filename = QString("%1/%2").arg(cache).arg(*i);
-        LOG(VB_GENERAL, LOG_DEBUG, QString("Deleting file %1").arg(filename));
-        QFileInfo fi(filename);
-        QDateTime lastmod = fi.lastModified();
-        if (lastmod.addDays(7) < MythDate::current())
-            QFile::remove(filename);
-    }
-}
-
 void NetSearch::doSearch()
 {
     m_searchResultList->Reset();
@@ -340,7 +269,7 @@ void NetSearch::doSearch()
 
     QString title = tr("Searching %1 for \"%2\"...")
                     .arg(grabber).arg(query);
-    createBusyDialog(title);
+    CreateBusyDialog(title);
 
     m_netSearch = new QNetworkAccessManager(this);
     connect(m_netSearch, SIGNAL(finished(QNetworkReply*)),
@@ -363,7 +292,7 @@ void NetSearch::getLastResults()
     QString title = tr("Changing to page %1 of search \"%2\"...")
                     .arg(QString::number(m_pagenum))
                     .arg(m_currentSearch);
-    createBusyDialog(title);
+    CreateBusyDialog(title);
 
     QUrl req = GetMythXMLSearch(m_mythXML, m_currentSearch,
                                 m_currentCmd, m_pagenum);
@@ -379,7 +308,7 @@ void NetSearch::getMoreResults()
     QString title = tr("Changing to page %1 of search \"%2\"...")
                     .arg(QString::number(m_pagenum))
                     .arg(m_currentSearch);
-    createBusyDialog(title);
+    CreateBusyDialog(title);
 
     QUrl req = GetMythXMLSearch(m_mythXML, m_currentSearch,
                                 m_currentCmd, m_pagenum);
@@ -442,7 +371,6 @@ void NetSearch::searchTimeout(Search *)
     QString message = tr("Timed out waiting for query to "
                          "finish.  API might be down.");
 
-//    MythConfirmationDialog *okPopup =
     if (!m_okPopup)
     {
         m_okPopup = new MythConfirmationDialog(m_popupStack,
@@ -497,146 +425,9 @@ void NetSearch::populateResultList(ResultItem::resultList list)
     }
 }
 
-void NetSearch::streamWebVideo()
-{
-    ResultItem *item =
-        qVariantValue<ResultItem *>(m_searchResultList->GetDataValue());
-
-    if (!item)
-        return;
-
-    if (!item->GetDownloadable())
-    {
-        showWebVideo();
-        return;
-    }
-
-    GetMythMainWindow()->HandleMedia(
-        "Internal", item->GetMediaURL(),
-        item->GetDescription(), item->GetTitle(), item->GetSubtitle(),
-        QString(), item->GetSeason(), item->GetEpisode(), QString(),
-        item->GetTime().toInt(), item->GetDate().toString("yyyy"));
-}
-
-void NetSearch::showWebVideo()
-{
-    ResultItem *item =
-        qVariantValue<ResultItem *>(m_searchResultList->GetDataValue());
-
-    if (!item)
-        return;
-
-    if (!item->GetPlayer().isEmpty())
-    {
-        QString cmd = item->GetPlayer();
-        QStringList args = item->GetPlayerArguments();
-        if (!args.size())
-        {
-            args += item->GetMediaURL();
-            if (!args.size())
-                args += item->GetURL();
-        }
-        else
-        {
-            args.replaceInStrings("%DIR%", QString(GetConfDir() + "/MythNetvision"));
-            args.replaceInStrings("%MEDIAURL%", item->GetMediaURL());
-            args.replaceInStrings("%URL%", item->GetURL());
-            args.replaceInStrings("%TITLE%", item->GetTitle());
-        }
-        QString playerCommand = cmd + " " + args.join(" ");
-
-        myth_system(playerCommand);
-    }
-    else
-    {
-        QString url = item->GetURL();
-
-        LOG(VB_GENERAL, LOG_DEBUG, QString("Web URL = %1").arg(url));
-
-        if (url.isEmpty())
-            return;
-
-        QString browser = gCoreContext->GetSetting("WebBrowserCommand", "");
-        QString zoom = gCoreContext->GetSetting("WebBrowserZoomLevel", "1.0");
-
-        if (browser.isEmpty())
-        {
-            ShowOkPopup(tr("No browser command set! MythNetVision needs MythBrowser "
-                           "installed to display the video."));
-            return;
-        }
-
-        if (browser.toLower() == "internal")
-        {
-            GetMythMainWindow()->HandleMedia("WebBrowser", url);
-            return;
-        }
-        else
-        {
-            QString cmd = browser;
-            cmd.replace("%ZOOM%", zoom);
-            cmd.replace("%URL%", url);
-            cmd.replace('\'', "%27");
-            cmd.replace("&","\\&");
-            cmd.replace(";","\\;");
-
-            GetMythMainWindow()->AllowInput(false);
-            myth_system(cmd, kMSDontDisableDrawing);
-            GetMythMainWindow()->AllowInput(true);
-            return;
-        }
-    }
-}
-
-void NetSearch::doPlayVideo(QString filename)
+ResultItem* NetSearch::GetStreamItem()
 {
-    ResultItem *item =
-          qVariantValue<ResultItem *>(m_searchResultList->GetDataValue());
-
-    if (!item)
-        return;
-
-    GetMythMainWindow()->HandleMedia("Internal", filename);
-}
-
-void NetSearch::slotDeleteVideo()
-{
-    QString message = tr("Are you sure you want to delete this file?");
-
-    MythConfirmationDialog *confirmdialog =
-            new MythConfirmationDialog(m_popupStack,message);
-
-    if (confirmdialog->Create())
-    {
-        m_popupStack->AddScreen(confirmdialog);
-        connect(confirmdialog, SIGNAL(haveResult(bool)),
-                SLOT(doDeleteVideo(bool)));
-    }
-    else
-        delete confirmdialog;
-}
-
-void NetSearch::doDeleteVideo(bool remove)
-{
-    if (!remove)
-        return;
-
-    ResultItem *item =
-          qVariantValue<ResultItem *>(m_searchResultList->GetDataValue());
-
-    if (!item)
-        return;
-
-    QString filename = GetDownloadFilename(item->GetTitle(),
-                                          item->GetMediaURL());
-
-    if (filename.startsWith("myth://"))
-        RemoteFile::DeleteFile(filename);
-    else
-    {
-        QFile file(filename);
-        file.remove();
-    }
+    return qVariantValue<ResultItem *>(m_searchResultList->GetDataValue());
 }
 
 void NetSearch::runSearchEditor()
@@ -647,7 +438,7 @@ void NetSearch::runSearchEditor()
 
     if (searchedit->Create())
     {
-        connect(searchedit, SIGNAL(itemsChanged()), this,
+        connect(searchedit, SIGNAL(ItemsChanged()), this,
                        SLOT(doListRefresh()));
 
         mainStack->AddScreen(searchedit);
@@ -667,59 +458,6 @@ void NetSearch::doListRefresh()
     loadData();
 }
 
-void NetSearch::doDownloadAndPlay()
-{
-    ResultItem *item =
-          qVariantValue<ResultItem *>(m_searchResultList->GetDataValue());
-
-    if (!item)
-        return;
-
-    QString baseFilename = GetDownloadFilename(item->GetTitle(),
-                                          item->GetMediaURL());
-
-    QString finalFilename = generate_file_url("Default",
-                              gCoreContext->GetMasterHostName(),
-                              baseFilename);
-
-    LOG(VB_GENERAL, LOG_INFO, QString("Downloading %1 to %2")
-            .arg(item->GetMediaURL()) .arg(finalFilename));
-
-    // Does the file already exist?
-    bool exists = RemoteFile::Exists(finalFilename);
-
-    if (exists)
-    {
-        doPlayVideo(finalFilename);
-        return;
-    }
-    else
-        DownloadVideo(item->GetMediaURL(), baseFilename);
-}
-
-void NetSearch::DownloadVideo(QString url, QString dest)
-{
-    initProgressDialog();
-    m_downloadFile = RemoteDownloadFile(url, "Default", dest);
-}
-
-void NetSearch::initProgressDialog()
-{
-    QString message = tr("Downloading Video...");
-    m_progressDialog = new MythUIProgressDialog(message,
-               m_popupStack, "videodownloadprogressdialog");
-
-    if (m_progressDialog->Create())
-    {
-        m_popupStack->AddScreen(m_progressDialog, false);
-    }
-    else
-    {
-        delete m_progressDialog;
-        m_progressDialog = NULL;
-    }
-}
-
 void NetSearch::slotItemChanged()
 {
     ResultItem *item =
@@ -834,54 +572,8 @@ void NetSearch::customEvent(QEvent *event)
             item->SetImage(file);
         }
     }
-    else if ((MythEvent::Type)(event->type()) == MythEvent::MythEventMessage)
+    else
     {
-        MythEvent *me = (MythEvent *)event;
-        QStringList tokens = me->Message().split(" ", QString::SkipEmptyParts);
-
-        if (tokens.isEmpty())
-            return;
-
-        if (tokens[0] == "DOWNLOAD_FILE")
-        {
-            QStringList args = me->ExtraDataList();
-            if ((tokens.size() != 2) ||
-                (args[1] != m_downloadFile))
-                return;
-
-            if (tokens[1] == "UPDATE")
-            {
-                QString message = tr("Downloading Video...\n"
-                                     "(%1 of %2 MB)")
-                                     .arg(QString::number(args[2].toInt() / 1024.0 / 1024.0, 'f', 2))
-                                     .arg(QString::number(args[3].toInt() / 1024.0 / 1024.0, 'f', 2));
-                m_progressDialog->SetMessage(message);
-                m_progressDialog->SetTotal(args[3].toInt());
-                m_progressDialog->SetProgress(args[2].toInt());
-            }
-            else if (tokens[1] == "FINISHED")
-            {
-                int fileSize  = args[2].toInt();
-                int errorCode = args[4].toInt();
-
-                if (m_progressDialog)
-                    m_progressDialog->Close();
-
-                QFileInfo file(m_downloadFile);
-                if ((m_downloadFile.startsWith("myth://")))
-                {
-                    if ((errorCode == 0) &&
-                        (fileSize > 0))
-                    {
-                        doPlayVideo(m_downloadFile);
-                    }
-                    else
-                    {
-                        ShowOkPopup(tr("Error downloading video to backend."));
-                    }
-                }
-            }
-        }
+        NetBase::customEvent(event);
     }
 }
-
diff --git a/mythplugins/mythnetvision/mythnetvision/netsearch.h b/mythplugins/mythnetvision/mythnetvision/netsearch.h
index 140bce0..8071196 100644
--- a/mythplugins/mythnetvision/mythnetvision/netsearch.h
+++ b/mythplugins/mythnetvision/mythnetvision/netsearch.h
@@ -1,6 +1,8 @@
 #ifndef NETSEARCH_H
 #define NETSEARCH_H
 
+#include "netbase.h"
+
 // libmythui
 #include <mythuibutton.h>
 #include <mythuibuttonlist.h>
@@ -13,11 +15,8 @@
 #include <netgrabbermanager.h>
 #include <mythrssmanager.h>
 #include <mythdownloadmanager.h>
-#include <metadata/metadataimagedownload.h>
-
-class MythUIBusyDialog;
 
-class NetSearch : public MythScreenType
+class NetSearch : public NetBase
 {
   Q_OBJECT
 
@@ -34,17 +33,11 @@ class NetSearch : public MythScreenType
 
     void populateResultList(ResultItem::resultList list);
 
-  public slots:
-
   protected:
-    void createBusyDialog(QString title);
+    virtual ResultItem *GetStreamItem();
 
   private:
     virtual void Load();
-    virtual void Init();
-
-    void initProgressDialog();
-    void cleanCacheDir(void);
 
     MythUIButtonList   *m_searchResultList;
     MythUIButtonList   *m_siteList;
@@ -53,41 +46,26 @@ class NetSearch : public MythScreenType
     MythUIText         *m_pageText;
     MythUIText         *m_noSites;
 
-    MythUIImage        *m_thumbImage;
-    MythUIStateType    *m_downloadable;
     MythUIProgressBar  *m_progress;
-    MythUIBusyDialog   *m_busyPopup;
     MythConfirmationDialog *m_okPopup;
 
-    MythDialogBox        *m_menuPopup;
-    MythScreenStack      *m_popupStack;
-    MythUIProgressDialog *m_progressDialog;
-
     QNetworkAccessManager *m_netSearch;
     QNetworkReply         *m_reply;
     MythDownloadManager   *m_download;
-    MetadataImageDownload *m_imageDownload;
-    QFile                 *m_file;
 
     QString             m_currentSearch;
     int                 m_currentGrabber;
     QString             m_currentCmd;
-    QString             m_downloadFile;
     uint                m_pagenum;
     uint                m_maxpage;
     bool                m_playing;
     uint                m_redirects;
     QString             m_mythXML;
 
-    GrabberScript::scriptList m_grabberList;
     RSSSite::rssList    m_rssList;
     QMap<MythUIButtonListItem*,ResultItem> m_rssitems;
 
   private slots:
-    void streamWebVideo(void);
-    void showWebVideo(void);
-    void doDownloadAndPlay(void);
-    void doPlayVideo(QString filename);
     void showMenu(void);
     void getMoreResults();
     void getLastResults();
@@ -103,12 +81,7 @@ class NetSearch : public MythScreenType
     void slotDoProgress(qint64 bytesReceived,
                         qint64 bytesTotal);
     void slotDownloadFinished(void);
-    void slotDeleteVideo(void);
-    void doDeleteVideo(bool remove);
-    void DownloadVideo(QString url, QString dest);
-
     void customEvent(QEvent *levent);
 };
 
 #endif
-
diff --git a/mythplugins/mythnetvision/mythnetvision/nettree.cpp b/mythplugins/mythnetvision/mythnetvision/nettree.cpp
index b88036c..cab7987 100644
--- a/mythplugins/mythnetvision/mythnetvision/nettree.cpp
+++ b/mythplugins/mythnetvision/mythnetvision/nettree.cpp
@@ -4,13 +4,10 @@
 #include <QtAlgorithms>
 
 // myth
-#include <mythdate.h>
 #include <mythdb.h>
 #include <mythcontext.h>
 #include <mythdirs.h>
 #include <mythsystemlegacy.h>
-#include <remoteutil.h>
-#include <remotefile.h>
 #include <mythprogressdialog.h>
 #include <rssparse.h>
 #include <netutils.h>
@@ -25,7 +22,6 @@
 #include "rsseditor.h"
 #include "netcommon.h"
 
-class ResultItem;
 class GrabberScript;
 
 const QString NetTree::RSSNode = tr("RSS Feeds");
@@ -44,26 +40,20 @@ namespace
 }
 
 NetTree::NetTree(DialogType type, MythScreenStack *parent, const char *name)
-    : MythScreenType(parent, name),
+    : NetBase(parent, name),
       m_siteMap(NULL),               m_siteButtonList(NULL),
       m_siteGeneric(NULL),           m_rssGeneric(NULL),
       m_searchGeneric(NULL),         m_currentNode(NULL),
-      m_noSites(NULL),               m_thumbImage(NULL),
-      m_downloadable(NULL),          m_busyPopup(NULL),
-      m_menuPopup(NULL),             m_popupStack(),
-      m_progressDialog(NULL),        m_downloadFile(QString()),
+      m_noSites(NULL),               m_gdt(new GrabberDownloadThread(this)),
       m_type(type)
 {
-    m_imageDownload = new MetadataImageDownload(this);
-    m_gdt = new GrabberDownloadThread(this);
-    m_popupStack = GetMythMainWindow()->GetStack("popup stack");
+    connect(m_gdt, SIGNAL(finished()), SLOT(doTreeRefresh()));
     m_updateFreq = gCoreContext->GetNumSetting(
                        "mythNetTree.updateFreq", 6);
     m_rssAutoUpdate = gCoreContext->GetNumSetting(
                        "mythnetvision.rssBackgroundFetch", 0);
     m_treeAutoUpdate = gCoreContext->GetNumSetting(
                        "mythnetvision.backgroundFetch", 0);
-    gCoreContext->addListener(this);
 }
 
 bool NetTree::Create()
@@ -154,63 +144,21 @@ void NetTree::SetCurrentNode(MythGenericTree *node)
     m_currentNode = node;
 }
 
-void NetTree::Init()
-{
-    loadData();
-}
-
 NetTree::~NetTree()
 {
-    qDeleteAll(m_grabberList);
-    m_grabberList.clear();
-
     if (m_siteGeneric)
     {
         delete m_siteGeneric;
         m_siteGeneric = NULL;
     }
 
-    cleanThumbnailCacheDir();
-
-    if (m_imageDownload)
-    {
-        delete m_imageDownload;
-        m_imageDownload = NULL;
-    }
-
-    if (m_gdt)
-    {
-        delete m_gdt;
-        m_gdt = NULL;
-    }
+    delete m_gdt;
+    m_gdt = NULL;
 
     m_rssList.clear();
 
     qDeleteAll(m_videos);
     m_videos.clear();
-
-    cleanCacheDir();
-
-    gCoreContext->removeListener(this);
-}
-
-void NetTree::cleanCacheDir()
-{
-    QString cache = QString("%1/cache/netvision-thumbcache")
-                       .arg(GetConfDir());
-    QDir cacheDir(cache);
-    QStringList thumbs = cacheDir.entryList(QDir::Files);
-
-    for (QStringList::const_iterator i = thumbs.end() - 1;
-            i != thumbs.begin() - 1; --i)
-    {
-        QString filename = QString("%1/%2").arg(cache).arg(*i);
-        LOG(VB_GENERAL, LOG_DEBUG, QString("Deleting file %1").arg(filename));
-        QFileInfo fi(filename);
-        QDateTime lastmod = fi.lastModified();
-        if (lastmod.addDays(7) < MythDate::current())
-            QFile::remove(filename);
-    }
 }
 
 void NetTree::loadData(void)
@@ -451,25 +399,6 @@ bool NetTree::keyPressEvent(QKeyEvent *event)
     return handled;
 }
 
-void NetTree::createBusyDialog(QString title)
-{
-    if (m_busyPopup)
-        return;
-
-    QString message = title;
-
-    m_busyPopup = new MythUIBusyDialog(message, m_popupStack,
-            "nettreebusydialog");
-
-    if (m_busyPopup->Create())
-        m_popupStack->AddScreen(m_busyPopup);
-    else
-    {
-        delete m_busyPopup;
-        m_busyPopup = NULL;
-    }
-}
-
 void NetTree::showMenu(void)
 {
     QString label = tr("Playback/Download Options");
@@ -734,251 +663,21 @@ int NetTree::AddFileNode(MythGenericTree *where_to_add, ResultItem *video)
     return 1;
 }
 
-void NetTree::streamWebVideo()
+ResultItem* NetTree::GetStreamItem()
 {
-    ResultItem *item;
-
-    if (m_type == DLG_TREE)
-        item = qVariantValue<ResultItem *>(m_siteMap->GetCurrentNode()->GetData());
-    else
-    {
-        MythGenericTree *node = GetNodePtrFromButton(m_siteButtonList->GetItemCurrent());
-
-        if (!node)
-            return;
-
-        item = qVariantValue<ResultItem *>(node->GetData());
-    }
-
-    if (!item)
-        return;
-
-    if (!item->GetDownloadable())
-    {
-        showWebVideo();
-        return;
-    }
-
-    GetMythMainWindow()->HandleMedia(
-        "Internal", item->GetMediaURL(),
-        item->GetDescription(), item->GetTitle(), item->GetSubtitle(),
-        QString(), item->GetSeason(), item->GetEpisode(), QString(),
-        item->GetTime().toInt(), item->GetDate().toString("yyyy"));
-}
-
-void NetTree::showWebVideo()
-{
-    ResultItem *item;
-
-    if (m_type == DLG_TREE)
-        item = qVariantValue<ResultItem *>(m_siteMap->GetCurrentNode()->GetData());
-    else
-    {
-        MythGenericTree *node = GetNodePtrFromButton(m_siteButtonList->GetItemCurrent());
-
-        if (!node)
-            return;
-
-        item = qVariantValue<ResultItem *>(node->GetData());
-    }
-
-    if (!item)
-        return;
-
-    if (!item->GetPlayer().isEmpty())
-    {
-        QString cmd = item->GetPlayer();
-        QStringList args = item->GetPlayerArguments();
-        if (!args.size())
-        {
-            args += item->GetMediaURL();
-            if (!args.size())
-                args += item->GetURL();
-        }
-        else
-        {
-            args.replaceInStrings("%DIR%", QString(GetConfDir() + "/MythNetvision"));
-            args.replaceInStrings("%MEDIAURL%", item->GetMediaURL());
-            args.replaceInStrings("%URL%", item->GetURL());
-            args.replaceInStrings("%TITLE%", item->GetTitle());
-        }
-        QString playerCommand = cmd + " " + args.join(" ");
-
-        myth_system(playerCommand);
-    }
-    else
-    {
-        QString url = item->GetURL();
-
-        LOG(VB_GENERAL, LOG_DEBUG, QString("Web URL = %1").arg(url));
-
-        if (url.isEmpty())
-            return;
-
-        QString browser = gCoreContext->GetSetting("WebBrowserCommand", "");
-        QString zoom = gCoreContext->GetSetting("WebBrowserZoomLevel", "1.0");
-
-        if (browser.isEmpty())
-        {
-            ShowOkPopup(tr("No browser command set! MythNetTree needs MythBrowser "
-                           "installed to display the video."));
-            return;
-        }
-
-        if (browser.toLower() == "internal")
-        {
-            GetMythMainWindow()->HandleMedia("WebBrowser", url);
-            return;
-        }
-        else
-        {
-            QString cmd = browser;
-            cmd.replace("%ZOOM%", zoom);
-            cmd.replace("%URL%", url);
-            cmd.replace('\'', "%27");
-            cmd.replace("&","\\&");
-            cmd.replace(";","\\;");
-
-            GetMythMainWindow()->AllowInput(false);
-            myth_system(cmd, kMSDontDisableDrawing);
-            GetMythMainWindow()->AllowInput(true);
-            return;
-        }
-    }
-}
-
-void NetTree::doPlayVideo(QString filename)
-{
-    ResultItem *item;
-    if (m_type == DLG_TREE)
-        item = qVariantValue<ResultItem *>(m_siteMap->GetCurrentNode()->GetData());
-    else
-    {
-        MythGenericTree *node = GetNodePtrFromButton(m_siteButtonList->GetItemCurrent());
-
-        if (!node)
-            return;
-
-        item = qVariantValue<ResultItem *>(node->GetData());
-    }
-
-    if (!item)
-        return;
-
-    GetMythMainWindow()->HandleMedia("Internal", filename);
-}
-
-void NetTree::slotDeleteVideo()
-{
-    QString message = tr("Are you sure you want to delete this file?");
-
-    MythConfirmationDialog *confirmdialog =
-            new MythConfirmationDialog(m_popupStack,message);
-
-    if (confirmdialog->Create())
-    {
-        m_popupStack->AddScreen(confirmdialog);
-        connect(confirmdialog, SIGNAL(haveResult(bool)),
-                SLOT(doDeleteVideo(bool)));
-    }
-    else
-        delete confirmdialog;
-}
-
-void NetTree::doDeleteVideo(bool remove)
-{
-    if (!remove)
-        return;
-
-    ResultItem *item;
-    if (m_type == DLG_TREE)
-        item = qVariantValue<ResultItem *>(m_siteMap->GetCurrentNode()->GetData());
-    else
-    {
-        MythGenericTree *node = GetNodePtrFromButton(m_siteButtonList->GetItemCurrent());
-
-        if (!node)
-            return;
-
-        item = qVariantValue<ResultItem *>(node->GetData());
-    }
-
-    if (!item)
-        return;
-
-    QString filename = GetDownloadFilename(item->GetTitle(),
-                                          item->GetMediaURL());
-
-    if (filename.startsWith("myth://"))
-        RemoteFile::DeleteFile(filename);
-    else
-    {
-        QFile file(filename);
-        file.remove();
-    }
-}
+    ResultItem *item = NULL;
 
-void NetTree::doDownloadAndPlay()
-{
-    ResultItem *item;
     if (m_type == DLG_TREE)
         item = qVariantValue<ResultItem *>(m_siteMap->GetCurrentNode()->GetData());
     else
     {
-        MythGenericTree *node = GetNodePtrFromButton(m_siteButtonList->GetItemCurrent());
-
-        if (!node)
-            return;
-
-        item = qVariantValue<ResultItem *>(node->GetData());
-    }
-
-    if (!item)
-        return;
-
-    QString baseFilename = GetDownloadFilename(item->GetTitle(),
-                                          item->GetMediaURL());
-
-    QString finalFilename = generate_file_url("Default",
-                              gCoreContext->GetMasterHostName(),
-                              baseFilename);
-
-    LOG(VB_GENERAL, LOG_INFO, QString("Downloading %1 to %2")
-            .arg(item->GetMediaURL()) .arg(finalFilename));
-
-    // Does the file already exist?
-    bool exists = RemoteFile::Exists(finalFilename);
-
-    if (exists)
-    {
-        doPlayVideo(finalFilename);
-        return;
-    }
-    else
-        DownloadVideo(item->GetMediaURL(), baseFilename);
-}
-
-void NetTree::DownloadVideo(QString url, QString dest)
-{
-    initProgressDialog();
-    m_downloadFile = RemoteDownloadFile(url, "Default", dest);
-}
-
-void NetTree::initProgressDialog()
-{
-    QString message = tr("Downloading Video...");
-    m_progressDialog = new MythUIProgressDialog(message,
-               m_popupStack, "videodownloadprogressdialog");
+        MythGenericTree *node =
+            GetNodePtrFromButton(m_siteButtonList->GetItemCurrent());
 
-    if (m_progressDialog->Create())
-    {
-        m_popupStack->AddScreen(m_progressDialog, false);
-    }
-    else
-    {
-        delete m_progressDialog;
-        m_progressDialog = NULL;
+        if (node)
+            item = qVariantValue<ResultItem *>(node->GetData());
     }
+    return item;
 }
 
 void NetTree::slotItemChanged()
@@ -1148,7 +847,7 @@ void NetTree::runTreeEditor()
 
     if (treeedit->Create())
     {
-        connect(treeedit, SIGNAL(itemsChanged()), this,
+        connect(treeedit, SIGNAL(ItemsChanged()), this,
                        SLOT(doTreeRefresh()));
 
         mainStack->AddScreen(treeedit);
@@ -1167,7 +866,7 @@ void NetTree::runRSSEditor()
 
     if (rssedit->Create())
     {
-        connect(rssedit, SIGNAL(itemsChanged()), this,
+        connect(rssedit, SIGNAL(ItemsChanged()), this,
                        SLOT(updateRSS()));
 
         mainStack->AddScreen(rssedit);
@@ -1208,7 +907,7 @@ void NetTree::updateRSS()
         return;
 
     QString title(tr("Updating RSS.  This could take a while..."));
-    createBusyDialog(title);
+    CreateBusyDialog(title);
 
     RSSManager *rssMan = new RSSManager();
     connect(rssMan, SIGNAL(finished()), this,
@@ -1223,7 +922,7 @@ void NetTree::updateTrees()
         return;
 
     QString title(tr("Updating Site Maps.  This could take a while..."));
-    createBusyDialog(title);
+    CreateBusyDialog(title);
     m_gdt->refreshAll();
 }
 
@@ -1288,58 +987,8 @@ void NetTree::customEvent(QEvent *event)
             }
         }
     }
-    else if (event->type() == kGrabberUpdateEventType)
+    else
     {
-        doTreeRefresh();
+      NetBase::customEvent(event);
     }
-    else if ((MythEvent::Type)(event->type()) == MythEvent::MythEventMessage)
-    {
-        MythEvent *me = (MythEvent *)event;
-        QStringList tokens = me->Message().split(" ", QString::SkipEmptyParts);
-
-        if (tokens.isEmpty())
-            return;
-
-        if (tokens[0] == "DOWNLOAD_FILE")
-        {
-            QStringList args = me->ExtraDataList();
-            if ((tokens.size() != 2) ||
-                (args[1] != m_downloadFile))
-                return;
-
-            if (tokens[1] == "UPDATE")
-            {
-                QString message = tr("Downloading Video...\n"
-                                     "(%1 of %2 MB)")
-                                     .arg(QString::number(args[2].toInt() / 1024.0 / 1024.0, 'f', 2))
-                                     .arg(QString::number(args[3].toInt() / 1024.0 / 1024.0, 'f', 2));
-                m_progressDialog->SetMessage(message);
-                m_progressDialog->SetTotal(args[3].toInt());
-                m_progressDialog->SetProgress(args[2].toInt());
-            }
-            else if (tokens[1] == "FINISHED")
-            {
-                int fileSize  = args[2].toInt();
-                int errorCode = args[4].toInt();
-
-                if (m_progressDialog)
-                    m_progressDialog->Close();
-
-                QFileInfo file(m_downloadFile);
-                if ((m_downloadFile.startsWith("myth://")))
-                {
-                    if ((errorCode == 0) &&
-                        (fileSize > 0))
-                    {
-                        doPlayVideo(m_downloadFile);
-                    }
-                    else
-                    {
-                        ShowOkPopup(tr("Error downloading video to backend."));
-                    }
-                }
-            }
-        }
-    }
-
 }
diff --git a/mythplugins/mythnetvision/mythnetvision/nettree.h b/mythplugins/mythnetvision/mythnetvision/nettree.h
index b67409c..e6d9d13 100644
--- a/mythplugins/mythnetvision/mythnetvision/nettree.h
+++ b/mythplugins/mythnetvision/mythnetvision/nettree.h
@@ -1,6 +1,8 @@
 #ifndef NETTREE_H
 #define NETTREE_H
 
+#include "netbase.h"
+
 // libmythui
 #include <mythuibuttonlist.h>
 #include <mythuibuttontree.h>
@@ -36,9 +38,7 @@ enum NodeOrder {
     kOrderItem
 };
 
-class MythUIBusyDialog;
-
-class NetTree : public MythScreenType
+class NetTree : public NetBase
 {
   Q_OBJECT
 
@@ -51,14 +51,11 @@ class NetTree : public MythScreenType
 
     void populateResultList(ResultItem::resultList list);
 
-  public slots:
-
   protected:
-    void createBusyDialog(QString title);
+    virtual ResultItem *GetStreamItem();
 
   private:
     virtual void Load();
-    virtual void Init();
 
     void fillTree(void);
     void SetCurrentNode(MythGenericTree *node);
@@ -73,10 +70,6 @@ class NetTree : public MythScreenType
                           QString dirthumb,
                           QList<ResultItem*> videos);
 
-    void cleanCacheDir(void);
-
-    void initProgressDialog();
-
     MythGenericTree *AddDirNode(
                     MythGenericTree *where_to_add,
                     QString name, QString thumbnail);
@@ -97,21 +90,7 @@ class NetTree : public MythScreenType
 
     MythUIText         *m_noSites;
 
-    MythUIImage        *m_thumbImage;
-
-    MythUIStateType    *m_downloadable;
-
-    MythUIBusyDialog   *m_busyPopup;
-
-    MythDialogBox        *m_menuPopup;
-    MythScreenStack      *m_popupStack;
-    MythUIProgressDialog *m_progressDialog;
-
-    MetadataImageDownload *m_imageDownload;
     GrabberDownloadThread *m_gdt;
-    QString               m_downloadFile;
-
-    GrabberScript::scriptList m_grabberList;
     RSSSite::rssList m_rssList;
 
     DialogType          m_type;
@@ -121,10 +100,6 @@ class NetTree : public MythScreenType
     bool                m_treeAutoUpdate;
 
   private slots:
-    void streamWebVideo(void);
-    void showWebVideo(void);
-    void doDownloadAndPlay(void);
-    void doPlayVideo(QString filename);
     void showMenu(void);
     MythMenu* createShowViewMenu(void);
     MythMenu* createShowManageMenu(void);
@@ -142,16 +117,12 @@ class NetTree : public MythScreenType
     void toggleRSSUpdates();
     void toggleTreeUpdates();
 
-    void slotDeleteVideo(void);
-    void doDeleteVideo(bool remove);
-
     void slotItemChanged();
 
     void doTreeRefresh();
     void TreeRefresh();
 
     void customEvent(QEvent *levent);
-    void DownloadVideo(QString url, QString dest);
 
   protected:
     static const QString RSSNode;
diff --git a/mythplugins/mythnetvision/mythnetvision/searcheditor.cpp b/mythplugins/mythnetvision/mythnetvision/searcheditor.cpp
index b8f6512..6d58681 100644
--- a/mythplugins/mythnetvision/mythnetvision/searcheditor.cpp
+++ b/mythplugins/mythnetvision/mythnetvision/searcheditor.cpp
@@ -1,246 +1,28 @@
-#include <QImageReader>
-
-// MythTV headers
-#include <mythuibuttonlist.h>
-#include <mythmainwindow.h>
-#include <mythdialogbox.h>
-#include <mythcontext.h>
-#include <mythdbcon.h>
-#include <mythdirs.h>
-#include <netutils.h>
-#include <netgrabbermanager.h>
-
-// Search headers
 #include "searcheditor.h"
-#include "netcommon.h"
-
-#define LOC      QString("SearchEditor: ")
-#define LOC_WARN QString("SearchEditor, Warning: ")
-#define LOC_ERR  QString("SearchEditor, Error: ")
-
-/** \brief Creates a new SearchEditor Screen
- *  \param parent Pointer to the screen stack
- *  \param name The name of the window
- */
-SearchEditor::SearchEditor(MythScreenStack *parent,
-                          const QString &name) :
-    MythScreenType(parent, name),
-    m_grabbers(NULL),
-    m_busyPopup(NULL),
-    m_popupStack(),
-    m_manager(NULL),
-    m_reply(NULL),
-    m_changed(false)
-{
-    m_popupStack = GetMythMainWindow()->GetStack("popup stack");
-}
-
-SearchEditor::~SearchEditor()
-{
-    qDeleteAll(m_grabberList);
-    m_grabberList.clear();
-
-    if (m_manager)
-    {
-        m_manager->disconnect();
-        m_manager->deleteLater();
-        m_manager = NULL;
-    }
-
-    if (m_changed)
-        emit itemsChanged();
-}
-
-bool SearchEditor::Create(void)
-{
-    // Load the theme for this screen
-    bool foundtheme = LoadWindowFromXML("netvision-ui.xml", "treeeditor", this);
-
-    if (!foundtheme)
-        return false;
-
-    bool err = false;
-    UIUtilE::Assign(this, m_grabbers, "grabbers", &err);
-
-    if (err)
-    {
-        LOG(VB_GENERAL, LOG_ERR, "Cannot load screen 'treeeditor'");
-        return false;
-    }
-
-    connect(m_grabbers, SIGNAL(itemClicked(MythUIButtonListItem*)),
-            this, SLOT(toggleItem(MythUIButtonListItem*)));
-
-    BuildFocusList();
-
-    loadData();
-
-    return true;
-}
-
-void SearchEditor::loadData()
-{
-    QString msg = tr("Querying Backend for Internet Content Sources...");
-    createBusyDialog(msg);
-
-    m_manager = new QNetworkAccessManager();
-
-    connect(m_manager, SIGNAL(finished(QNetworkReply*)),
-                       SLOT(slotLoadedData(void)));
-
-    QUrl url(GetMythXMLURL() + "GetInternetSources");
-    m_reply = m_manager->get(QNetworkRequest(url));
-}
+#include <netutils.h>
 
-void SearchEditor::slotLoadedData()
+SearchEditor::SearchEditor(MythScreenStack *parent, const QString &name)
+    : NetEditorBase(parent, name)
 {
-    QDomDocument doc;
-    doc.setContent(m_reply->readAll());
-    QDomElement root = doc.documentElement();
-    QDomElement content = root.firstChildElement("InternetContent");
-    QDomElement grabber = content.firstChildElement("grabber");
-
-    while (!grabber.isNull())
-    {
-        QString title, author, image, description, type, commandline;
-        double version;
-        bool search = false;
-        bool tree = false;
-
-        title = grabber.firstChildElement("name").text();
-        commandline = grabber.firstChildElement("command").text();
-        author = grabber.firstChildElement("author").text();
-        image = grabber.firstChildElement("thumbnail").text();
-        type = grabber.firstChildElement("type").text();
-        description = grabber.firstChildElement("description").text();
-        version = grabber.firstChildElement("version").text().toDouble();
-
-        QString treestring = grabber.firstChildElement("tree").text();
-
-        if (!treestring.isEmpty() && (treestring.toLower() == "true" ||
-            treestring.toLower() == "yes" || treestring == "1"))
-            tree = true;
-
-        QString searchstring = grabber.firstChildElement("search").text();
-        
-        if (!searchstring.isEmpty() && (searchstring.toLower() == "true" ||
-            searchstring.toLower() == "yes" || searchstring == "1"))
-            search = true;
-
-        if (type.toLower() == "video" && search)
-        {
-            LOG(VB_GENERAL, LOG_INFO,
-                QString("Found Search Source %1...").arg(title));
-            m_grabberList.append(new GrabberScript(title, image, VIDEO_FILE, author,
-                       search, tree, description, commandline, version));
-        }
-
-        grabber = grabber.nextSiblingElement("grabber");
-    }
-
-    parsedData();
 }
 
-void SearchEditor::parsedData()
+bool SearchEditor::InsertInDB(GrabberScript *script)
 {
-    if (m_busyPopup)
-    {
-        m_busyPopup->Close();
-        m_busyPopup = NULL;
-    }
-
-    fillGrabberButtonList();
+    return insertSearchInDB(script, VIDEO_FILE);
 }
 
-void SearchEditor::createBusyDialog(QString title)
+bool SearchEditor::RemoveFromDB(GrabberScript *script)
 {
-    if (m_busyPopup)
-        return;
-
-    QString message = title;
-
-    m_busyPopup = new MythUIBusyDialog(message, m_popupStack,
-            "mythvideobusydialog");
-
-    if (m_busyPopup->Create())
-        m_popupStack->AddScreen(m_busyPopup);
-    else
-    {
-        delete m_busyPopup;
-        m_busyPopup = NULL;
-    }
+    return removeSearchFromDB(script);
 }
 
-bool SearchEditor::keyPressEvent(QKeyEvent *event)
+bool SearchEditor::FindGrabberInDB(const QString &filename)
 {
-    if (GetFocusWidget()->keyPressEvent(event))
-        return true;
-
-    bool handled = false;
-    QStringList actions;
-    handled = GetMythMainWindow()->TranslateKeyPress("Internet Video", event, actions);
-
-    if (!handled && MythScreenType::keyPressEvent(event))
-        handled = true;
-
-    return handled;
+    return findSearchGrabberInDB(filename, VIDEO_FILE);
 }
 
-void SearchEditor::fillGrabberButtonList()
+bool SearchEditor::Matches(bool search, bool /*tree*/)
 {
-    for (GrabberScript::scriptList::iterator i = m_grabberList.begin();
-            i != m_grabberList.end(); ++i)
-    {
-        MythUIButtonListItem *item =
-                    new MythUIButtonListItem(m_grabbers, (*i)->GetTitle());
-        if (item)
-        {
-            item->SetText((*i)->GetTitle(), "title");
-            item->SetData(qVariantFromValue(*i));
-            QString img = (*i)->GetImage();
-            QString thumb;
-
-            if (!img.startsWith("/") && !img.isEmpty())
-                thumb = QString("%1mythnetvision/icons/%2").arg(GetShareDir())
-                            .arg((*i)->GetImage());
-            else
-                thumb = img;
-
-            item->SetImage(thumb);
-            item->setCheckable(true);
-            item->setChecked(MythUIButtonListItem::NotChecked);
-            QFileInfo fi((*i)->GetCommandline());
-
-            if (findSearchGrabberInDB(fi.fileName(), VIDEO_FILE))
-                item->setChecked(MythUIButtonListItem::FullChecked);
-        }
-    }
-}
-
-void SearchEditor::toggleItem(MythUIButtonListItem *item)
-{
-    if (!item)
-        return;
-
-    GrabberScript *script = qVariantValue<GrabberScript *>(item->GetData());
-
-    if (!script)
-        return;
-
-    bool checked = (item->state() == MythUIButtonListItem::FullChecked);
-
-    if (!checked)
-    {
-        if (insertSearchInDB(script, VIDEO_FILE))
-        {
-            m_changed = true;
-            item->setChecked(MythUIButtonListItem::FullChecked);
-        }
-    }
-    else if (removeSearchFromDB(script))
-    {
-        m_changed = true;
-        item->setChecked(MythUIButtonListItem::NotChecked);
-    }
+    return search;
 }
 
diff --git a/mythplugins/mythnetvision/mythnetvision/searcheditor.h b/mythplugins/mythnetvision/mythnetvision/searcheditor.h
index 9fc05ad..0dca2c0 100644
--- a/mythplugins/mythnetvision/mythnetvision/searcheditor.h
+++ b/mythplugins/mythnetvision/mythnetvision/searcheditor.h
@@ -1,57 +1,24 @@
 #ifndef SEARCHEDITOR_H
 #define SEARCHEDITOR_H
 
-// Qt headers
-#include <QString>
-#include <QNetworkAccessManager>
-#include <QNetworkReply>
-
-// MythTV headers
-#include <mythscreentype.h>
-#include <netgrabbermanager.h>
-#include <mythscreentype.h>
-#include <mythprogressdialog.h>
-
-class MythUIButtonList;
+#include "neteditorbase.h"
 
 /** \class SearchEdit
  *  \brief Modify subscribed search grabbers.
  */
-class SearchEditor : public MythScreenType
+class SearchEditor : public NetEditorBase
 {
     Q_OBJECT
 
   public:
     SearchEditor(MythScreenStack *parent,
                const QString &name = "SearchEditor");
-   ~SearchEditor();
-
-    bool Create(void);
-    bool keyPressEvent(QKeyEvent*);
-
-  private:
-    void loadData(void);
-    void fillGrabberButtonList();
-    void parsedData();
-
-    GrabberScript::scriptList m_grabberList;
-    MythUIButtonList *m_grabbers;
-    MythUIBusyDialog *m_busyPopup;
-    MythScreenStack  *m_popupStack;
-
-    QNetworkAccessManager *m_manager;
-    QNetworkReply         *m_reply;
-    bool                   m_changed;
 
   protected:
-    void createBusyDialog(QString title);
-
-  signals:
-    void itemsChanged(void);
-
-  public slots:
-    void toggleItem(MythUIButtonListItem *item);
-    void slotLoadedData(void);
+    bool InsertInDB(GrabberScript *script);
+    bool RemoveFromDB(GrabberScript *script);
+    bool FindGrabberInDB(const QString &filename);
+    bool Matches(bool search, bool tree);
 };
 
 #endif /* SEARCHEDITOR_H */
diff --git a/mythplugins/mythnetvision/mythnetvision/treeeditor.cpp b/mythplugins/mythnetvision/mythnetvision/treeeditor.cpp
index 85d84a8..9d0a86d 100644
--- a/mythplugins/mythnetvision/mythnetvision/treeeditor.cpp
+++ b/mythplugins/mythnetvision/mythnetvision/treeeditor.cpp
@@ -1,261 +1,32 @@
-#include <QDomDocument>
-#include <QDateTime>
-#include <QImageReader>
-
-// MythTV headers
-#include <mythuibutton.h>
-#include <mythuibuttonlist.h>
-#include <mythmainwindow.h>
-#include <mythdialogbox.h>
-#include <mythdate.h>
-#include <mythcontext.h>
-#include <mythdbcon.h>
-#include <mythdirs.h>
-#include <netutils.h>
-
-// Tree headers
 #include "treeeditor.h"
-#include "netcommon.h"
-
-#define LOC      QString("TreeEditor: ")
-#define LOC_WARN QString("TreeEditor, Warning: ")
-#define LOC_ERR  QString("TreeEditor, Error: ")
-
-/** \brief Creates a new TreeEditor Screen
- *  \param parent Pointer to the screen stack
- *  \param name The name of the window
- */
-TreeEditor::TreeEditor(MythScreenStack *parent,
-                          const QString &name) :
-    MythScreenType(parent, name),
-    m_lock(QMutex::Recursive),
-    m_grabbers(NULL),
-    m_busyPopup(NULL),
-    m_popupStack(),
-    m_manager(NULL),
-    m_reply(NULL),
-    m_changed(false)
-{
-    m_popupStack = GetMythMainWindow()->GetStack("popup stack");
-}
-
-TreeEditor::~TreeEditor()
-{
-    QMutexLocker locker(&m_lock);
-
-    if (m_manager)
-    {
-        m_manager->disconnect();
-        m_manager->deleteLater();
-        m_manager = NULL;
-    }
-
-    qDeleteAll(m_grabberList);
-    m_grabberList.clear();
-
-    if (m_changed)
-        emit itemsChanged();
-}
-
-bool TreeEditor::Create(void)
-{
-    QMutexLocker locker(&m_lock);
-
-    // Load the theme for this screen
-    bool foundtheme = LoadWindowFromXML("netvision-ui.xml", "treeeditor", this);
-
-    if (!foundtheme)
-        return false;
-
-    bool err = false;
-    UIUtilE::Assign(this, m_grabbers, "grabbers", &err);
-
-    if (err)
-    {
-        LOG(VB_GENERAL, LOG_ERR, "Cannot load screen 'treeeditor'");
-        return false;
-    }
-
-    connect(m_grabbers, SIGNAL(itemClicked(MythUIButtonListItem*)),
-            this, SLOT(toggleItem(MythUIButtonListItem*)));
-
-    BuildFocusList();
-
-    loadData();
-
-    return true;
-}
-
-void TreeEditor::loadData()
-{
-    QString msg = tr("Querying Backend for Internet Content Sources...");
-    createBusyDialog(msg);
-
-    m_manager = new QNetworkAccessManager();
-
-    connect(m_manager, SIGNAL(finished(QNetworkReply*)),
-                       SLOT(slotLoadedData(void)));
-
-    QUrl url(GetMythXMLURL() + "GetInternetSources");
-    m_reply = m_manager->get(QNetworkRequest(url));
-}
+#include <netutils.h>
 
-bool TreeEditor::keyPressEvent(QKeyEvent *event)
+TreeEditor::TreeEditor(MythScreenStack *parent, const QString &name)
+    : NetEditorBase(parent, name)
 {
-    if (GetFocusWidget()->keyPressEvent(event))
-        return true;
-
-    bool handled = false;
-    QStringList actions;
-    handled = GetMythMainWindow()->TranslateKeyPress("Internet Video", event, actions);
-
-    if (!handled && MythScreenType::keyPressEvent(event))
-        handled = true;
-
-    return handled;
 }
 
-void TreeEditor::slotLoadedData()
- {
-    QDomDocument doc;
-    doc.setContent(m_reply->readAll());
-    QDomElement root = doc.documentElement();
-    QDomElement content = root.firstChildElement("InternetContent");
-    QDomElement grabber = content.firstChildElement("grabber");
-
-    while (!grabber.isNull())
-    {
-        QString title, author, image, description, type, commandline;
-        double version;
-        bool search = false;
-        bool tree = false;
-
-        title = grabber.firstChildElement("name").text();
-        commandline = grabber.firstChildElement("command").text();
-        author = grabber.firstChildElement("author").text();
-        image = grabber.firstChildElement("thumbnail").text();
-        type = grabber.firstChildElement("type").text();
-        description = grabber.firstChildElement("description").text();
-        version = grabber.firstChildElement("version").text().toDouble();
-
-        QString treestring = grabber.firstChildElement("tree").text();
-
-        if (!treestring.isEmpty() && (treestring.toLower() == "true" ||
-            treestring.toLower() == "yes" || treestring == "1"))
-            tree = true;
-
-        QString searchstring = grabber.firstChildElement("search").text();
-
-        if (!searchstring.isEmpty() && (searchstring.toLower() == "true" ||
-            searchstring.toLower() == "yes" || searchstring == "1"))
-            search = true;
-
-        if (type.toLower() == "video" && tree)
-        {
-            LOG(VB_GENERAL, LOG_INFO,
-                QString("Found Browseable Source %1...").arg(title));
-            m_grabberList.append(new GrabberScript(title, image, VIDEO_FILE, author,
-                        search, tree, description, commandline, version));
-        }
-
-        grabber = grabber.nextSiblingElement("grabber");
-    }
-
-    parsedData();
- }
-
-void TreeEditor::parsedData()
+bool TreeEditor::InsertInDB(GrabberScript *script)
 {
-    if (m_busyPopup)
-    {
-        m_busyPopup->Close();
-        m_busyPopup = NULL;
-    }
-
-    fillGrabberButtonList();
+    return insertTreeInDB(script, VIDEO_FILE);
 }
 
-void TreeEditor::createBusyDialog(QString title)
+bool TreeEditor::RemoveFromDB(GrabberScript *script)
 {
-    if (m_busyPopup)
-        return;
+    bool removed = removeTreeFromDB(script);
 
-    QString message = title;
+    if (removed && !isTreeInUse(script->GetCommandline()))
+        clearTreeItems(script->GetCommandline());
 
-    m_busyPopup = new MythUIBusyDialog(message, m_popupStack,
-            "mythvideobusydialog");
-
-    if (m_busyPopup->Create())
-        m_popupStack->AddScreen(m_busyPopup);
-    else
-    {
-        delete m_busyPopup;
-        m_busyPopup = NULL;
-    }
+    return removed;
 }
 
-void TreeEditor::fillGrabberButtonList()
+bool TreeEditor::FindGrabberInDB(const QString &filename)
 {
-    QMutexLocker locker(&m_lock);
-
-    for (GrabberScript::scriptList::iterator i = m_grabberList.begin();
-            i != m_grabberList.end(); ++i)
-    {
-        MythUIButtonListItem *item =
-                    new MythUIButtonListItem(m_grabbers, (*i)->GetTitle());
-        if (item)
-        {
-            item->SetText((*i)->GetTitle(), "title");
-            item->SetData(qVariantFromValue(*i));
-            QString img = (*i)->GetImage();
-            QString thumb;
-            if (!img.startsWith("/") && !img.isEmpty())
-                thumb = QString("%1mythnetvision/icons/%2").arg(GetShareDir())
-                                .arg((*i)->GetImage());
-            else
-                thumb = img;
-            item->SetImage(thumb);
-            item->setCheckable(true);
-            item->setChecked(MythUIButtonListItem::NotChecked);
-            QFileInfo fi((*i)->GetCommandline());
-
-            if (findTreeGrabberInDB(fi.fileName(), VIDEO_FILE))
-                item->setChecked(MythUIButtonListItem::FullChecked);
-        }
-    }
+    return findTreeGrabberInDB(filename, VIDEO_FILE);
 }
 
-void TreeEditor::toggleItem(MythUIButtonListItem *item)
+bool TreeEditor::Matches(bool /*search*/, bool tree)
 {
-    QMutexLocker locker(&m_lock);
-
-    if (!item)
-        return;
-
-    GrabberScript *script = qVariantValue<GrabberScript *>(item->GetData());
-
-    if (!script)
-        return;
-
-    bool checked = (item->state() == MythUIButtonListItem::FullChecked);
-
-    if (!checked)
-    {
-        if (insertTreeInDB(script, VIDEO_FILE))
-        {
-            m_changed = true;
-            item->setChecked(MythUIButtonListItem::FullChecked);
-        }
-    }
-    else
-    {
-        if (removeTreeFromDB(script))
-        {
-            if (!isTreeInUse(script->GetCommandline()))
-                clearTreeItems(script->GetCommandline());
-            m_changed = true;
-            item->setChecked(MythUIButtonListItem::NotChecked);
-        }
-    }
+    return tree;
 }
-
diff --git a/mythplugins/mythnetvision/mythnetvision/treeeditor.h b/mythplugins/mythnetvision/mythnetvision/treeeditor.h
index 69509dc..d6e703c 100644
--- a/mythplugins/mythnetvision/mythnetvision/treeeditor.h
+++ b/mythplugins/mythnetvision/mythnetvision/treeeditor.h
@@ -1,61 +1,24 @@
 #ifndef TREEEDITOR_H
 #define TREEEDITOR_H
 
-// Qt headers
-#include <QMutex>
-#include <QString>
-#include <QDomDocument>
-#include <QNetworkRequest>
-#include <QNetworkReply>
-#include <QNetworkAccessManager>
-
-// MythTV headers
-#include <mythscreentype.h>
-#include <netgrabbermanager.h>
-#include <mythscreentype.h>
-#include <mythprogressdialog.h>
-
-class MythUIButtonList;
+#include "neteditorbase.h"
 
 /** \class TreeEdit
  *  \brief Modify subscribed trees.
  */
-class TreeEditor : public MythScreenType
+class TreeEditor : public NetEditorBase
 {
     Q_OBJECT
 
   public:
     TreeEditor(MythScreenStack *parent,
                const QString &name = "TreeEditor");
-   ~TreeEditor();
-
-    bool Create(void);
-    bool keyPressEvent(QKeyEvent*);
-
-  private:
-    void loadData(void);
-    void fillGrabberButtonList();
-    mutable QMutex  m_lock;
-    void parsedData();
-
-    GrabberScript::scriptList m_grabberList;
-    MythUIButtonList *m_grabbers;
-    MythUIBusyDialog *m_busyPopup;
-    MythScreenStack  *m_popupStack;
-
-    QNetworkAccessManager *m_manager;
-    QNetworkReply         *m_reply;
-    bool m_changed;
 
   protected:
-    void createBusyDialog(QString title);
-
-  signals:
-    void itemsChanged(void);
-
-  public slots:
-    void slotLoadedData(void);
-    void toggleItem(MythUIButtonListItem *item);
+    bool InsertInDB(GrabberScript *script);
+    bool RemoveFromDB(GrabberScript *script);
+    bool FindGrabberInDB(const QString &filename);
+    bool Matches(bool search, bool tree);
 };
 
 #endif /* TREEEDITOR_H */
-- 
1.7.10.2

