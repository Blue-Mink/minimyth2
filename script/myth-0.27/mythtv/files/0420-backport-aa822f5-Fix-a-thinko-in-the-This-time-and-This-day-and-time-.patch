From aa822f562b24ca5d199941835e33b78eed98a94d Mon Sep 17 00:00:00 2001
From: David Engel <dengel@mythtv.org>
Date: Tue, 17 Jun 2014 16:31:44 -0500
Subject: [PATCH] Fix a thinko in the 'This time' and 'This day and time'
 filters.

This is a rework of commit 762e630e from master for the fixes/0.27
branch.  It accomplishes the same fix if needed, but does so without
updating the schema.

Fixes #12175
---
 mythtv/programs/mythbackend/scheduler.cpp |   41 +++++++++++++++++++++++++++++
 mythtv/programs/mythbackend/scheduler.h   |    1 +
 2 files changed, 42 insertions(+)

diff --git a/mythtv/programs/mythbackend/scheduler.cpp b/mythtv/programs/mythbackend/scheduler.cpp
index 2e46421..13b637c 100644
--- a/mythtv/programs/mythbackend/scheduler.cpp
+++ b/mythtv/programs/mythbackend/scheduler.cpp
@@ -1766,6 +1766,45 @@ bool Scheduler::IsBusyRecording(const RecordingInfo *rcinfo)
     return false;
 }
 
+void Scheduler::RecordFilterFixups(void)
+{
+    MSqlQuery query(dbConn);
+
+    // Fix the 'This time' and 'This day and time' filters.  Since we
+    // can't do a proper schema update in the fixes branch, check
+    // every time we startup and do the fix if needed.
+
+    query.prepare("SELECT filterid FROM recordfilter "
+                  "WHERE filterid = 9 AND clause LIKE '%BETWEEN%'");
+    if (!query.exec())
+        MythDB::DBError("RecordFilterFixupsCheck", query);
+
+    if (query.next())
+        return;
+
+    LOG(VB_GENERAL, LOG_NOTICE, "Fixing 'This [day and] time' filters");
+
+    // Fix this time filter
+    query.prepare(
+"REPLACE INTO recordfilter (filterid, description, clause, newruledefault) "
+"  VALUES (8, 'This time', 'ABS(TIMESTAMPDIFF(MINUTE, CONVERT_TZ("
+"  ADDTIME(RECTABLE.startdate, RECTABLE.starttime), ''Etc/UTC'', ''SYSTEM''), "
+"  CONVERT_TZ(program.starttime, ''Etc/UTC'', ''SYSTEM''))) MOD 1440 "
+"  NOT BETWEEN 11 AND 1429', 0)");
+    if (!query.exec())
+        MythDB::DBError("RecordFilterFixupsThisTime", query);
+
+    // Fix this day and time filter
+    query.prepare(
+"REPLACE INTO recordfilter (filterid, description, clause, newruledefault) "
+"  VALUES (9, 'This day and time', 'ABS(TIMESTAMPDIFF(MINUTE, CONVERT_TZ("
+"  ADDTIME(RECTABLE.startdate, RECTABLE.starttime), ''Etc/UTC'', ''SYSTEM''), "
+"  CONVERT_TZ(program.starttime, ''Etc/UTC'', ''SYSTEM''))) MOD 10080 "
+"  NOT BETWEEN 11 AND 10069', 0)");
+    if (!query.exec())
+        MythDB::DBError("RecordFilterFixupsThisDayAndTime", query);
+}
+
 void Scheduler::OldRecordedFixups(void)
 {
     MSqlQuery query(dbConn);
@@ -1818,6 +1857,8 @@ void Scheduler::run(void)
         reschedWait.wakeAll();
     }
 
+    RecordFilterFixups();
+
     OldRecordedFixups();
 
     // wait for slaves to connect
diff --git a/mythtv/programs/mythbackend/scheduler.h b/mythtv/programs/mythbackend/scheduler.h
index df5a1d7..a52b2e0 100644
--- a/mythtv/programs/mythbackend/scheduler.h
+++ b/mythtv/programs/mythbackend/scheduler.h
@@ -159,6 +159,7 @@ class Scheduler : public MThread, public MythScheduler
                          const RecList &reclist);
     void FillDirectoryInfoCache(bool force = false);
 
+    void RecordFilterFixups(void);
     void OldRecordedFixups(void);
     void ResetDuplicates(uint recordid, uint findid, const QString &title,
                          const QString &subtitle, const QString &descrip,
-- 
1.7.10.2

