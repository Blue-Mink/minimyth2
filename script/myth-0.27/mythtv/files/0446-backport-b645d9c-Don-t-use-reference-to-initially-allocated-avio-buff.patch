From b645d9c20525b695e11d5b1b909e845a5d09885c Mon Sep 17 00:00:00 2001
From: Jean-Yves Avenard <jyavenard@mythtv.org>
Date: Mon, 30 Jun 2014 14:14:21 -0700
Subject: [PATCH 09/12] =?UTF-8?q?Don=E2=80=99t=20use=20reference=20to=20init?=
 =?UTF-8?q?ially=20allocated=20avio=20buffer?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

aviocontext can resize the buffer under some circumstances. Attempting to later free the original buffer address would cause a crash
---
 mythplugins/mythmusic/mythmusic/avfdecoder.cpp |   21 +++++++--------------
 mythplugins/mythmusic/mythmusic/avfdecoder.h   |    1 -
 2 files changed, 7 insertions(+), 15 deletions(-)

diff --git a/mythplugins/mythmusic/mythmusic/avfdecoder.cpp b/mythplugins/mythmusic/mythmusic/avfdecoder.cpp
index ed43689..d619a92 100644
--- a/mythplugins/mythmusic/mythmusic/avfdecoder.cpp
+++ b/mythplugins/mythmusic/mythmusic/avfdecoder.cpp
@@ -182,8 +182,7 @@ avfDecoder::avfDecoder(const QString &file, DecoderFactory *d, AudioOutput *o) :
     m_seekTime(-1.0),             m_devicename(""),
     m_inputFormat(NULL),          m_inputContext(NULL),
     m_audioDec(NULL),             m_inputIsFile(false),
-    m_buffer(NULL),               m_byteIOContext(NULL),
-    m_errCode(0)
+    m_byteIOContext(NULL),        m_errCode(0)
 {
     setObjectName("avfDecoder");
     setFilename(file);
@@ -252,8 +251,9 @@ bool avfDecoder::initialize()
     {
         // if the input is not a file then setup the buffer
         // and iocontext to stream from it
-        m_buffer = (unsigned char*) av_malloc(BUFFER_SIZE + FF_INPUT_BUFFER_PADDING_SIZE);
-        m_byteIOContext = avio_alloc_context(m_buffer, BUFFER_SIZE, 0, input(),
+        unsigned char *buffer =
+            (unsigned char*) av_malloc(BUFFER_SIZE + FF_INPUT_BUFFER_PADDING_SIZE);
+        m_byteIOContext = avio_alloc_context(buffer, BUFFER_SIZE, 0, input(),
                                              &ReadFunc, &WriteFunc, &SeekFunc);
         filename = "stream";
 
@@ -264,7 +264,7 @@ bool avfDecoder::initialize()
         AVProbeData probe_data;
         probe_data.filename = filename.toLocal8Bit().constData();
         probe_data.buf_size = min(BUFFER_SIZE, (int) input()->bytesAvailable());
-        probe_data.buf = m_buffer;
+        probe_data.buf = buffer;
         input()->peek((char*)probe_data.buf, probe_data.buf_size);
         m_inputFormat = av_probe_input_format(&probe_data, 1);
 
@@ -406,15 +406,8 @@ void avfDecoder::deinit()
     m_audioDec = NULL;
     m_inputFormat = NULL;
 
-    if (m_buffer)
-    {
-        av_freep(&m_buffer);
-    }
-
-    if (m_byteIOContext)
-    {
-        av_freep(&m_byteIOContext);
-    }
+    av_freep(&m_byteIOContext->buffer);
+    av_freep(&m_byteIOContext);
 }
 
 void avfDecoder::run()
diff --git a/mythplugins/mythmusic/mythmusic/avfdecoder.h b/mythplugins/mythmusic/mythmusic/avfdecoder.h
index d1a4c96..6a25518 100644
--- a/mythplugins/mythmusic/mythmusic/avfdecoder.h
+++ b/mythplugins/mythmusic/mythmusic/avfdecoder.h
@@ -44,7 +44,6 @@ class avfDecoder : public Decoder
     AVCodecContext *m_audioDec;
 
     bool m_inputIsFile;
-    unsigned char *m_buffer;
     AVIOContext *m_byteIOContext;
 
     int m_errCode;
-- 
1.7.10.2

