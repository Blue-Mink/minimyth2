diff -Naur mythtv-0.27-20140504-ge2acf0d-old/mythtv/libs/libmythtv/tv_play.cpp mythtv-0.27-20140504-ge2acf0d-new/mythtv/libs/libmythtv/tv_play.cpp
--- mythtv-0.27-20140504-ge2acf0d-old/mythtv/libs/libmythtv/tv_play.cpp	2014-05-05 11:51:59.804321650 +0200
+++ mythtv-0.27-20140504-ge2acf0d-new/mythtv/libs/libmythtv/tv_play.cpp	2014-05-05 11:52:19.510874020 +0200
@@ -307,7 +307,8 @@
 /**
  * \brief returns true if the recording completed when exiting.
  */
-bool TV::StartTV(ProgramInfo *tvrec, uint flags)
+bool TV::StartTV(ProgramInfo *tvrec, uint flags,
+                 const ChannelInfoList &selection)
 {
     TV *tv = GetTV();
     if (!tv)
@@ -376,7 +377,7 @@
         else if (RemoteGetFreeRecorderCount())
         {
             LOG(VB_PLAYBACK, LOG_INFO, LOC + "tv->LiveTV() -- begin");
-            if (!tv->LiveTV(showDialogs))
+            if (!tv->LiveTV(showDialogs, selection))
             {
                 tv->SetExitPlayer(true, true);
                 quitAll = true;
@@ -1022,6 +1023,7 @@
       asInputMode(false),
       // Channel changing state variables
       queuedChanNum(""),
+      initialChanID(0),
       lockTimerOn(false),
       // channel browsing
       browsehelper(NULL),
@@ -1678,7 +1680,7 @@
  *  \brief Starts LiveTV
  *  \param showDialogs if true error dialogs are shown, if false they are not
  */
-bool TV::LiveTV(bool showDialogs)
+bool TV::LiveTV(bool showDialogs, const ChannelInfoList &selection)
 {
     requestDelete = false;
     allowRerecord = false;
@@ -1686,7 +1688,7 @@
 
     PlayerContext *actx = GetPlayerReadLock(-1, __FILE__, __LINE__);
     if (actx->GetState() == kState_None &&
-        RequestNextRecorder(actx, showDialogs))
+        RequestNextRecorder(actx, showDialogs, selection))
     {
         actx->SetInitialTVState(true);
         HandleStateChange(actx, actx);
@@ -1715,7 +1717,8 @@
     return ret;
 }
 
-bool TV::RequestNextRecorder(PlayerContext *ctx, bool showDialogs)
+bool TV::RequestNextRecorder(PlayerContext *ctx, bool showDialogs,
+                             const ChannelInfoList &selection)
 {
     if (!ctx)
         return false;
@@ -1729,6 +1732,24 @@
         testrec = switchToRec;
         switchToRec = NULL;
     }
+    else if (!selection.empty())
+    {
+        for (uint i = 0; i < selection.size(); i++)
+        {
+            uint    chanid  = selection[i].chanid;
+            QString channum = selection[i].channum;
+            if (!chanid || channum.isEmpty())
+                continue;
+            QSet<uint> cards = IsTunableOn(ctx, chanid, false, true);
+
+            if (chanid && !channum.isEmpty() && !cards.isEmpty())
+            {
+                testrec = RemoteGetExistingRecorder(*(cards.begin()));
+                initialChanID = chanid;
+                break;
+            }
+        }
+    }
     else
     {
         // When starting LiveTV we just get the next free recorder
@@ -2223,7 +2244,9 @@
 
         SET_NEXT();
 
-        uint chanid = gCoreContext->GetNumSetting("DefaultChanid", 0);
+        uint chanid = initialChanID;
+        if (!chanid)
+            chanid = gCoreContext->GetNumSetting("DefaultChanid", 0);
 
         if (chanid && !IsTunable(ctx, chanid))
             chanid = 0;
diff -Naur mythtv-0.27-20140504-ge2acf0d-old/mythtv/libs/libmythtv/tv_play.h mythtv-0.27-20140504-ge2acf0d-new/mythtv/libs/libmythtv/tv_play.h
--- mythtv-0.27-20140504-ge2acf0d-old/mythtv/libs/libmythtv/tv_play.h	2014-05-05 11:51:59.797655021 +0200
+++ mythtv-0.27-20140504-ge2acf0d-new/mythtv/libs/libmythtv/tv_play.h	2014-05-05 11:52:19.590873556 +0200
@@ -306,8 +306,9 @@
     static bool IsTVRunning(void);
     static TV*  CurrentTVInstance(void) { return gTV; }
     // Start media playback
-    static bool StartTV(ProgramInfo *tvrec = NULL,
-                        uint flags = kStartTVNoFlags);
+    static bool StartTV(ProgramInfo *tvrec,
+                        uint flags,
+                        const ChannelInfoList &selection = ChannelInfoList());
     static bool IsPaused(void);
 
     // Public event handling
@@ -366,7 +367,7 @@
     void InitFromDB(void);
 
     // Top level playback methods
-    bool LiveTV(bool showDialogs = true);
+    bool LiveTV(bool showDialogs, const ChannelInfoList &selection);
     bool StartLiveTVInGuide(void) { return db_start_in_guide; }
     int  Playback(const ProgramInfo &rcinfo);
     void PlaybackLoop(void);
@@ -477,7 +478,8 @@
                              BookmarkAction bookmark = kBookmarkAuto);
     void SetExitPlayer(bool set_it, bool wants_to);
 
-    bool RequestNextRecorder(PlayerContext *, bool);
+    bool RequestNextRecorder(PlayerContext *, bool,
+                             const ChannelInfoList &sel = ChannelInfoList());
     void DeleteRecorder();
 
     bool StartRecorder(PlayerContext *ctx, int maxWait=-1);
@@ -878,6 +880,8 @@
     mutable QString queuedChanNum;
     /// Queued ChanID (from EPG channel selector)
     uint            queuedChanID;
+    /// Initial chanid override for Live TV
+    uint            initialChanID;
 
     // Channel changing timeout notification variables
     QTime   lockTimer;
diff -Naur mythtv-0.27-20140504-ge2acf0d-old/mythtv/programs/mythfrontend/guidegrid.cpp mythtv-0.27-20140504-ge2acf0d-new/mythtv/programs/mythfrontend/guidegrid.cpp
--- mythtv-0.27-20140504-ge2acf0d-old/mythtv/programs/mythfrontend/guidegrid.cpp	2014-05-05 11:52:06.420949931 +0200
+++ mythtv-0.27-20140504-ge2acf0d-new/mythtv/programs/mythfrontend/guidegrid.cpp	2014-05-05 11:52:19.614206754 +0200
@@ -850,6 +850,9 @@
 
         if (m_player && (m_player->GetState(-1) == kState_WatchingLiveTV))
             menuPopup->AddButton(tr("Change to Channel"));
+        else
+            // XXX Make sure this channel/program is watchable
+            menuPopup->AddButton(tr("Watch This Channel"));
 
         menuPopup->AddButton(tr("Record This"));
 
@@ -1696,6 +1699,11 @@
             {
                 enter();
             }
+            else if (resulttext == tr("Watch This Channel"))
+            {
+                // XXX Do another check that this channel/program is watchable
+                TV::StartTV(NULL, kStartTVNoFlags, GetSelection());
+            }
             else if (resulttext == tr("Program Details"))
             {
                 details();
