From 850843df072efac23d19b27282c55cfce53f9b36 Mon Sep 17 00:00:00 2001
From: Mike Thomas <pfw.demon.co.uk>
Date: Sun, 19 Jan 2014 03:16:00 +1100
Subject: [PATCH 2/3] Speed up writing EIT cache to database

Use a single SQL query to write EIT cache to database rather than a series of queries. This significantly speed up disk operations

Ref #12016

Signed-off-by: Jean-Yves Avenard <jyavenard@mythtv.org>
---
 mythtv/libs/libmythtv/eitcache.cpp |   48 ++++++++++++++++++------------------
 mythtv/libs/libmythtv/eitcache.h   |    2 +-
 2 files changed, 25 insertions(+), 25 deletions(-)

diff --git a/mythtv/libs/libmythtv/eitcache.cpp b/mythtv/libs/libmythtv/eitcache.cpp
index ffa95df..c087d9c 100644
--- a/mythtv/libs/libmythtv/eitcache.cpp
+++ b/mythtv/libs/libmythtv/eitcache.cpp
@@ -86,27 +86,12 @@ static inline bool modified(uint64_t sig)
     return sig >> 63;
 }
 
-static void replace_in_db(uint chanid, uint eventid, uint64_t sig)
+static void replace_in_db(QStringList &value_clauses,
+                          uint chanid, uint eventid, uint64_t sig)
 {
-
-    MSqlQuery query(MSqlQuery::InitCon());
-
-    QString qstr =
-        "REPLACE INTO eit_cache "
-        "       ( chanid,  eventid,  tableid,  version,  endtime) "
-        "VALUES (:CHANID, :EVENTID, :TABLEID, :VERSION, :ENDTIME)";
-
-    query.prepare(qstr);
-    query.bindValue(":CHANID",   chanid);
-    query.bindValue(":EVENTID",  eventid);
-    query.bindValue(":TABLEID",  extract_table_id(sig));
-    query.bindValue(":VERSION",  extract_version(sig));
-    query.bindValue(":ENDTIME",  extract_endtime(sig));
-
-    if (!query.exec())
-        MythDB::DBError("Error updating eitcache", query);
-
-    return;
+    value_clauses << QString("(%1,%2,%3,%4,%5)")
+        .arg(chanid).arg(eventid).arg(extract_table_id(sig))
+        .arg(extract_version(sig)).arg(extract_endtime(sig));
 }
 
 static void delete_in_db(uint endtime)
@@ -264,7 +249,7 @@ event_map_t * EITCache::LoadChannel(uint chanid)
     return eventMap;
 }
 
-void EITCache::WriteChannelToDB(uint chanid)
+void EITCache::WriteChannelToDB(QStringList &value_clauses, uint chanid)
 {
     event_map_t * eventMap = channelMap[chanid];
 
@@ -285,7 +270,7 @@ void EITCache::WriteChannelToDB(uint chanid)
         {
             if (modified(*it))
             {
-                replace_in_db(chanid, it.key(), *it);
+                replace_in_db(value_clauses, chanid, it.key(), *it);
                 updated++;
                 *it &= ~(uint64_t)0 >> 1; // mark as synced
             }
@@ -301,7 +286,7 @@ void EITCache::WriteChannelToDB(uint chanid)
     unlock_channel(chanid, updated);
 
     if (updated)
-        LOG(VB_EIT, LOG_INFO, LOC + QString("Wrote %1 modified entries of %2 "
+        LOG(VB_EIT, LOG_INFO, LOC + QString("Writing %1 modified entries of %2 "
                                       "for channel %3 to database.")
                 .arg(updated).arg(size).arg(chanid));
     if (removed)
@@ -315,12 +300,27 @@ void EITCache::WriteToDB(void)
 {
     QMutexLocker locker(&eventMapLock);
 
+    QStringList value_clauses;
     key_map_t::iterator it = channelMap.begin();
     while (it != channelMap.end())
     {
-        WriteChannelToDB(it.key());
+        WriteChannelToDB(value_clauses, it.key());
         ++it;
     }
+
+    if(value_clauses.isEmpty())
+    {
+        return;
+    }
+
+    MSqlQuery query(MSqlQuery::InitCon());
+    query.prepare(QString("REPLACE INTO eit_cache "
+                          "(chanid, eventid, tableid, version, endtime) "
+                          "VALUES %1").arg(value_clauses.join(",")));
+    if (!query.exec())
+    {
+        MythDB::DBError("Error updating eitcache", query);
+    }
 }
 
 bool EITCache::IsNewEIT(uint chanid,  uint tableid,   uint version,
diff --git a/mythtv/libs/libmythtv/eitcache.h b/mythtv/libs/libmythtv/eitcache.h
index 3e3455f..92e2e9a 100644
--- a/mythtv/libs/libmythtv/eitcache.h
+++ b/mythtv/libs/libmythtv/eitcache.h
@@ -36,7 +36,7 @@ class EITCache
 
   private:
     event_map_t * LoadChannel(uint chanid);
-    void WriteChannelToDB(uint chanid);
+    void WriteChannelToDB(QStringList &value_clauses, uint chanid);
 
     // event key cache
     key_map_t   channelMap;
-- 
1.7.10.2

