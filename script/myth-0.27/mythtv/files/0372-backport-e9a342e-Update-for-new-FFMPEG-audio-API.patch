From e9a342e79d3427b45667c90403d49d70dbfd069a Mon Sep 17 00:00:00 2001
From: Jean-Yves Avenard <jyavenard@mythtv.org>
Date: Sat, 31 May 2014 00:08:26 +1000
Subject: [PATCH 10/28] Update for new FFMPEG audio API

---
 mythplugins/mythmusic/mythmusic/avfdecoder.cpp       |    2 +-
 mythtv/libs/libmyth/audio/spdifencoder.cpp           |    2 +-
 mythtv/libs/libmyth/audio/spdifencoder.h             |    3 ++-
 mythtv/libs/libmythtv/AirPlay/mythraopconnection.cpp |    6 +++---
 mythtv/libs/libmythtv/avformatdecoder.cpp            |    5 ++---
 mythtv/libs/libmythtv/nuppeldecoder.cpp              |    3 +--
 6 files changed, 10 insertions(+), 11 deletions(-)

diff --git a/mythplugins/mythmusic/mythmusic/avfdecoder.cpp b/mythplugins/mythmusic/mythmusic/avfdecoder.cpp
index 898ebbd..ed43689 100644
--- a/mythplugins/mythmusic/mythmusic/avfdecoder.cpp
+++ b/mythplugins/mythmusic/mythmusic/avfdecoder.cpp
@@ -189,7 +189,7 @@ avfDecoder::avfDecoder(const QString &file, DecoderFactory *d, AudioOutput *o) :
     setFilename(file);
 
     m_outputBuffer =
-        (uint8_t *)av_malloc(AVCODEC_MAX_AUDIO_FRAME_SIZE * sizeof(int32_t));
+        (uint8_t *)av_malloc(AudioOutput::MAX_SIZE_BUFFER);
 
     bool debug = VERBOSE_LEVEL_CHECK(VB_LIBAV, LOG_ANY);
     av_log_set_level((debug) ? AV_LOG_DEBUG : AV_LOG_ERROR);
diff --git a/mythtv/libs/libmyth/audio/spdifencoder.cpp b/mythtv/libs/libmyth/audio/spdifencoder.cpp
index ee10a39..cdb048e 100644
--- a/mythtv/libs/libmyth/audio/spdifencoder.cpp
+++ b/mythtv/libs/libmyth/audio/spdifencoder.cpp
@@ -24,7 +24,7 @@ extern "C" {
 SPDIFEncoder::SPDIFEncoder(QString muxer, int codec_id)
     : m_complete(false), m_oc(NULL), m_stream(NULL), m_size(0)
 {
-    memset(&m_buffer, 0 , sizeof(m_buffer));
+    memset(&m_buffer, 0, sizeof(m_buffer));
 
     QByteArray dev_ba     = muxer.toLatin1();
     AVOutputFormat *fmt;
diff --git a/mythtv/libs/libmyth/audio/spdifencoder.h b/mythtv/libs/libmyth/audio/spdifencoder.h
index 30e0336..01a70b1 100644
--- a/mythtv/libs/libmyth/audio/spdifencoder.h
+++ b/mythtv/libs/libmyth/audio/spdifencoder.h
@@ -4,6 +4,7 @@
 #include <QString>
 
 #include "output.h"
+#include "audiooutput.h"
 
 extern "C" {
 #include "libavcodec/avcodec.h"
@@ -32,7 +33,7 @@ class MPUBLIC SPDIFEncoder
     bool                m_complete;
     AVFormatContext    *m_oc;
     AVStream           *m_stream;
-    unsigned char       m_buffer[AVCODEC_MAX_AUDIO_FRAME_SIZE];
+    unsigned char       m_buffer[AudioOutput::MAX_SIZE_BUFFER];
     long                m_size;
 };
 
diff --git a/mythtv/libs/libmythtv/AirPlay/mythraopconnection.cpp b/mythtv/libs/libmythtv/AirPlay/mythraopconnection.cpp
index 8caf0c6..9d4621c 100644
--- a/mythtv/libs/libmythtv/AirPlay/mythraopconnection.cpp
+++ b/mythtv/libs/libmythtv/AirPlay/mythraopconnection.cpp
@@ -643,7 +643,7 @@ uint32_t MythRAOPConnection::decodeAudioPacket(uint8_t type,
     tmp_pkt.size = len;
 
     uint32_t frames_added = 0;
-    uint8_t *samples = (uint8_t *)av_mallocz(AVCODEC_MAX_AUDIO_FRAME_SIZE);
+    uint8_t *samples = (uint8_t *)av_mallocz(AudioOutput::MAX_SIZE_BUFFER);
     while (tmp_pkt.size > 0)
     {
         int data_size;
@@ -658,7 +658,7 @@ uint32_t MythRAOPConnection::decodeAudioPacket(uint8_t type,
         if (data_size)
         {
             int num_samples = data_size /
-	      (ctx->channels * av_get_bytes_per_sample(ctx->sample_fmt));
+                (ctx->channels * av_get_bytes_per_sample(ctx->sample_fmt));
 
             frames_added += num_samples;
             AudioData block;
@@ -1734,7 +1734,7 @@ int64_t MythRAOPConnection::AudioCardLatency(void)
     if (!m_audio)
         return 0;
 
-    int16_t *samples = (int16_t *)av_mallocz(AVCODEC_MAX_AUDIO_FRAME_SIZE);
+    int16_t *samples = (int16_t *)av_mallocz(AudioOutput::MAX_SIZE_BUFFER);
     int frames = AUDIOCARD_BUFFER * m_frameRate / 1000;
     m_audio->AddData((char *)samples,
                      frames * (m_sampleSize>>3) * m_channels,
diff --git a/mythtv/libs/libmythtv/avformatdecoder.cpp b/mythtv/libs/libmythtv/avformatdecoder.cpp
index 1b96e5e..b1cf3eb 100644
--- a/mythtv/libs/libmythtv/avformatdecoder.cpp
+++ b/mythtv/libs/libmythtv/avformatdecoder.cpp
@@ -427,8 +427,7 @@ AvFormatDecoder::AvFormatDecoder(MythPlayer *parent,
     memset(ccX08_in_pmt, 0, sizeof(ccX08_in_pmt));
     memset(ccX08_in_tracks, 0, sizeof(ccX08_in_tracks));
 
-    audioSamples = (uint8_t *)av_mallocz(AVCODEC_MAX_AUDIO_FRAME_SIZE *
-                                         sizeof(int32_t));
+    audioSamples = (uint8_t *)av_mallocz(AudioOutput::MAX_SIZE_BUFFER);
     ccd608->SetIgnoreTimecode(true);
 
     bool debug = VERBOSE_LEVEL_CHECK(VB_LIBAV, LOG_ANY);
@@ -464,7 +463,7 @@ AvFormatDecoder::~AvFormatDecoder()
 
     sws_freeContext(sws_ctx);
 
-    av_free(audioSamples);
+    av_freep(&audioSamples);
 
     if (avfRingBuffer)
         delete avfRingBuffer;
diff --git a/mythtv/libs/libmythtv/nuppeldecoder.cpp b/mythtv/libs/libmythtv/nuppeldecoder.cpp
index 932d6e2..7fdb972 100644
--- a/mythtv/libs/libmythtv/nuppeldecoder.cpp
+++ b/mythtv/libs/libmythtv/nuppeldecoder.cpp
@@ -57,8 +57,7 @@ NuppelDecoder::NuppelDecoder(MythPlayer *parent,
     memset(&extradata, 0, sizeof(extendeddata));
     memset(&tmppicture, 0, sizeof(AVPicture));
     planes[0] = planes[1] = planes[2] = 0;
-    m_audioSamples = (uint8_t *)av_mallocz(AVCODEC_MAX_AUDIO_FRAME_SIZE *
-                                           sizeof(int32_t));
+    m_audioSamples = (uint8_t *)av_mallocz(AudioOutputUtil::MAX_SIZE_BUFFER);
 
     // set parent class variables
     positionMapType = MARK_KEYFRAME;
-- 
1.7.10.2

