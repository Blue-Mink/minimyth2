From 05124c3ed08a08a47dec3ae27c58fdfff159cf7c Mon Sep 17 00:00:00 2001
From: Lawrence Rust <lvr@softsystem.co.uk>
Date: Sun, 27 Oct 2013 20:42:29 +0000
Subject: [PATCH 25/56] VO: Fail VAAPI reinit from decoder thread to avoid Qt
 abort in doneCurrent

If a recording starts without a video stream then if the video
subsequently becomes active the decoder attempts to re-init the
display.  However, the OpenGL functions fail if called outside of the
UI thread and this results in an unbalanced series of calls to
doneCurrebt which triggers a Qt abort (debug build) due to a recursive
mutex overflow.

This bug is tickled by the CloseShave video which started recording
at just before 7pm on BBC3, which is just before the start of normal
BBC prgrams.  The initial stream consists of MHEG data only.

Signed-off-by: Lawrence Rust <lvr@softsystem.co.uk>
Signed-off-by: Jean-Yves Avenard <jyavenard@mythtv.org>
---
 mythtv/libs/libmythtv/videoout_openglvaapi.cpp |   12 ++++++++++++
 1 file changed, 12 insertions(+)

diff --git a/mythtv/libs/libmythtv/videoout_openglvaapi.cpp b/mythtv/libs/libmythtv/videoout_openglvaapi.cpp
index 2409008..4da8388 100644
--- a/mythtv/libs/libmythtv/videoout_openglvaapi.cpp
+++ b/mythtv/libs/libmythtv/videoout_openglvaapi.cpp
@@ -127,6 +127,18 @@ bool VideoOutputOpenGLVAAPI::CreateVAAPIContext(QSize size)
     // access to the OpenGL context. There is no obvious fix however - if we
     // don't delete and re-create the VAAPI decoder context immediately then
     // the decoder fails and playback exits.
+
+    // lvr 27-oct-13
+    // in 0.27 if m_ctx->CreateDisplay is called outside of the UI thread then
+    // it fails, which then causes subsequent unbalanced calls to doneCurrent
+    // which results in Qt aborting.  So just fail if non-UI.
+    if (!gCoreContext->IsUIThread())
+    {
+        LOG(VB_GENERAL, LOG_ERR, LOC +
+            "CreateVAAPIContext called from non-UI thread");
+        return false;
+    }
+
     OpenGLLocker ctx_lock(gl_context);
 
     if (m_ctx)
-- 
1.7.10.2

