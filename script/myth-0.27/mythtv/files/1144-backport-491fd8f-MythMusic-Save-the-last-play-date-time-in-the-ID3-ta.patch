From 491fd8f617831c261dce21ab1b786d140436b155 Mon Sep 17 00:00:00 2001
From: Stuart Morgan <smorgan@mythtv.org>
Date: Tue, 8 Jul 2014 19:59:04 +0100
Subject: [PATCH 1/3] MythMusic: Save the last play date/time in the ID3 tag
 as a custom frame.

---
 mythtv/libs/libmythmetadata/metaioid3.cpp |   32 ++++++++++++++++++++++++++++-
 mythtv/libs/libmythmetadata/metaioid3.h   |    1 +
 2 files changed, 32 insertions(+), 1 deletion(-)

diff --git a/mythtv/libs/libmythmetadata/metaioid3.cpp b/mythtv/libs/libmythmetadata/metaioid3.cpp
index 3dae5cd..8f8f1bf 100644
--- a/mythtv/libs/libmythmetadata/metaioid3.cpp
+++ b/mythtv/libs/libmythmetadata/metaioid3.cpp
@@ -175,6 +175,7 @@ bool MetaIOID3::write(const QString &filename, MusicMetadata* mdata)
     // MythTV rating and playcount, stored in POPM frame
     writeRating(tag, mdata->Rating());
     writePlayCount(tag, mdata->PlayCount());
+    writeLastPlay(tag, mdata->LastPlay());
 
     // MusicBrainz ID
     UserTextIdentificationFrame *musicbrainz = NULL;
@@ -366,6 +367,14 @@ MusicMetadata *MetaIOID3::read(const QString &filename)
     LOG(VB_FILE, LOG_DEBUG,
             QString("MetaIOID3::read: Length for '%1' from properties is '%2'\n").arg(filename).arg(metadata->Length()));
 
+    // Look for MythTVLastPlayed in TXXX Frame
+    UserTextIdentificationFrame *lastplayed = find(tag, "MythTVLastPlayed");
+    if (lastplayed)
+    {
+        QString lastPlayStr = TStringToQString(lastplayed->toString());
+        metadata->setLastPlay(QDateTime::fromString(lastPlayStr, Qt::ISODate));
+    }
+
     return metadata;
 }
 
@@ -873,6 +882,7 @@ bool MetaIOID3::writeVolatileMetadata(const QString &filename, MusicMetadata* md
 
     int rating = mdata->Rating();
     int playcount = mdata->PlayCount();
+    QDateTime lastPlay = mdata->LastPlay();
 
     if (!OpenFile(filename, true))
         return false;
@@ -882,7 +892,8 @@ bool MetaIOID3::writeVolatileMetadata(const QString &filename, MusicMetadata* md
     if (!tag)
         return false;
 
-    bool result = (writeRating(tag, rating) && writePlayCount(tag, playcount));
+    bool result = (writeRating(tag, rating) && writePlayCount(tag, playcount) &&
+                   writeLastPlay(tag, lastPlay));
 
     if (!SaveFile())
         return false;
@@ -922,6 +933,25 @@ bool MetaIOID3::writeRating(TagLib::ID3v2::Tag *tag, int rating)
     return true;
 }
 
+bool MetaIOID3::writeLastPlay(TagLib::ID3v2::Tag *tag, QDateTime lastPlay)
+{
+    if (!tag)
+        return false;
+
+    // MythTV Specific Rating Tag
+    UserTextIdentificationFrame *txxx = find(tag, "MythTVLastPlayed");
+
+    if (!txxx)
+    {
+        txxx = new UserTextIdentificationFrame();
+        tag->addFrame(txxx);
+        txxx->setDescription("MythTVLastPlayed");
+    }
+    txxx->setText(QStringToTString(lastPlay.toString(Qt::ISODate)));
+
+    return true;
+}
+
 bool MetaIOID3::TagExists(const QString &filename)
 {
     if (!OpenFile(filename))
diff --git a/mythtv/libs/libmythmetadata/metaioid3.h b/mythtv/libs/libmythmetadata/metaioid3.h
index af2be83..86106d4 100644
--- a/mythtv/libs/libmythmetadata/metaioid3.h
+++ b/mythtv/libs/libmythmetadata/metaioid3.h
@@ -63,6 +63,7 @@ class META_PUBLIC MetaIOID3 : public MetaIOTagLib
 
     bool writePlayCount(TagLib::ID3v2::Tag *tag, int playcount);
     bool writeRating(TagLib::ID3v2::Tag *tag, int rating);
+    bool writeLastPlay(TagLib::ID3v2::Tag *tag, QDateTime lastPlay);
 
     AlbumArtList readAlbumArt(TagLib::ID3v2::Tag *tag);
     UserTextIdentificationFrame* find(TagLib::ID3v2::Tag *tag,
-- 
1.7.10.2

