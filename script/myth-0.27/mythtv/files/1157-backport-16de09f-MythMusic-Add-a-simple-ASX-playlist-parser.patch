From 16de09f57611acdda7c778dca1d2d3e812511709 Mon Sep 17 00:00:00 2001
From: Paul Harrison <pharrison@mythtv.org>
Date: Wed, 3 Sep 2014 11:43:45 +0100
Subject: [PATCH 01/11] MythMusic: Add a simple ASX playlist parser

---
 mythplugins/mythmusic/mythmusic/decoderhandler.cpp |    2 +-
 mythplugins/mythmusic/mythmusic/pls.cpp            |   52 +++++++++++++++++++-
 mythplugins/mythmusic/mythmusic/pls.h              |   15 ++++--
 3 files changed, 62 insertions(+), 7 deletions(-)

diff --git a/mythplugins/mythmusic/mythmusic/decoderhandler.cpp b/mythplugins/mythmusic/mythmusic/decoderhandler.cpp
index 612725b..777ccd9 100644
--- a/mythplugins/mythmusic/mythmusic/decoderhandler.cpp
+++ b/mythplugins/mythmusic/mythmusic/decoderhandler.cpp
@@ -486,7 +486,7 @@ void DecoderHandler::createPlaylist(const QUrl &url)
         QString("File %1 has extension %2")
             .arg(QFileInfo(url.path()).fileName()).arg(extension));
 
-    if (extension == "pls" || extension == "m3u")
+    if (extension == "pls" || extension == "m3u" || extension == "asx")
     {
         if (url.scheme() == "file" || QFileInfo(url.toString()).isAbsolute())
             createPlaylistFromFile(url);
diff --git a/mythplugins/mythmusic/mythmusic/pls.cpp b/mythplugins/mythmusic/mythmusic/pls.cpp
index f2fa96e..a519ddc 100644
--- a/mythplugins/mythmusic/mythmusic/pls.cpp
+++ b/mythplugins/mythmusic/mythmusic/pls.cpp
@@ -4,10 +4,10 @@
 
   Update July 2010 updated for Qt4 (Paul Harrison)
   Update December 2012 updated to use QSettings for the pls parser
+  Update September 2014 add simple asx parser
 */
 
-// c
-//#include "iostream"
+// c++
 #include <string>
 
 // qt
@@ -17,6 +17,7 @@
 #include <QStringList>
 #include <QFileInfo>
 #include <QSettings>
+#include <QDomDocument>
 
 // mythtv
 #include <mythlogging.h>
@@ -46,6 +47,8 @@ int PlayListFile::parse(PlayListFile *pls, const QString &filename)
         result = PlayListFile::parsePLS(pls, filename);
     else if (extension == "m3u")
         result = PlayListFile::parseM3U(pls, filename);
+    else if (extension == "asx")
+        result = PlayListFile::parseASX(pls, filename);
 
     return result;
 }
@@ -117,3 +120,48 @@ int PlayListFile::parseM3U(PlayListFile *pls, const QString &filename)
 
     return pls->size();
 }
+
+int PlayListFile::parseASX(PlayListFile *pls, const QString &filename)
+{
+    QDomDocument doc("mydocument");
+    QFile file(filename);
+    if (!file.open(QIODevice::ReadOnly))
+        return 0;
+
+    if (!doc.setContent(&file))
+    {
+        file.close();
+        return 0;
+    }
+    file.close();
+
+    QDomElement docElem = doc.documentElement();
+    QDomNodeList entryList = doc.elementsByTagName("Entry");
+    QString url;
+
+    for (int x = 0; x < (int) entryList.count(); x++)
+    {
+        QDomNode n = entryList.item(x);
+        QDomElement elem = n.toElement();
+        QDomNodeList refList = elem.elementsByTagName("ref");
+        for (int y = 0; y < (int) refList.count(); y++)
+        {
+            QDomNode n2 = refList.item(y);
+            QDomElement elem2 = n2.toElement();
+            if (!elem2.isNull())
+            {
+                url = elem2.attribute("href");
+
+                // add to the playlist
+                PlayListFileEntry *e = new PlayListFileEntry();
+                e->setFile(url.replace("mms://", "mmsh://"));
+                e->setTitle(url.replace("mms://", "mmsh://"));
+                e->setLength(-1);
+
+                pls->add(e);
+            }
+        }
+    }
+
+    return pls->size();
+}
\ No newline at end of file
diff --git a/mythplugins/mythmusic/mythmusic/pls.h b/mythplugins/mythmusic/mythmusic/pls.h
index 0db6783..fbc40e4 100644
--- a/mythplugins/mythmusic/mythmusic/pls.h
+++ b/mythplugins/mythmusic/mythmusic/pls.h
@@ -86,27 +86,34 @@ class PlayListFile
             delete m_entries.takeFirst();
     }
 
-    /** \brief Parse a pls or m3u playlist file.
+    /** \brief Parse a pls, m3u or asx playlist file.
         \param pls the \p PlaylistFile to add the entries to
         \param filename the playlist's filename
-        \returns the number of entries parsed 
+        \returns the number of entries parsed
     */
     static int parse(PlayListFile *pls, const QString &filename);
 
     /** \brief Parse a pls file.
         \param pls the \p PlaylistFile to add the entries to
         \param filename the playlist's filename
-        \returns the number of entries parsed 
+        \returns the number of entries parsed
     */
     static int parsePLS(PlayListFile *pls, const QString &filename);
 
     /** \brief Parse a m3u file.
         \param pls the \p PlaylistFile to add the entries to
         \param filename the playlist's filename
-        \returns the number of entries parsed 
+        \returns the number of entries parsed
     */
     static int parseM3U(PlayListFile *pls, const QString &filename);
 
+    /** \brief Parse a asx file.
+        \param pls the \p PlaylistFile to add the entries to
+        \param filename the playlist's filename
+        \returns the number of entries parsed
+    */
+    static int parseASX(PlayListFile *pls, const QString &filename);
+
   private:
     QList<PlayListFileEntry*> m_entries;
     int m_version;
-- 
1.7.10.2

