From 12298ba5a2b35b39b3cbc8dd339251c245d5e85a Mon Sep 17 00:00:00 2001
From: Stuart Morgan <smorgan@mythtv.org>
Date: Mon, 30 Sep 2013 16:14:13 +0100
Subject: [PATCH 126/760] Store a relative url to the image in the database,
 instead of the absolute url

This should fix display of images on remote storage groups but not yet
generation of thumbnails from remote storage. That will be addressed
by further commits.
---
 mythtv/libs/libmythmetadata/imagescanthread.cpp    |   46 +++++++++++---------
 mythtv/libs/libmythmetadata/imagescanthread.h      |    6 +--
 mythtv/libs/libmythmetadata/imageutils.cpp         |   32 ++++++++------
 mythtv/libs/libmythmetadata/imageutils.h           |    4 +-
 .../mythfrontend/gallerydatabasehelper.cpp         |   37 ++--------------
 .../programs/mythfrontend/gallerydatabasehelper.h  |    1 -
 mythtv/programs/mythfrontend/galleryfilehelper.cpp |    2 +-
 .../mythfrontend/gallerythumbgenthread.cpp         |   12 +++--
 .../programs/mythfrontend/gallerythumbgenthread.h  |    2 +
 mythtv/programs/mythfrontend/galleryviewhelper.cpp |    4 +-
 mythtv/programs/mythfrontend/gallerywidget.cpp     |   39 ++---------------
 11 files changed, 71 insertions(+), 114 deletions(-)

diff --git a/mythtv/libs/libmythmetadata/imagescanthread.cpp b/mythtv/libs/libmythmetadata/imagescanthread.cpp
index 4281655..5a5be42 100644
--- a/mythtv/libs/libmythmetadata/imagescanthread.cpp
+++ b/mythtv/libs/libmythmetadata/imagescanthread.cpp
@@ -14,8 +14,6 @@
  */
 ImageScanThread::ImageScanThread() : MThread("ImageScanThread")
 {
-    LOG(VB_GENERAL, LOG_INFO, QString("ImageScanThread::ctor"));
-
     // initialize all required data structures
     m_dbDirList   = new QMap<QString, ImageMetadata *>;
     m_dbFileList  = new QMap<QString, ImageMetadata *>;
@@ -33,8 +31,6 @@ ImageScanThread::ImageScanThread() : MThread("ImageScanThread")
  */
 ImageScanThread::~ImageScanThread()
 {
-    LOG(VB_GENERAL, LOG_INFO, QString("ImageScanThread::dtor"));
-
     if (m_dbDirList)
     {
         delete m_dbDirList;
@@ -97,7 +93,10 @@ void ImageScanThread::run()
     for (int i = 0; i < paths.size(); ++i)
     {
         QString path = paths.at(i);
-        SyncFilesFromDir(path, 0);
+        QString base = path;
+        if (!base.endsWith('/'))
+            base.append('/');
+        SyncFilesFromDir(path, 0, base);
     }
 
     // Adding or updating directories have been completed.
@@ -129,18 +128,20 @@ void ImageScanThread::run()
  *          backend and syncs depending if they are a directory or file
  *  \param  path The current directory with the files that shall be scanned syncronized
  *  \param  parentId The id of the parent directory which is required for possible subdirectories
+ *  \param  baseDirectory The current root storage group path, this will be stripped before insertion into the database
  *  \return void
  */
-void ImageScanThread::SyncFilesFromDir(QString &path, int parentId)
+void ImageScanThread::SyncFilesFromDir(QString &path, int parentId,
+                                       const QString &baseDirectory)
 {
     if (!m_continue)
     {
-        LOG(VB_GENERAL, LOG_DEBUG,
+        LOG(VB_FILE, LOG_DEBUG,
             QString("Syncing from SG dir %1 interrupted").arg(path));
         return;
     }
 
-    LOG(VB_GENERAL, LOG_DEBUG,
+    LOG(VB_FILE, LOG_DEBUG,
         QString("Syncing from SG dir %1").arg(path));
 
     QDir dir(path);
@@ -158,7 +159,7 @@ void ImageScanThread::SyncFilesFromDir(QString &path, int parentId)
     {
         if (!m_continue)
         {
-            LOG(VB_GENERAL, LOG_DEBUG,
+            LOG(VB_FILE, LOG_DEBUG,
                 QString("Syncing from SG dir %1 interrupted").arg(path));
             return;
         }
@@ -168,15 +169,15 @@ void ImageScanThread::SyncFilesFromDir(QString &path, int parentId)
         {
             // Get the id. This will be new parent id
             // when we traverse down the current directory.
-            int id = SyncDirectory(fileInfo, parentId);
+            int id = SyncDirectory(fileInfo, parentId, baseDirectory);
 
             // Get new files within this directory
             QString fileName = fileInfo.absoluteFilePath();
-            SyncFilesFromDir(fileName, id);
+            SyncFilesFromDir(fileName, id, baseDirectory);
         }
         else
         {
-            SyncFile(fileInfo, parentId);
+            SyncFile(fileInfo, parentId, baseDirectory);
         }
 
         // Increase the current progress count in case a
@@ -193,11 +194,13 @@ void ImageScanThread::SyncFilesFromDir(QString &path, int parentId)
  *          Either inserts or deletes the information in the database.
  *  \param  fileInfo The information of the directory
  *  \param  parentId The parent directory which will be saved with the file
+ *  \param  baseDirectory The current root storage group path, this will be stripped before insertion into the database
  *  \return void
  */
-int ImageScanThread::SyncDirectory(QFileInfo &fileInfo, int parentId)
+int ImageScanThread::SyncDirectory(QFileInfo &fileInfo, int parentId, const QString &baseDirectory)
 {
-    LOG(VB_GENERAL, LOG_DEBUG, QString("Syncing directory %1")
+
+    LOG(VB_FILE, LOG_DEBUG, QString("Syncing directory %1")
         .arg(fileInfo.absoluteFilePath()));
 
     ImageMetadata *im = new ImageMetadata();
@@ -206,7 +209,7 @@ int ImageScanThread::SyncDirectory(QFileInfo &fileInfo, int parentId)
     {
         // Load all required information of the directory
         ImageUtils *iu = ImageUtils::getInstance();
-        iu->LoadDirectoryData(fileInfo, im, parentId);
+        iu->LoadDirectoryData(fileInfo, im, parentId, baseDirectory);
 
         // The directory is not in the database list
         // add it to the database and get the new id. This
@@ -240,9 +243,10 @@ int ImageScanThread::SyncDirectory(QFileInfo &fileInfo, int parentId)
  *  \param  parentId The parent directory which will be saved with the file
  *  \return void
  */
-void ImageScanThread::SyncFile(QFileInfo &fileInfo, int parentId)
+void ImageScanThread::SyncFile(QFileInfo &fileInfo, int parentId,
+                               const QString &baseDirectory)
 {
-    LOG(VB_GENERAL, LOG_DEBUG, QString("Syncing file %1")
+    LOG(VB_FILE, LOG_DEBUG, QString("Syncing file %1")
         .arg(fileInfo.absoluteFilePath()));
 
     if (!m_dbFileList->contains(fileInfo.absoluteFilePath()))
@@ -251,10 +255,10 @@ void ImageScanThread::SyncFile(QFileInfo &fileInfo, int parentId)
 
         // Load all required information of the file
         ImageUtils *iu = ImageUtils::getInstance();
-        iu->LoadFileData(fileInfo, im);
+        iu->LoadFileData(fileInfo, im, baseDirectory);
 
         // Only load the file if contains a valid file extension
-        LOG(VB_GENERAL, LOG_INFO, QString("Type of file %1 is %2, extension %3").arg(im->m_fileName).arg(im->m_type).arg(im->m_extension));
+        LOG(VB_FILE, LOG_DEBUG, QString("Type of file %1 is %2, extension %3").arg(im->m_fileName).arg(im->m_type).arg(im->m_extension));
         if (im->m_type != kUnknown)
         {
             // Load any required exif information if the file is an image
@@ -262,11 +266,11 @@ void ImageScanThread::SyncFile(QFileInfo &fileInfo, int parentId)
             {
                 bool ok;
 
-                int exifOrientation = iu->GetExifOrientation(im->m_fileName, &ok);
+                int exifOrientation = iu->GetExifOrientation(fileInfo.absoluteFilePath(), &ok);
                 if (ok)
                     im->SetOrientation(exifOrientation, true);
 
-                int exifDate = iu->GetExifDate(im->m_fileName, &ok);
+                int exifDate = iu->GetExifDate(fileInfo.absoluteFilePath(), &ok);
                 if (ok)
                     im->m_date = exifDate;
             }
diff --git a/mythtv/libs/libmythmetadata/imagescanthread.h b/mythtv/libs/libmythmetadata/imagescanthread.h
index c3ed7a8..e69e826 100644
--- a/mythtv/libs/libmythmetadata/imagescanthread.h
+++ b/mythtv/libs/libmythmetadata/imagescanthread.h
@@ -28,9 +28,9 @@ protected:
 private slots:
 
 private:
-    void SyncFilesFromDir(QString &path, int parentId);
-    int  SyncDirectory(QFileInfo &fileInfo, int parentId);
-    void SyncFile(QFileInfo &fileInfo, int parentId);
+    void SyncFilesFromDir(QString &path, int parentId, const QString &baseDirectory);
+    int  SyncDirectory(QFileInfo &fileInfo, int parentId, const QString &baseDirectory);
+    void SyncFile(QFileInfo &fileInfo, int parentId, const QString &baseDirectory);
 
     QMap<QString, ImageMetadata *> *m_dbDirList;
     QMap<QString, ImageMetadata *> *m_dbFileList;
diff --git a/mythtv/libs/libmythmetadata/imageutils.cpp b/mythtv/libs/libmythmetadata/imageutils.cpp
index ee81bd7..7377f80 100644
--- a/mythtv/libs/libmythmetadata/imageutils.cpp
+++ b/mythtv/libs/libmythmetadata/imageutils.cpp
@@ -82,8 +82,8 @@ void ImageUtils::LoadFilesFromDB(QMap<QString, ImageMetadata *>* dbList)
     MSqlQuery query(MSqlQuery::InitCon());
     query.prepare(
                 QString("SELECT "
-                        "file_id, filename, name, path, dir_id, "
-                        "type, modtime, size, extension, "
+                        "file_id, CONCAT_WS('/', path, filename), name, path, "
+                        "dir_id, type, modtime, size, extension, "
                         "angle, date, zoom, "
                         "hidden, orientation "
                         "FROM gallery_files"));
@@ -114,7 +114,7 @@ void ImageUtils::LoadFileFromDB(ImageMetadata * im, int id)
     MSqlQuery query(MSqlQuery::InitCon());
     query.prepare(
                 QString("SELECT "
-                        "file_id, filename, name, path, dir_id, "
+                        "file_id, CONCAT_WS('/', path, filename), name, path, dir_id, "
                         "type, modtime, size, extension, "
                         "angle, date, zoom, "
                         "hidden, orientation "
@@ -449,12 +449,14 @@ QStringList ImageUtils::GetStorageDirs()
  */
 void ImageUtils::LoadDirectoryData(QFileInfo &fileInfo,
                                    ImageMetadata *data,
-                                   int parentId)
+                                   int parentId,
+                                   const QString &baseDirectory)
 {
+    QDir baseDir(baseDirectory);
     data->m_parentId    = parentId;
-    data->m_fileName    = fileInfo.absoluteFilePath();
+    data->m_fileName    = baseDir.relativeFilePath(fileInfo.absoluteFilePath());
     data->m_name        = fileInfo.fileName();
-    data->m_path        = fileInfo.path();
+    data->m_path        = baseDir.relativeFilePath(fileInfo.absoluteFilePath());
     data->m_isHidden    = fileInfo.isHidden();
 
     QDir dir(data->m_fileName);
@@ -478,11 +480,15 @@ void ImageUtils::LoadDirectoryData(QFileInfo &fileInfo,
  *  \return void
  */
 void ImageUtils::LoadFileData(QFileInfo &fileInfo,
-                              ImageMetadata *data)
+                              ImageMetadata *data,
+                              const QString &baseDirectory)
 {
-    data->m_fileName    = fileInfo.absoluteFilePath();
+    QDir baseDir(baseDirectory);
+    data->m_fileName    = fileInfo.fileName();
     data->m_name        = fileInfo.fileName();
-    data->m_path        = fileInfo.path();
+    data->m_path        = baseDir.relativeFilePath(fileInfo.absolutePath());
+    if (data->m_path.isNull()) // Hack because relativeFilePath will return a null instead of empty string
+        data->m_path = "";
     data->m_modTime     = fileInfo.lastModified().toTime_t();
     data->m_size        = fileInfo.size();
     data->m_isHidden    = fileInfo.isHidden();
@@ -634,7 +640,7 @@ QList<QStringList> ImageUtils::GetAllExifValues(const QString &fileName)
             Exiv2::ExifData &exifData = image->exifData();
             if (!exifData.empty())
             {
-                LOG(VB_GENERAL, LOG_DEBUG,
+                LOG(VB_FILE, LOG_DEBUG,
                     QString("Found %1 tag(s) for file %2")
                     .arg(exifData.count())
                     .arg(fileName));
@@ -665,7 +671,7 @@ QList<QStringList> ImageUtils::GetAllExifValues(const QString &fileName)
             }
             else
             {
-                LOG(VB_GENERAL, LOG_ERR,
+                LOG(VB_FILE, LOG_DEBUG,
                     QString("Exiv2 error: No header, file %1")
                     .arg(fileName));
             }
@@ -727,14 +733,14 @@ QString ImageUtils::GetExifValue(const QString &fileName,
                 }
                 else
                 {
-                    LOG(VB_GENERAL, LOG_ERR,
+                    LOG(VB_FILE, LOG_DEBUG,
                         QString("Exiv2 error: No tag found, file %1, tag %2")
                         .arg(fileName).arg(exifTag));
                 }
             }
             else
             {
-                LOG(VB_GENERAL, LOG_ERR,
+                LOG(VB_FILE, LOG_DEBUG,
                     QString("Exiv2 error: No header, file %1, tag %2")
                     .arg(fileName).arg(exifTag));
             }
diff --git a/mythtv/libs/libmythmetadata/imageutils.h b/mythtv/libs/libmythmetadata/imageutils.h
index 6acbe94..c58e37e 100644
--- a/mythtv/libs/libmythmetadata/imageutils.h
+++ b/mythtv/libs/libmythmetadata/imageutils.h
@@ -42,8 +42,8 @@ public:
     bool RemoveFileFromDB(ImageMetadata *);
     bool RemoveFileFromDB(int);
 
-    void LoadDirectoryData(QFileInfo &, ImageMetadata *, int);
-    void LoadFileData(QFileInfo &, ImageMetadata *);
+    void LoadDirectoryData(QFileInfo &, ImageMetadata *, int, const QString &);
+    void LoadFileData(QFileInfo &, ImageMetadata *, const QString &);
 
     QStringList  GetStorageDirs();
 
diff --git a/mythtv/programs/mythfrontend/gallerydatabasehelper.cpp b/mythtv/programs/mythfrontend/gallerydatabasehelper.cpp
index 00da82e..af5dea8 100644
--- a/mythtv/programs/mythfrontend/gallerydatabasehelper.cpp
+++ b/mythtv/programs/mythfrontend/gallerydatabasehelper.cpp
@@ -22,35 +22,6 @@ GalleryDatabaseHelper::~GalleryDatabaseHelper()
 
 
 
-/** \fn     GalleryDatabaseHelper::GetStorageDirIDs(QStringList)
- *  \brief  Loads the directory ids of the storage groups from the database
- *  \return The list with the ids of the found directories
- */
-// FIXME This doesn't do what it's supposed to do because we don't insert the
-//       storage group root directories into the database! The storage group
-//       needs to be inserted as the root node, with parentId of zero
-QList<int> GalleryDatabaseHelper::GetStorageDirIDs()
-{
-    QList<int> sgIDs;
-
-//     MSqlQuery query(MSqlQuery::InitCon());
-//     query.prepare("SELECT dir_id FROM gallery_directories "
-//                   "WHERE parent_id = 0;");
-//
-//
-//     if (!query.exec())
-//         LOG(VB_GENERAL, LOG_ERR, MythDB::DBErrorMessage(query.lastError()));
-//
-//     while (query.next())
-//     {
-//         sgIDs.append(query.value(0).toInt());
-//     }
-
-    return sgIDs;
-}
-
-
-
 /** \fn     GalleryDatabaseHelper::LoadParentDirectory(QList<ImageMetadata *>* , int)
  *  \brief  Loads the information from the database for a given directory
  *  \param  dbList The list where the results are stored
@@ -160,7 +131,7 @@ void GalleryDatabaseHelper::LoadFiles(QMap<QString, ImageMetadata *>* dbList)
 
     MSqlQuery query(MSqlQuery::InitCon());
     query.prepare("SELECT "
-                    "file_id, filename, name, path, dir_id, "
+                    "file_id, CONCAT_WS('/', path, filename), name, path, dir_id, "
                     "type, modtime, size, extension, "
                     "angle, date, zoom, hidden, orientation "
                     "FROM gallery_files");
@@ -191,7 +162,7 @@ void GalleryDatabaseHelper::LoadFiles(QList<ImageMetadata *>* dbList, int parent
 
     MSqlQuery query(MSqlQuery::InitCon());
     query.prepare("SELECT "
-                    "file_id, filename, name, path, dir_id, "
+                    "file_id, CONCAT_WS('/', path, filename), name, path, dir_id, "
                     "type, modtime, size, extension, "
                     "angle, date, zoom, hidden, orientation "
                     "FROM gallery_files "
@@ -518,8 +489,8 @@ void GalleryDatabaseHelper::LoadDirectoryThumbnailValues(ImageMetadata *im)
     // Try to get four new thumbnail filenames
     // from the available images in this folder
     MSqlQuery query(MSqlQuery::InitCon());
-    query.prepare("SELECT filename, path FROM gallery_files "
-                          "WHERE path LIKE :PATH "
+    query.prepare("SELECT CONCAT_WS('/', path, filename), path FROM gallery_files "
+                          "WHERE path = :PATH "
                           "AND type = '4' "
                           "AND hidden = '0' LIMIT :LIMIT");
     query.bindValue(":PATH", im->m_path);
diff --git a/mythtv/programs/mythfrontend/gallerydatabasehelper.h b/mythtv/programs/mythfrontend/gallerydatabasehelper.h
index 70c4129..51b0868 100644
--- a/mythtv/programs/mythfrontend/gallerydatabasehelper.h
+++ b/mythtv/programs/mythfrontend/gallerydatabasehelper.h
@@ -17,7 +17,6 @@ public:
     GalleryDatabaseHelper();
     ~GalleryDatabaseHelper();
 
-    QList<int> GetStorageDirIDs();
     void LoadParentDirectory(QList<ImageMetadata *>*, int);
     void LoadDirectories(QMap<QString, ImageMetadata *>*);
     void LoadDirectories(QList<ImageMetadata *>*, int);
diff --git a/mythtv/programs/mythfrontend/galleryfilehelper.cpp b/mythtv/programs/mythfrontend/galleryfilehelper.cpp
index 48a3d89..8ce9a7c 100644
--- a/mythtv/programs/mythfrontend/galleryfilehelper.cpp
+++ b/mythtv/programs/mythfrontend/galleryfilehelper.cpp
@@ -24,7 +24,7 @@
  */
 GalleryFileHelper::GalleryFileHelper()
 {
-    m_backendHost   = gCoreContext->GetSetting("BackendServerIP","localhost");
+    m_backendHost   = gCoreContext->GetSetting("MasterServerIP","localhost");
     m_backendPort   = gCoreContext->GetNumSetting("BackendStatusPort", 6544);
 
     m_manager = new QNetworkAccessManager();
diff --git a/mythtv/programs/mythfrontend/gallerythumbgenthread.cpp b/mythtv/programs/mythfrontend/gallerythumbgenthread.cpp
index 8a72509..74e6c84 100644
--- a/mythtv/programs/mythfrontend/gallerythumbgenthread.cpp
+++ b/mythtv/programs/mythfrontend/gallerythumbgenthread.cpp
@@ -10,9 +10,10 @@
 #include "exitcodes.h"
 
 #include "imagemetadata.h"
+#include "imageutils.h"
 #include "gallerythumbgenthread.h"
 
-
+// FIXME: This should be on the backend only, not the frontend!
 
 /** \fn     GalleryThumbGenThread::GalleryThumbGenThread()
  *  \brief  Constructor
@@ -24,6 +25,8 @@ GalleryThumbGenThread::GalleryThumbGenThread()
             m_width(0), m_height(0),
             m_pause(false), m_fileListSize(0)
 {
+    QString sgName = IMAGE_STORAGE_GROUP;
+    m_storageGroup = StorageGroup(sgName, gCoreContext->GetHostName());
 }
 
 
@@ -124,7 +127,8 @@ void GalleryThumbGenThread::CreateImageThumbnail(ImageMetadata *im, int id)
     if (!dir.exists(im->m_thumbPath))
         dir.mkpath(im->m_thumbPath);
 
-    QString imageFileName = im->m_fileName;
+    QString imageFileName = m_storageGroup.FindFile(im->m_fileName);
+    LOG(VB_GENERAL, LOG_NOTICE, QString("Creating thumbnail for %1").arg(imageFileName));
 
     // If a folder thumbnail shall be created we need to get
     // the real filename from the thumbnail filename by removing
@@ -208,10 +212,12 @@ void GalleryThumbGenThread::CreateVideoThumbnail(ImageMetadata *im)
     if (!dir.exists(im->m_thumbPath))
         dir.mkpath(im->m_thumbPath);
 
+    QString videoFileName = m_storageGroup.FindFile(im->m_fileName);
+
     QString cmd = "mythpreviewgen";
     QStringList args;
     args << logPropagateArgs.split(" ", QString::SkipEmptyParts);
-    args << "--infile"  << '"' + im->m_fileName + '"';
+    args << "--infile"  << '"' + videoFileName + '"';
     args << "--outfile" << '"' + im->m_thumbFileNameList->at(0) + '"';
 
     MythSystemLegacy ms(cmd, args, kMSRunShell);
diff --git a/mythtv/programs/mythfrontend/gallerythumbgenthread.h b/mythtv/programs/mythfrontend/gallerythumbgenthread.h
index 6e39ba5..1a0417e 100644
--- a/mythtv/programs/mythfrontend/gallerythumbgenthread.h
+++ b/mythtv/programs/mythfrontend/gallerythumbgenthread.h
@@ -8,6 +8,7 @@
 // MythTV headers
 #include "mythuibuttontree.h"
 #include "imagemetadata.h"
+#include "storagegroup.h"
 
 #include "galleryfilehelper.h"
 #include "gallerydatabasehelper.h"
@@ -56,6 +57,7 @@ private:
     int m_fileListSize;
 
     QWaitCondition      m_condition;
+    StorageGroup        m_storageGroup;
 };
 
 #endif // GALLERYTHUMBGENTHREAD_H
diff --git a/mythtv/programs/mythfrontend/galleryviewhelper.cpp b/mythtv/programs/mythfrontend/galleryviewhelper.cpp
index 5eb31fe..3ebc4b3 100644
--- a/mythtv/programs/mythfrontend/galleryviewhelper.cpp
+++ b/mythtv/programs/mythfrontend/galleryviewhelper.cpp
@@ -137,10 +137,10 @@ void GalleryViewHelper::LoadTreeData()
     // Clear the list so that it can be populated with new data.
     m_currentNode->deleteAllChildren();
 
-    // If the parentId is not one of the directories in the storage group
+    // If the parent is a root directory
     // then add a additional directory at the beginning of the list that
     // is of the type kUpDirectory so that the user can navigate one level up.
-    if (!m_dbHelper->GetStorageDirIDs().contains(id))
+    if (id > 0)
     {
         m_dbHelper->LoadParentDirectory(dirList, id);
         LoadTreeNodeData(dirList, m_currentNode);
diff --git a/mythtv/programs/mythfrontend/gallerywidget.cpp b/mythtv/programs/mythfrontend/gallerywidget.cpp
index f8b1007..de59000 100644
--- a/mythtv/programs/mythfrontend/gallerywidget.cpp
+++ b/mythtv/programs/mythfrontend/gallerywidget.cpp
@@ -560,41 +560,10 @@ void GalleryWidget::LoadFile()
  */
 QString GalleryWidget::CreateImageUrl(QString &fileName)
 {
-    // TODO another way to get the images could be changing the
-    //      myth://SGNAME@host:Port/filename request to
-    //      http://host:Port/StorageGroup/SGNAME/filename
-
-    // Loop through all directories that belong to the defined storage
-    // group. Check if the current image belongs to one of them an
-    // remove the storage group path from the start of the image path.
-    // Example: If we have a storage group of "/mnt/pictures" and the
-    // path of the image is "/mnt/pictures/animals/mycat.png" then we
-    // want to get "animals/mycat.png" as a result.
-
-    for (int i = 0; i < m_gvh->m_sgDirList.size(); ++i)
-    {
-        // Unfortunately the path of the directory in the storage group
-        // has the format "myth://Bilder@ubuntu/mnt/pictures/" so we need
-        // to remove the stuff before the third slash.
-
-        QString path = m_gvh->m_sgDirList.at(i);
-        path.replace(QString("myth://%1@%2")
-                     .arg(m_gvh->m_sgName)
-                     .arg(gCoreContext->GetHostName()),"");
-
-        if (fileName.startsWith(path))
-        {
-            fileName.replace(path, "");
-            break;
-        }
-    }
-
-    // Prepare the url that will hold the path to the image
-    QString url = QString("myth://%1@%2:%3/%4")
-            .arg(m_gvh->m_sgName)
-            .arg(m_backendHost)
-            .arg(m_backendPort)
-            .arg(fileName);
+    QString url = gCoreContext->GenMythURL(gCoreContext->GetSetting("MasterServerIP"),
+                                           gCoreContext->GetNumSetting("MasterServerPort"),
+                                           fileName,
+                                           m_gvh->m_sgName);
 
     LOG(VB_GENERAL, LOG_INFO, QString("Loading image from url '%1'").arg(url));
 
-- 
1.7.10.2

