diff -Naur mythtv-master-20190408-g038e171-old/mythtv/programs/mythcommflag/ClassicLogoDetector.cpp mythtv-master-20190408-g038e171-new/mythtv/programs/mythcommflag/ClassicLogoDetector.cpp
--- mythtv-master-20190408-g038e171-old/mythtv/programs/mythcommflag/ClassicLogoDetector.cpp	2019-04-08 14:44:59.846666666 +0200
+++ mythtv-master-20190408-g038e171-new/mythtv/programs/mythcommflag/ClassicLogoDetector.cpp	2019-04-08 14:45:01.320000000 +0200
@@ -48,6 +48,12 @@
     m_commDetectLogoBadEdgeThreshold =
         gCoreContext->GetSetting("CommDetectLogoBadEdgeThreshold", "0.85")
         .toDouble();
+    m_commDetectLogoLocation =
+        gCoreContext->GetSetting("DetectLogoLocation", "NE");
+    m_commDetectLogoWidthRatio =
+        gCoreContext->GetNumSetting("DetectLogoWidthRatio", 6);
+    m_commDetectLogoHeightRatio =
+        gCoreContext->GetNumSetting("DetectLogoHeightRatio", 8);
 }
 
 unsigned int ClassicLogoDetector::getRequiredAvailableBufferForSearch()
@@ -230,8 +236,8 @@
         cerr << "Hit ENTER to continue" << endl;
         getchar();
 #endif
-        if (((m_logoMaxX - m_logoMinX) < (m_width / 4)) &&
-            ((m_logoMaxY - m_logoMinY) < (m_height / 4)) &&
+        if (((m_logoMaxX - m_logoMinX) < (m_width / m_commDetectLogoWidthRatio)) &&
+            ((m_logoMaxY - m_logoMinY) < (m_height / m_commDetectLogoHeightRatio)) &&
             (pixelsInMask > minPixelsInMask))
         {
             m_logoInfoAvailable = true;
@@ -449,14 +455,22 @@
 
     for (y = m_commDetectBorder + r; y < (m_height - m_commDetectBorder - r); y++)
     {
-        if ((y > (m_height/4)) && (y < (m_height * 3 / 4)))
+        if (
+            (m_commDetectLogoLocation.contains("N") && (y > (m_height/4))) ||
+            (m_commDetectLogoLocation.contains("S") && (y < (m_height * 3 / 4))) ||
+            ((y > (m_height/4)) && (y < (m_height * 3 / 4)))
+            )
             continue;
 
         for (x = m_commDetectBorder + r; x < (m_width - m_commDetectBorder - r); x++)
         {
             int edgeCount = 0;
 
-            if ((x > (m_width/4)) && (x < (m_width * 3 / 4)))
+            if (
+                (m_commDetectLogoLocation.contains("W") && (x > (m_width/4))) ||
+                (m_commDetectLogoLocation.contains("E") && (x < (m_width * 3 / 4))) ||
+                ((x > (m_width/4)) && (x < (m_width * 3 / 4)))
+                )
                 continue;
 
             pos = y * m_width + x;
diff -Naur mythtv-master-20190408-g038e171-old/mythtv/programs/mythcommflag/ClassicLogoDetector.h mythtv-master-20190408-g038e171-new/mythtv/programs/mythcommflag/ClassicLogoDetector.h
--- mythtv-master-20190408-g038e171-old/mythtv/programs/mythcommflag/ClassicLogoDetector.h	2019-04-08 14:44:59.846666666 +0200
+++ mythtv-master-20190408-g038e171-new/mythtv/programs/mythcommflag/ClassicLogoDetector.h	2019-04-08 14:45:01.320000000 +0200
@@ -35,8 +35,11 @@
     int                  m_commDetectLogoSamplesNeeded     {240};
     int                  m_commDetectLogoSampleSpacing     {2};
     int                  m_commDetectLogoSecondsNeeded     {624};
+    int                  m_commDetectLogoWidthRatio        {6};
+    int                  m_commDetectLogoHeightRatio       {8};
     double               m_commDetectLogoGoodEdgeThreshold {0.75};
     double               m_commDetectLogoBadEdgeThreshold  {0.85};
+    QString              m_commDetectLogoLocation          {"NE"};
 
     EdgeMaskEntry       *m_edgeMask                        {nullptr};
 
