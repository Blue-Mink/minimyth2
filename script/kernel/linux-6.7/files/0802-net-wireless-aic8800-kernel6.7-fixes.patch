diff --speed-large-files --no-dereference --minimal -Naur linux-6.7/drivers/net/wireless/aic8800/aic8800_bsp/aic_bsp_driver.c linux-6.7/drivers/net/wireless/aic8800/aic8800_bsp/aic_bsp_driver.c
--- linux-6.7/drivers/net/wireless/aic8800/aic8800_bsp/aic_bsp_driver.c	2024-01-08 12:36:33.081250365 +0100
+++ linux-6.7/drivers/net/wireless/aic8800/aic8800_bsp/aic_bsp_driver.c	2024-01-08 09:41:21.084548979 +0100
@@ -472,7 +472,7 @@
 #endif
 
 #define MD5(x) x[0],x[1],x[2],x[3],x[4],x[5],x[6],x[7],x[8],x[9],x[10],x[11],x[12],x[13],x[14],x[15]
-#define MD5PINRT "file md5:%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x\r\n"
+#define MD5PINRT "file md5:%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x"
 
 int rwnx_load_firmware(u32 **fw_buf, const char *name, struct device *device)
 {
@@ -1417,15 +1417,15 @@
     		*(data + 15) = aicbt_info[sdiodev->chipid].lpm_enable;
     		*(data + 17) = aicbt_info[sdiodev->chipid].txpwr_lvl;
 
-            printk("%s bt btmode[%d]:%d \r\n", __func__, sdiodev->chipid, aicbt_info[sdiodev->chipid].btmode);
-    		printk("%s bt uart_baud[%d]:%d \r\n", __func__, sdiodev->chipid, aicbt_info[sdiodev->chipid].uart_baud);
-    		printk("%s bt uart_flowctrl[%d]:%d \r\n", __func__, sdiodev->chipid, aicbt_info[sdiodev->chipid].uart_flowctrl);
-    		printk("%s bt lpm_enable[%d]:%d \r\n", __func__, sdiodev->chipid, aicbt_info[sdiodev->chipid].lpm_enable);
-    		printk("%s bt tx_pwr[%d]:%d \r\n", __func__, sdiodev->chipid, aicbt_info[sdiodev->chipid].txpwr_lvl);
+        	printk("%s bt btmode[%d]:%d", __func__, sdiodev->chipid, aicbt_info[sdiodev->chipid].btmode);
+    		printk("%s bt uart_baud[%d]:%d", __func__, sdiodev->chipid, aicbt_info[sdiodev->chipid].uart_baud);
+    		printk("%s bt uart_flowctrl[%d]:%d", __func__, sdiodev->chipid, aicbt_info[sdiodev->chipid].uart_flowctrl);
+    		printk("%s bt lpm_enable[%d]:%d", __func__, sdiodev->chipid, aicbt_info[sdiodev->chipid].lpm_enable);
+    		printk("%s bt tx_pwr[%d]:%d", __func__, sdiodev->chipid, aicbt_info[sdiodev->chipid].txpwr_lvl);
     	}
 
     	if (AICBT_PT_VER == p->type) {
-    		printk("aicbsp: bt patch version: %s\n", (char *)p->data);
+    		printk("aicbsp: bt patch version: %s", (char *)p->data);
     		continue;
     	}
 
diff --speed-large-files --no-dereference --minimal -Naur linux-6.7/drivers/net/wireless/aic8800/aic8800_bsp/aic_bsp_main.c linux-6.7/drivers/net/wireless/aic8800/aic8800_bsp/aic_bsp_main.c
--- linux-6.7/drivers/net/wireless/aic8800/aic8800_bsp/aic_bsp_main.c	2024-01-08 12:36:33.084583698 +0100
+++ linux-6.7/drivers/net/wireless/aic8800/aic8800_bsp/aic_bsp_main.c	2024-01-08 09:41:21.084548979 +0100
@@ -15,7 +15,8 @@
 #define DRV_AUTHOR            "AICSemi"
 #define DRV_VERS_MOD          "1.0"
 
-int aicwf_dbg_level_bsp = LOGERROR|LOGINFO|LOGDEBUG|LOGTRACE;
+//int aicwf_dbg_level_bsp = LOGERROR|LOGINFO|LOGDEBUG|LOGTRACE;
+int aicwf_dbg_level_bsp = LOGERROR;
 
 static struct platform_device *aicbsp_pdev;
 
diff --speed-large-files --no-dereference --minimal -Naur linux-6.7/drivers/net/wireless/aic8800/aic8800_btlpm/lpm.c linux-6.7/drivers/net/wireless/aic8800/aic8800_btlpm/lpm.c
--- linux-6.7/drivers/net/wireless/aic8800/aic8800_btlpm/lpm.c	2024-01-08 12:36:33.091250365 +0100
+++ linux-6.7/drivers/net/wireless/aic8800/aic8800_btlpm/lpm.c	2024-01-08 09:41:21.094548979 +0100
@@ -769,6 +769,16 @@
 }
 #endif
 
+enum of_gpio_flags {
+	OF_GPIO_ACTIVE_LOW = 0x1,
+	OF_GPIO_SINGLE_ENDED = 0x2,
+	OF_GPIO_OPEN_DRAIN = 0x4,
+	OF_GPIO_TRANSITORY = 0x8,
+	OF_GPIO_PULL_UP = 0x10,
+	OF_GPIO_PULL_DOWN = 0x20,
+	OF_GPIO_PULL_DISABLE = 0x40,
+};
+
 static int bluesleep_probe(struct platform_device *pdev)
 {
 #if 1
@@ -783,7 +793,7 @@
 	if (!bsi)
 		return -ENOMEM;
 
-	bsi->host_wake = of_get_named_gpio_flags(np, "bt_hostwake", 0, &config);
+	bsi->host_wake = of_get_named_gpio(np, "bt_hostwake", 0);
 	if (!gpio_is_valid(bsi->host_wake)) {
 		BT_ERR("get gpio bt_hostwake failed\n");
 		ret = -EINVAL;
@@ -791,7 +801,7 @@
 	}
 
 	/* set host_wake_assert */
-	bsi->host_wake_assert = (config == OF_GPIO_ACTIVE_LOW) ? 0 : 1;
+	bsi->host_wake_assert = (config == GPIOF_ACTIVE_LOW) ? 0 : 1;
 	BT_DBG("bt_hostwake gpio=%d assert=%d\n", bsi->host_wake, bsi->host_wake_assert);
 
 	if (assert_level != -1) {
@@ -838,7 +848,7 @@
 #endif
 	}
 
-	bsi->ext_wake = of_get_named_gpio_flags(np, "bt_wake", 0, &config);
+	bsi->ext_wake = of_get_named_gpio(np, "bt_wake", 0);
 	if (!gpio_is_valid(bsi->ext_wake)) {
 		BT_ERR("get gpio bt_wake failed\n");
 		ret = -EINVAL;
@@ -911,11 +921,11 @@
 	return 0;
 
 err3:
-	devm_gpio_free(dev, bsi->ext_wake);
+	//todo devm_gpio_free(dev, bsi->ext_wake);
 err2:
 	device_init_wakeup(dev, false);
 err1:
-	devm_gpio_free(dev, bsi->host_wake);
+	//todo devm_gpio_free(dev, bsi->host_wake);
 err0:
 	devm_kfree(dev, bsi);
 
diff --speed-large-files --no-dereference --minimal -Naur linux-6.7/drivers/net/wireless/aic8800/aic8800_fdrv/aicwf_sdio.c linux-6.7/drivers/net/wireless/aic8800/aic8800_fdrv/aicwf_sdio.c
--- linux-6.7/drivers/net/wireless/aic8800/aic8800_fdrv/aicwf_sdio.c	2024-01-08 12:36:33.094583698 +0100
+++ linux-6.7/drivers/net/wireless/aic8800/aic8800_fdrv/aicwf_sdio.c	2024-01-08 09:41:21.094548979 +0100
@@ -503,15 +503,15 @@
 
 	if(vid == SDIO_VENDOR_ID_AIC8801 && did == SDIO_DEVICE_ID_AIC8801){
 		sdio_dev->chipid = PRODUCT_ID_AIC8801;
-		AICWFDBG(LOGINFO, "%s USE AIC8801\r\n", __func__);
+		AICWFDBG(LOGINFO, "%s USE AIC8801\r", __func__);
 		return 0;
 	}else if(vid == SDIO_VENDOR_ID_AIC8800DC && did == SDIO_DEVICE_ID_AIC8800DC){
 		sdio_dev->chipid = PRODUCT_ID_AIC8800DC;
-		AICWFDBG(LOGINFO, "%s USE AIC8800DC\r\n", __func__);
+		AICWFDBG(LOGINFO, "%s USE AIC8800DC\r", __func__);
 		return 0;
 	}else if(vid == SDIO_VENDOR_ID_AIC8800D80 && did == SDIO_DEVICE_ID_AIC8800D80){
 		sdio_dev->chipid = PRODUCT_ID_AIC8800D80;
-		AICWFDBG(LOGINFO, "%s USE AIC8800D80\r\n", __func__);
+		AICWFDBG(LOGINFO, "%s USE AIC8800D80\r", __func__);
 		return 0;
 	}else{
 		return -1;
diff --speed-large-files --no-dereference --minimal -Naur linux-6.7/drivers/net/wireless/aic8800/aic8800_fdrv/Makefile linux-6.7/drivers/net/wireless/aic8800/aic8800_fdrv/Makefile
--- linux-6.7/drivers/net/wireless/aic8800/aic8800_fdrv/Makefile	2024-01-08 12:36:33.094583698 +0100
+++ linux-6.7/drivers/net/wireless/aic8800/aic8800_fdrv/Makefile	2024-01-08 09:41:21.097882312 +0100
@@ -116,7 +116,7 @@
 
 # extra DEBUG config
 CONFIG_RWNX_SW_PROFILING ?= n
-CONFIG_RWNX_DBG ?= y
+CONFIG_RWNX_DBG ?= n
 CONFIG_DEBUG_FS ?= n
 
 obj-$(CONFIG_AIC8800_WLAN_SUPPORT) := $(MODULE_NAME).o
@@ -186,6 +186,8 @@
 ccflags-y += -DNX_TX_MAX_RATES=4
 ccflags-y += -DNX_CHAN_CTXT_CNT=3
 
+ccflags-y += -Wno-incompatible-pointer-types
+
 # FW ARCH:
 ccflags-$(CONFIG_RWNX_SDM) += -DCONFIG_RWNX_SDM
 ccflags-$(CONFIG_RWNX_TL4) += -DCONFIG_RWNX_TL4
diff --speed-large-files --no-dereference --minimal -Naur linux-6.7/drivers/net/wireless/aic8800/aic8800_fdrv/rwnx_main.c linux-6.7/drivers/net/wireless/aic8800/aic8800_fdrv/rwnx_main.c
--- linux-6.7/drivers/net/wireless/aic8800/aic8800_fdrv/rwnx_main.c	2024-01-08 12:36:33.097917032 +0100
+++ linux-6.7/drivers/net/wireless/aic8800/aic8800_fdrv/rwnx_main.c	2024-01-08 09:41:21.101215646 +0100
@@ -502,7 +502,8 @@
 
 
 extern uint8_t scanning;
-int aicwf_dbg_level = LOGERROR|LOGINFO|LOGDEBUG|LOGTRACE;
+//int aicwf_dbg_level = LOGERROR|LOGINFO|LOGDEBUG|LOGTRACE;
+int aicwf_dbg_level = LOGERROR;
 module_param(aicwf_dbg_level, int, 0660);
 int testmode = 0;
 char aic_fw_path[200];
@@ -762,7 +763,11 @@
 		cfg80211_disconnected(vif->ndev, 0, NULL, 0, 0, GFP_KERNEL);
 		#endif
 	} else {
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 7, 0))
+		wiphy_lock(vif->wdev.wiphy);
+#else
 		mutex_lock(&vif->wdev.mtx);
+#endif
 		__acquire(&vif->wdev.mtx);
 		spin_lock_bh(&rwnx_hw->cb_lock);
 		rwnx_chanctx_unlink(vif);
@@ -780,7 +785,11 @@
 #else
                 cfg80211_ch_switch_notify(vif->ndev, &csa->chandef);
 #endif
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 7, 0))
+		wiphy_lock(vif->wdev.wiphy);
+#else
 		mutex_unlock(&vif->wdev.mtx);
+#endif
 		__release(&vif->wdev.mtx);
 	}
 	rwnx_del_csa(vif);
@@ -2946,10 +2955,14 @@
 
 	if (type == NL80211_IFTYPE_AP_VLAN) {
 		memcpy(ndev->dev_addr, params->macaddr, ETH_ALEN);
+		//warpme: hack to mute kernel oops by no yet migration to dev_addr_set() and co.
+		memcpy(ndev->dev_addr_shadow, params->macaddr, ETH_ALEN);
 		memcpy(vif->wdev.address, params->macaddr, ETH_ALEN);
 	} else {
 		memcpy(ndev->dev_addr, rwnx_hw->wiphy->perm_addr, ETH_ALEN);
-		ndev->dev_addr[5] ^= vif_idx;
+		//warpme: hack to mute kernel oops by no yet migration to dev_addr_set() and co.
+		memcpy(ndev->dev_addr_shadow, rwnx_hw->wiphy->perm_addr, ETH_ALEN);
+		vif->wdev.address[5] ^= vif_idx;
 		memcpy(vif->wdev.address, ndev->dev_addr, ETH_ALEN);
 	}
 
@@ -5443,7 +5456,7 @@
 	} else {
 		INIT_WORK(&csa->work, rwnx_csa_finish);
 #if LINUX_VERSION_CODE >= HIGH_KERNEL_VERSION
-                cfg80211_ch_switch_started_notify(dev, &csa->chandef, 0, params->count, false);
+                cfg80211_ch_switch_started_notify(dev, &csa->chandef, 0, params->count, false, 0);
 #elif LINUX_VERSION_CODE >= KERNEL_VERSION(5, 11, 0)
                 cfg80211_ch_switch_started_notify(dev, &csa->chandef, params->count, params->block_tx);
 #else
@@ -6446,8 +6459,8 @@
 	.tdls_channel_switch = rwnx_cfg80211_tdls_channel_switch,
 	.tdls_cancel_channel_switch = rwnx_cfg80211_tdls_cancel_channel_switch,
 #endif
-	.tdls_mgmt = rwnx_cfg80211_tdls_mgmt,
-	.tdls_oper = rwnx_cfg80211_tdls_oper,
+	//todo .tdls_mgmt = rwnx_cfg80211_tdls_mgmt,
+	//todo .tdls_oper = rwnx_cfg80211_tdls_oper,
 	.change_bss = rwnx_cfg80211_change_bss,
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 17, 0) || defined(CONFIG_WPA3_FOR_OLD_KERNEL)
 	.external_auth = rwnx_cfg80211_external_auth,
diff --speed-large-files --no-dereference --minimal -Naur linux-6.7/drivers/net/wireless/aic8800/aic8800_fdrv/rwnx_mod_params.c linux-6.7/drivers/net/wireless/aic8800/aic8800_fdrv/rwnx_mod_params.c
--- linux-6.7/drivers/net/wireless/aic8800/aic8800_fdrv/rwnx_mod_params.c	2024-01-08 12:36:33.101250365 +0100
+++ linux-6.7/drivers/net/wireless/aic8800/aic8800_fdrv/rwnx_mod_params.c	2024-01-08 09:41:21.101215646 +0100
@@ -1531,9 +1531,6 @@
         // function, that needs to be called after wiphy registration
         memcpy(country_code, default_ccode, sizeof(default_ccode));
 		regdomain = getRegdomainFromRwnxDB(wiphy, default_ccode);
-        printk(KERN_CRIT
-               "\n\n%s: CAUTION: USING PERMISSIVE CUSTOM REGULATORY RULES\n\n",
-               __func__);
         wiphy->regulatory_flags |= REGULATORY_CUSTOM_REG;
         wiphy->regulatory_flags |= REGULATORY_IGNORE_STALE_KICKOFF;
         wiphy_apply_custom_regulatory(wiphy, regdomain);
@@ -1565,9 +1562,6 @@
 		// Apply custom regulatory. Note that for recent kernel versions we use instead the
 		// REGULATORY_WIPHY_SELF_MANAGED flag, along with the regulatory_set_wiphy_regd()
 		// function, that needs to be called after wiphy registration
-		printk(KERN_CRIT
-			   "\n\n%s: CAUTION: USING PERMISSIVE CUSTOM REGULATORY RULES\n\n",
-			   __func__);
 		wiphy->regulatory_flags |= REGULATORY_CUSTOM_REG;
 		wiphy->regulatory_flags |= REGULATORY_IGNORE_STALE_KICKOFF;
 		wiphy_apply_custom_regulatory(wiphy, &rwnx_regdom);
@@ -1710,11 +1704,15 @@
 // For older kernel version, the custom regulatory is applied before the wiphy
 // registration (in rwnx_set_wiphy_params()), so nothing has to be done here
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 0, 0)
-    if (!rwnx_hw->mod_params->custregd)
-        return;
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 4, 0)
+	// nop
+#else
+	wiphy->regulatory_flags |= REGULATORY_IGNORE_STALE_KICKOFF;
+#endif
+	wiphy->regulatory_flags |= REGULATORY_WIPHY_SELF_MANAGED;
 
-    wiphy->regulatory_flags |= REGULATORY_IGNORE_STALE_KICKOFF;
-    wiphy->regulatory_flags |= REGULATORY_WIPHY_SELF_MANAGED;
+	if (!rwnx_hw->mod_params->custregd)
+		return;
 
     rtnl_lock();
 	#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 12, 0)
@@ -1728,10 +1726,7 @@
 	#endif
 
     else{
-        wiphy_err(wiphy,"\n"
-                  "*******************************************************\n"
-                  "** CAUTION: USING PERMISSIVE CUSTOM REGULATORY RULES **\n"
-                  "*******************************************************\n");
+	//
     }
      rtnl_unlock();
 #endif
diff --speed-large-files --no-dereference --minimal -Naur linux-6.7/drivers/net/wireless/aic8800/aic8800_fdrv/rwnx_platform.c linux-6.7/drivers/net/wireless/aic8800/aic8800_fdrv/rwnx_platform.c
--- linux-6.7/drivers/net/wireless/aic8800/aic8800_fdrv/rwnx_platform.c	2024-01-08 12:36:33.101250365 +0100
+++ linux-6.7/drivers/net/wireless/aic8800/aic8800_fdrv/rwnx_platform.c	2024-01-08 09:41:21.104548979 +0100
@@ -270,7 +270,7 @@
 #endif
 
 #define MD5(x) x[0],x[1],x[2],x[3],x[4],x[5],x[6],x[7],x[8],x[9],x[10],x[11],x[12],x[13],x[14],x[15]
-#define MD5PINRT "file md5:%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x\r\n"
+#define MD5PINRT "file md5:%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x"
 
 static int rwnx_load_firmware(u32 **fw_buf, const char *name, struct device *device)
 {
diff --speed-large-files --no-dereference --minimal -Naur linux-6.7/drivers/net/wireless/aic8800/aic8800_fdrv/rwnx_version.h linux-6.7/drivers/net/wireless/aic8800/aic8800_fdrv/rwnx_version.h
--- linux-6.7/drivers/net/wireless/aic8800/aic8800_fdrv/rwnx_version.h	2024-01-08 12:36:33.104583699 +0100
+++ linux-6.7/drivers/net/wireless/aic8800/aic8800_fdrv/rwnx_version.h	2024-01-08 09:41:21.107882311 +0100
@@ -6,7 +6,7 @@
 static inline void rwnx_print_version(void)
 {
 	AICWFDBG(LOGINFO, RWNX_VERS_BANNER"\n");
-	AICWFDBG(LOGINFO, "RELEASE_DATE:%s \r\n", RELEASE_DATE);
+	AICWFDBG(LOGINFO, "RELEASE_DATE:%s \r", RELEASE_DATE);
 }
 
 #endif /* _RWNX_VERSION_H_ */
