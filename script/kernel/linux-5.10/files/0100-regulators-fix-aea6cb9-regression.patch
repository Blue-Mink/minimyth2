diff -Naur linux-5.10-rc2-old/drivers/regulator/core.c linux-5.10-rc2-new/drivers/regulator/core.c
--- linux-5.10-rc2-old/drivers/regulator/core.c	2020-11-01 23:43:51.000000000 +0100
+++ linux-5.10-rc2-new/drivers/regulator/core.c	2020-11-06 20:10:59.753333334 +0100
@@ -5290,20 +5290,15 @@
 	else if (regulator_desc->supply_name)
 		rdev->supply_name = regulator_desc->supply_name;
 
+	/*
+	 * Attempt to resolve the regulator supply, if specified,
+	 * but don't return an error if we fail because we will try
+	 * to resolve it again later as more regulators are added.
+	 */
+	if (regulator_resolve_supply(rdev))
+		rdev_dbg(rdev, "unable to resolve supply\n");
+
 	ret = set_machine_constraints(rdev, constraints);
-	if (ret == -EPROBE_DEFER) {
-		/* Regulator might be in bypass mode and so needs its supply
-		 * to set the constraints */
-		/* FIXME: this currently triggers a chicken-and-egg problem
-		 * when creating -SUPPLY symlink in sysfs to a regulator
-		 * that is just being created */
-		ret = regulator_resolve_supply(rdev);
-		if (!ret)
-			ret = set_machine_constraints(rdev, constraints);
-		else
-			rdev_dbg(rdev, "unable to resolve supply early: %pe\n",
-				 ERR_PTR(ret));
-	}
 	if (ret < 0)
 		goto wash;
 
