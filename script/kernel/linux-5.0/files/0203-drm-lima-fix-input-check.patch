From 0c77e40b77ae3fe8bbae6b88484c51f398221b39 Mon Sep 17 00:00:00 2001
From: Qiang Yu <yuq825@gmail.com>
Date: Thu, 7 Feb 2019 21:41:19 +0800
Subject: [PATCH 03/20] drm/lima: fix input check

Signed-off-by: Qiang Yu <yuq825@gmail.com>
---
 drivers/gpu/drm/lima/lima_drv.c | 45 ++++++++++++++++++++++++++---------------
 drivers/gpu/drm/lima/lima_gem.c |  3 +++
 2 files changed, 32 insertions(+), 16 deletions(-)

diff --git a/drivers/gpu/drm/lima/lima_drv.c b/drivers/gpu/drm/lima/lima_drv.c
index 132071b..6962d2d 100644
--- a/drivers/gpu/drm/lima/lima_drv.c
+++ b/drivers/gpu/drm/lima/lima_drv.c
@@ -92,7 +92,8 @@ static int lima_ioctl_gem_submit(struct drm_device *dev, void *data, struct drm_
 	struct lima_sched_task *task;
 	struct lima_ctx *ctx;
 	struct lima_submit submit = {0};
-	int err = 0, size;
+	size_t size;
+	int err = 0;
 
 	if (args->pipe >= lima_pipe_num || args->nr_bos == 0)
 		return -EINVAL;
@@ -105,9 +106,7 @@ static int lima_ioctl_gem_submit(struct drm_device *dev, void *data, struct drm_
 	if (args->frame_size != pipe->frame_size)
 		return -EINVAL;
 
-	size = args->nr_bos * (sizeof(*submit.bos) + sizeof(*submit.vbs)) +
-		args->nr_deps * sizeof(*submit.deps);
-	bos = kzalloc(size, GFP_KERNEL);
+	bos = kvcalloc(args->nr_bos, sizeof(*submit.bos), GFP_KERNEL);
 	if (!bos)
 		return -ENOMEM;
 
@@ -117,37 +116,46 @@ static int lima_ioctl_gem_submit(struct drm_device *dev, void *data, struct drm_
 		goto out0;
 	}
 
-	vbs = (void *)bos + size;
+	vbs = kvcalloc(args->nr_bos, sizeof(*submit.vbs), GFP_KERNEL);
+	if (!vbs) {
+		err = -ENOMEM;
+		goto out0;
+	}
 
 	if (args->nr_deps) {
-		deps = (void *)vbs + args->nr_bos * sizeof(*submit.vbs);
+		deps = kvcalloc(args->nr_deps, sizeof(*submit.deps), GFP_KERNEL);
+		if (!deps) {
+			err = -ENOMEM;
+			goto out1;
+		}
+
 		size = args->nr_deps * sizeof(*submit.deps);
 		if (copy_from_user(deps, u64_to_user_ptr(args->deps), size)) {
 			err = -EFAULT;
-			goto out0;
+			goto out2;
 		}
 	}
 
 	task = kmem_cache_zalloc(pipe->task_slab, GFP_KERNEL);
 	if (!task) {
 		err = -ENOMEM;
-		goto out0;
+		goto out2;
 	}
 
 	task->frame = task + 1;
 	if (copy_from_user(task->frame, u64_to_user_ptr(args->frame), args->frame_size)) {
 		err = -EFAULT;
-		goto out1;
+		goto out3;
 	}
 
 	err = pipe->task_validate(pipe, task);
 	if (err)
-		goto out1;
+		goto out3;
 
 	ctx = lima_ctx_get(&priv->ctx_mgr, args->ctx);
 	if (!ctx) {
 		err = -ENOENT;
-		goto out1;
+		goto out3;
 	}
 
 	submit.pipe = args->pipe;
@@ -169,11 +177,16 @@ static int lima_ioctl_gem_submit(struct drm_device *dev, void *data, struct drm_
 	}
 
 	lima_ctx_put(ctx);
-out1:
+out3:
 	if (err)
 		kmem_cache_free(pipe->task_slab, task);
+out2:
+	if (deps)
+		kvfree(deps);
+out1:
+	kvfree(vbs);
 out0:
-	kfree(bos);
+	kvfree(bos);
 	return err;
 }
 
@@ -226,8 +239,8 @@ static int lima_ioctl_gem_wait(struct drm_device *dev, void *data, struct drm_fi
 {
 	struct drm_lima_gem_wait *args = data;
 
-	if (!(args->op & (LIMA_GEM_WAIT_READ|LIMA_GEM_WAIT_WRITE)))
-	    return -EINVAL;
+	if (args->op & ~(LIMA_GEM_WAIT_READ|LIMA_GEM_WAIT_WRITE))
+		return -EINVAL;
 
 	return lima_gem_wait(file, args->handle, args->op, args->timeout_ns);
 }
@@ -274,7 +287,7 @@ static int lima_drm_driver_open(struct drm_device *dev, struct drm_file *file)
 		goto err_out0;
 	}
 
-        lima_ctx_mgr_init(&priv->ctx_mgr);
+	lima_ctx_mgr_init(&priv->ctx_mgr);
 
 	file->driver_priv = priv;
 	return 0;
diff --git a/drivers/gpu/drm/lima/lima_gem.c b/drivers/gpu/drm/lima/lima_gem.c
index b5e768d..69b3d95 100644
--- a/drivers/gpu/drm/lima/lima_gem.c
+++ b/drivers/gpu/drm/lima/lima_gem.c
@@ -425,6 +425,9 @@ int lima_gem_wait(struct drm_file *file, u32 handle, u32 op, u64 timeout_ns)
 	signed long ret;
 	unsigned long timeout;
 
+	if (!op)
+		return 0;
+
 	obj = drm_gem_object_lookup(file, handle);
 	if (!obj)
 		return -ENOENT;
-- 
2.7.1

