
This patch fixes 5.19 kernel oops like this:

------------[ cut here ]------------
[    4.264867] WARNING: CPU: 3 PID: 38 at drivers/gpu/drm/vc4/vc4_hdmi_regs.h:456 vc5_hdmi_reset+0x1e0/0x230
[    4.264886] Modules linked in: i2c_brcmstb rfkill broadcom bcm_phy_lib ir_rc6_decoder rpivid_hevc(C) v4l2_mem2mem videobuf2_v4l2 videobuf2_dma_contig rc_rc6_mce videobuf2_memops mceusb(+) videobuf2_common bcm2835_wdt rc_core genet(+) videodev mc v3d mdio_bcm_unimac gpu_sched bcm2711_thermal drm_shmem_helper vchiq(C) i2c_bcm2835 crct10dif_ce overlay
[    4.265007] CPU: 3 PID: 38 Comm: kworker/u8:1 Tainted: G        WC        5.19.3 #1
[    4.265018] Hardware name: Raspberry Pi 4 Model B (DT)
[    4.265025] Workqueue: events_unbound deferred_probe_work_func
[    4.265042] pstate: 600000c5 (nZCv daIF -PAN -UAO -TCO -DIT -SSBS BTYPE=--)
[    4.265054] pc : vc5_hdmi_reset+0x1e0/0x230
[    4.265067] lr : vc5_hdmi_reset+0xa0/0x230
[    4.265079] sp : ffff80000a07b920
[    4.265085] x29: ffff80000a07b920 x28: 0000000000000000 x27: 0000000000000000
[    4.265105] x26: ffff800008efa6e8 x25: ffff800008efa728 x24: ffff800008efa728
[    4.265124] x23: ffff000040a29000 x22: ffff800008efc120 x21: ffff000040a2dca8
[    4.265143] x20: 0000000000000000 x19: ffff000040a2d080 x18: ffffffffffffffff
[    4.265162] x17: ffff80007664a000 x16: ffff800009e74000 x15: ffffffffffffffff
[    4.265182] x14: 0000000000000000 x13: 0000000000000010 x12: ffff800009d44ab8
[    4.265201] x11: ffff800009d44a98 x10: ffff84000b6e721f x9 : ffff800008dc5f9c
[    4.265220] x8 : 0101010101010101 x7 : 0000000000000000 x6 : 0000000000000000
[    4.265238] x5 : ffff80000a07b880 x4 : 0000000000000030 x3 : ffff80000a13b300
[    4.265257] x2 : 0000000000000002 x1 : ffff800008efc120 x0 : 0000000000000003
[    4.265276] Call trace:
[    4.265281]  vc5_hdmi_reset+0x1e0/0x230
[    4.265294]  vc4_hdmi_runtime_resume+0x68/0x2bc
[    4.265308]  vc4_hdmi_bind+0x220/0x5b0
[    4.265321]  component_bind+0x68/0x16c
[    4.265335]  component_bind_all+0xd0/0x160
[    4.265349]  vc4_drm_bind+0x110/0x2e0
[    4.265359]  try_to_bring_up_aggregate_device+0x98/0x150
[    4.265374]  component_master_add_with_match+0xd8/0x114
[    4.265388]  vc4_platform_drm_probe+0xc0/0xf4
[    4.265398]  platform_probe+0x6c/0xc0
[    4.265407]  really_probe+0x194/0x3e0
[    4.265420]  __driver_probe_device+0x114/0x18c
[    4.265433]  driver_probe_device+0x40/0xf0
[    4.265446]  __device_attach_driver+0x9c/0x12c
[    4.265460]  bus_for_each_drv+0x7c/0xd0
[    4.265471]  __device_attach+0xa0/0x1c0
[    4.265484]  device_initial_probe+0x18/0x20
[    4.265497]  bus_probe_device+0x9c/0xac
[    4.265509]  deferred_probe_work_func+0xb8/0x110
[    4.265522]  process_one_work+0x1c8/0x424
[    4.265537]  worker_thread+0x70/0x40c
[    4.265550]  kthread+0xe8/0xf4
[    4.265564]  ret_from_fork+0x10/0x20
[    4.265575] ---[ end trace 0000000000000000 ]---


diff --speed-large-files --no-dereference --minimal -Naur linux-5.19.3/drivers/gpu/drm/vc4/Kconfig linux-5.19.3/drivers/gpu/drm/vc4/Kconfig
--- linux-5.19.3/drivers/gpu/drm/vc4/Kconfig	2022-08-21 15:20:09.000000000 +0200
+++ linux-5.19.3/drivers/gpu/drm/vc4/Kconfig	2022-08-22 09:51:37.139985781 +0200
@@ -8,6 +8,7 @@
 	depends on DRM
 	depends on SND && SND_SOC
 	depends on COMMON_CLK
+	depends on PM
 	select DRM_DISPLAY_HDMI_HELPER
 	select DRM_DISPLAY_HELPER
 	select DRM_KMS_HELPER
diff --speed-large-files --no-dereference --minimal -Naur linux-5.19.3/drivers/gpu/drm/vc4/vc4_hdmi.c linux-5.19.3/drivers/gpu/drm/vc4/vc4_hdmi.c
--- linux-5.19.3/drivers/gpu/drm/vc4/vc4_hdmi.c	2022-08-21 15:20:09.000000000 +0200
+++ linux-5.19.3/drivers/gpu/drm/vc4/vc4_hdmi.c	2022-08-22 09:51:37.139985781 +0200
@@ -2875,7 +2875,7 @@
 	return 0;
 }
 
-static int __maybe_unused vc4_hdmi_runtime_suspend(struct device *dev)
+static int vc4_hdmi_runtime_suspend(struct device *dev)
 {
 	struct vc4_hdmi *vc4_hdmi = dev_get_drvdata(dev);
 
@@ -2992,17 +2992,15 @@
 			vc4_hdmi->disable_4kp60 = true;
 	}
 
+	pm_runtime_enable(dev);
+
 	/*
-	 * We need to have the device powered up at this point to call
-	 * our reset hook and for the CEC init.
+	 *  We need to have the device powered up at this point to call
+	 *  our reset hook and for the CEC init.
 	 */
-	ret = vc4_hdmi_runtime_resume(dev);
+	ret = pm_runtime_resume_and_get(dev);
 	if (ret)
-		goto err_put_ddc;
-
-	pm_runtime_get_noresume(dev);
-	pm_runtime_set_active(dev);
-	pm_runtime_enable(dev);
+		goto err_disable_runtime_pm;
 
 	if ((of_device_is_compatible(dev->of_node, "brcm,bcm2711-hdmi0") ||
 	     of_device_is_compatible(dev->of_node, "brcm,bcm2711-hdmi1")) &&
@@ -3048,6 +3046,7 @@
 err_destroy_encoder:
 	drm_encoder_cleanup(encoder);
 	pm_runtime_put_sync(dev);
+err_disable_runtime_pm:
 	pm_runtime_disable(dev);
 err_put_ddc:
 	put_device(&vc4_hdmi->ddc->dev);
