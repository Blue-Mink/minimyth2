From 63e55869ef2aadad6a5cba3af70e7447f8f33ebe Mon Sep 17 00:00:00 2001
From: Ondrej Jirman <megous@megous.com>
Date: Sun, 1 Sep 2019 21:23:04 +0200
Subject: [PATCH 14/26] thermal: sun8i: Add support for A83T

It doesn't have bus clock/reset, otherwise it's similar to H3.

Signed-off-by: Ondrej Jirman <megous@megous.com>
---
 drivers/thermal/sun8i_thermal.c | 34 +++++++++++++++++++++++++++------
 1 file changed, 28 insertions(+), 6 deletions(-)

diff --git a/drivers/thermal/sun8i_thermal.c b/drivers/thermal/sun8i_thermal.c
index c9b1b33f210b..0c186596d5e8 100644
--- a/drivers/thermal/sun8i_thermal.c
+++ b/drivers/thermal/sun8i_thermal.c
@@ -68,6 +68,7 @@ struct tsensor {
 
 struct ths_thermal_chip {
 	bool            has_mod_clk;
+	bool            has_bus_clk_reset;
 	int		sensor_num;
 	int		offset;
 	int		scale;
@@ -339,13 +340,15 @@ static int sun8i_ths_resource_init(struct ths_device *tmdev)
 	if (IS_ERR(tmdev->regmap))
 		return PTR_ERR(tmdev->regmap);
 
-	tmdev->reset = devm_reset_control_get(dev, 0);
-	if (IS_ERR(tmdev->reset))
-		return PTR_ERR(tmdev->reset);
+	if (tmdev->chip->has_bus_clk_reset) {
+		tmdev->reset = devm_reset_control_get(dev, 0);
+		if (IS_ERR(tmdev->reset))
+			return PTR_ERR(tmdev->reset);
 
-	tmdev->bus_clk = devm_clk_get(&pdev->dev, "bus");
-	if (IS_ERR(tmdev->bus_clk))
-		return PTR_ERR(tmdev->bus_clk);
+		tmdev->bus_clk = devm_clk_get(&pdev->dev, "bus");
+		if (IS_ERR(tmdev->bus_clk))
+			return PTR_ERR(tmdev->bus_clk);
+	}
 
 	if (tmdev->chip->has_mod_clk) {
 		tmdev->mod_clk = devm_clk_get(&pdev->dev, "mod");
@@ -540,9 +543,23 @@ static int sun8i_ths_remove(struct platform_device *pdev)
 	return 0;
 }
 
+static const struct ths_thermal_chip sun8i_a83t_ths = {
+	.sensor_num = 3,
+
+	// values taken from A83T user manual (T = (2719-Tem)/14.186)
+	.scale = 705,
+	.offset = 191668,
+
+	.temp_data_base = SUN8I_THS_TEMP_DATA,
+	.calibrate = sun8i_h3_ths_calibrate,
+	.init = sun8i_h3_thermal_init,
+	.irq_ack = sun8i_h3_irq_ack,
+};
+
 static const struct ths_thermal_chip sun8i_h3_ths = {
 	.sensor_num = 1,
 	.has_mod_clk = true,
+	.has_bus_clk_reset = true,
 
 	// original BSP divs by 8.253 adds 217
 	.scale = 1211,
@@ -558,6 +575,7 @@ static const struct ths_thermal_chip sun8i_r40_ths = {
 	.offset = 251086,
 	.scale = 1130,
 	.has_mod_clk = true,
+	.has_bus_clk_reset = true,
 	.temp_data_base = SUN8I_THS_TEMP_DATA,
 	.calibrate = sun8i_h3_ths_calibrate,
 	.init = sun8i_h3_thermal_init,
@@ -569,6 +587,7 @@ static const struct ths_thermal_chip sun50i_a64_ths = {
 	.offset = 253890,
 	.scale = 1170,
 	.has_mod_clk = true,
+	.has_bus_clk_reset = true,
 	.temp_data_base = SUN8I_THS_TEMP_DATA,
 	.calibrate = sun8i_h3_ths_calibrate,
 	.init = sun8i_h3_thermal_init,
@@ -578,6 +597,7 @@ static const struct ths_thermal_chip sun50i_a64_ths = {
 static const struct ths_thermal_chip sun50i_h5_ths = {
 	.sensor_num = 2,
 	.has_mod_clk = true,
+	.has_bus_clk_reset = true,
 	.temp_data_base = SUN8I_THS_TEMP_DATA,
 	.calibrate = sun8i_h3_ths_calibrate,
 	.init = sun8i_h3_thermal_init,
@@ -587,6 +607,7 @@ static const struct ths_thermal_chip sun50i_h5_ths = {
 
 static const struct ths_thermal_chip sun50i_h6_ths = {
 	.sensor_num = 2,
+	.has_bus_clk_reset = true,
 	.ft_deviation = 7000,
 	.offset = 187744,
 	.scale = 672,
@@ -597,6 +618,7 @@ static const struct ths_thermal_chip sun50i_h6_ths = {
 };
 
 static const struct of_device_id of_ths_match[] = {
+	{ .compatible = "allwinner,sun8i-a83t-ths", .data = &sun8i_a83t_ths },
 	{ .compatible = "allwinner,sun8i-h3-ths", .data = &sun8i_h3_ths },
 	{ .compatible = "allwinner,sun8i-r40-ths", .data = &sun8i_r40_ths },
 	{ .compatible = "allwinner,sun50i-a64-ths", .data = &sun50i_a64_ths },
-- 
2.23.0

