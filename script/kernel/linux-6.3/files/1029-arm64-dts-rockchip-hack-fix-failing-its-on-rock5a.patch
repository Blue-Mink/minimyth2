
This hack workarrounds DICv3 ITS issue on rk3588s devices looking in dmesg like this:

[    0.000000] ITS [mem 0xfe640000-0xfe65ffff]
[    0.000000] ITS@0x00000000fe640000: allocated 8192 Devices @1001e0000 (indirect, esz 8, psz 64K, shr 1)
[    0.000000] ITS@0x00000000fe640000: allocated 32768 Interrupt Collections @1001f0000 (flat, esz 2, psz 64K, shr 1)
[    0.000000] ITS [mem 0xfe660000-0xfe67ffff]
[    0.000000] ITS@0x00000000fe660000: allocated 8192 Devices @100210000 (indirect, esz 8, psz 64K, shr 1)
[    0.000000] ITS@0x00000000fe660000: allocated 32768 Interrupt Collections @100220000 (flat, esz 2, psz 64K, shr 1)
[    0.000000] GICv3: using LPI property table @0x0000000100230000
[    0.000000] GICv3: CPU0: using allocated LPI pending table @0x0000000100240000
[    0.000000] ITS queue timeout (64 1)
[    0.000000] ITS cmd its_build_mapc_cmd failed
[    0.000000] ITS queue timeout (128 1)
[    0.000000] ITS cmd its_build_invall_cmd failed
[    0.000000] ITS queue timeout (64 1)
[    0.000000] ITS cmd its_build_mapc_cmd failed
[    0.000000] ITS queue timeout (128 1)
[    0.000000] ITS cmd its_build_invall_cmd failed


diff --speed-large-files --no-dereference --minimal -Naur linux-6.3/arch/arm64/boot/dts/rockchip/rk3588s-rock-5a.dts linux-6.3/arch/arm64/boot/dts/rockchip/rk3588s-rock-5a.dts
--- linux-6.3/arch/arm64/boot/dts/rockchip/rk3588s-rock-5a.dts	2023-04-27 18:28:50.643274756 +0200
+++ linux-6.3/arch/arm64/boot/dts/rockchip/rk3588s-rock-5a.dts	2023-04-27 18:27:38.276610737 +0200
@@ -10,7 +10,7 @@
 
 / {
 	model = "Radxa ROCK 5 Model A";
-	compatible = "radxa,rock-5a", "rockchip,rk3588s";
+	compatible = "radxa,rock-5a", "rockchip,rk3588";
 
 	aliases {
 		mmc0 = &sdhci;
